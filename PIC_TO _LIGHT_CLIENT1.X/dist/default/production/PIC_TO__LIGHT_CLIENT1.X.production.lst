

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Mar 19 16:57:07 2025

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4580 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataCOMRAM
    88   00111E                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _digit@ssd_display$F316
    92   00111E  E7                 	db	231
    93   00111F  21                 	db	33
    94   001120  CB                 	db	203
    95   001121  6B                 	db	107
    96   001122  2D                 	db	45
    97   001123  6E                 	db	110
    98   001124  EE                 	db	238
    99   001125  23                 	db	35
   100   001126  EF                 	db	239
   101   001127  6F                 	db	111
   102                           
   103                           ;initializer for product_id@once_pid
   104   001128  0001               	dw	1
   105                           
   106                           ;initializer for normal_stock@once_ust
   107   00112A  0001               	dw	1
   108                           
   109                           ;initializer for _disp_flag
   110   00112C  0001               	dw	1
   111                           
   112                           ;initializer for _update_data_flag
   113   00112E  0001               	dw	1
   114                           
   115                           ;initializer for _rec_cond_flag
   116   001130  0001               	dw	1
   117                           
   118                           ;initializer for _in_field_pid
   119   001132  0001               	dw	1
   120                           
   121                           ;initializer for _in_field_ust
   122   001134  0001               	dw	1
   123                           
   124                           ;initializer for read_digital_keypad@once
   125   001136  01                 	db	1
   126                           
   127                           	psect	idataBANK0
   128   00114E                     __pidataBANK0:
   129                           	callstack 0
   130                           
   131                           ;initializer for _digit@ssd_display$F241
   132   00114E  E7                 	db	231
   133   00114F  21                 	db	33
   134   001150  CB                 	db	203
   135   001151  6B                 	db	107
   136   001152  2D                 	db	45
   137   001153  6E                 	db	110
   138   001154  EE                 	db	238
   139   001155  23                 	db	35
   140   001156  EF                 	db	239
   141   001157  6F                 	db	111
   142                           
   143                           ;initializer for _digit
   144   001158  E7                 	db	231
   145   001159  21                 	db	33
   146   00115A  CB                 	db	203
   147   00115B  6B                 	db	107
   148   00115C  2D                 	db	45
   149   00115D  6E                 	db	110
   150   00115E  EE                 	db	238
   151   00115F  23                 	db	35
   152   001160  EF                 	db	239
   153   001161  6F                 	db	111
   154   000000                     _TXB0SIDL	set	3906
   155   000000                     _RXB0D7	set	3949
   156   000000                     _RXB0D6	set	3948
   157   000000                     _RXB0D5	set	3947
   158   000000                     _RXB0D4	set	3946
   159   000000                     _RXB0D3	set	3945
   160   000000                     _RXB0D2	set	3944
   161   000000                     _RXB0D1	set	3943
   162   000000                     _RXB0D0	set	3942
   163   000000                     _RXB0DLC	set	3941
   164   000000                     _RXB0SIDL	set	3938
   165   000000                     _RXB0SIDH	set	3937
   166   000000                     _RXB0EIDL	set	3940
   167   000000                     _RXB0EIDH	set	3939
   168   000000                     _RXF0SIDL	set	3841
   169   000000                     _EECON2	set	4007
   170   000000                     _TRISB2	set	31898
   171   000000                     _RXB0FUL	set	31495
   172   000000                     _TRISB3	set	31899
   173   000000                     _PEIE	set	32662
   174   000000                     _INT0E	set	32660
   175   000000                     _INT0F	set	32657
   176   000000                     _RXFCON0	set	3540
   177   000000                     _CANSTAT	set	3950
   178   000000                     _CANCON	set	3951
   179   000000                     _PORTA	set	3968
   180   000000                     _PORTC	set	3970
   181   000000                     _TRISC	set	3988
   182   000000                     _TRISD	set	3989
   183   000000                     _PIR2bits	set	4001
   184   000000                     _EECON1bits	set	4006
   185   000000                     _EEDATA	set	4008
   186   000000                     _EEADR	set	4009
   187   000000                     _TRISA	set	3986
   188   000000                     _PORTD	set	3971
   189   000000                     _INTEDG0	set	32654
   190   000000                     _GIE	set	32663
   191   000000                     _RXB0IF	set	32032
   192   000000                     _BRGCON3	set	3954
   193   000000                     _BRGCON2	set	3953
   194   000000                     _BRGCON1	set	3952
   195   000000                     _ECANCON	set	3959
   196   000000                     _RXF0SIDH	set	3840
   197   000000                     _RXF0EIDH	set	3842
   198   000000                     _TXB0SIDH	set	3905
   199   000000                     _TXB0EIDH	set	3907
   200   000000                     _RXB0CON	set	3936
   201   000000                     _RXF0EIDL	set	3843
   202   000000                     _TXB0REQ	set	31235
   203   000000                     _TXB0D7	set	3917
   204   000000                     _TXB0D6	set	3916
   205   000000                     _TXB0D5	set	3915
   206   000000                     _TXB0D4	set	3914
   207   000000                     _TXB0D3	set	3913
   208   000000                     _TXB0D2	set	3912
   209   000000                     _TXB0D1	set	3911
   210   000000                     _TXB0D0	set	3910
   211   000000                     _TXB0DLC	set	3909
   212   000000                     _TXB0EIDL	set	3908
   213                           
   214                           ; #config settings
   215                           
   216                           	psect	cinit
   217   000EBA                     __pcinit:
   218                           	callstack 0
   219   000EBA                     start_initialization:
   220                           	callstack 0
   221   000EBA                     __initialization:
   222                           	callstack 0
   223                           
   224                           ; Initialize objects allocated to BANK0 (20 bytes)
   225                           ; load TBLPTR registers with __pidataBANK0
   226   000EBA  0E4E               	movlw	low __pidataBANK0
   227   000EBC  6EF6               	movwf	tblptrl,c
   228   000EBE  0E11               	movlw	high __pidataBANK0
   229   000EC0  6EF7               	movwf	tblptrh,c
   230   000EC2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   231   000EC4  6EF8               	movwf	tblptru,c
   232   000EC6  EE00  F060         	lfsr	0,__pdataBANK0
   233   000ECA  EE10 F014          	lfsr	1,20
   234   000ECE                     copy_data0:
   235   000ECE  0009               	tblrd		*+
   236   000ED0  CFF5 FFEE          	movff	tablat,postinc0
   237   000ED4  50E5               	movf	postdec1,w,c
   238   000ED6  50E1               	movf	fsr1l,w,c
   239   000ED8  E1FA               	bnz	copy_data0
   240                           
   241                           ; Initialize objects allocated to COMRAM (25 bytes)
   242                           ; load TBLPTR registers with __pidataCOMRAM
   243   000EDA  0E1E               	movlw	low __pidataCOMRAM
   244   000EDC  6EF6               	movwf	tblptrl,c
   245   000EDE  0E11               	movlw	high __pidataCOMRAM
   246   000EE0  6EF7               	movwf	tblptrh,c
   247   000EE2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   248   000EE4  6EF8               	movwf	tblptru,c
   249   000EE6  EE00  F034         	lfsr	0,__pdataCOMRAM
   250   000EEA  EE10 F019          	lfsr	1,25
   251   000EEE                     copy_data1:
   252   000EEE  0009               	tblrd		*+
   253   000EF0  CFF5 FFEE          	movff	tablat,postinc0
   254   000EF4  50E5               	movf	postdec1,w,c
   255   000EF6  50E1               	movf	fsr1l,w,c
   256   000EF8  E1FA               	bnz	copy_data1
   257                           
   258                           ; Clear objects allocated to COMRAM (51 bytes)
   259   000EFA  EE00  F001         	lfsr	0,__pbssCOMRAM
   260   000EFE  0E33               	movlw	51
   261   000F00                     clear_0:
   262   000F00  6AEE               	clrf	postinc0,c
   263   000F02  06E8               	decf	wreg,f,c
   264   000F04  E1FD               	bnz	clear_0
   265   000F06                     end_of_initialization:
   266                           	callstack 0
   267   000F06                     __end_of__initialization:
   268                           	callstack 0
   269   000F06  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   270   000F08  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   271   000F0A  0100               	movlb	0
   272   000F0C  EF88  F007         	goto	_main	;jump to C main() function
   273                           
   274                           	psect	bssCOMRAM
   275   000001                     __pbssCOMRAM:
   276                           	callstack 0
   277   000001                     _can_payload:
   278                           	callstack 0
   279   000001                     	ds	13
   280   00000E                     _can_id:
   281                           	callstack 0
   282   00000E                     	ds	5
   283   000013                     	ds	4
   284   000017                     can_stock@delay:
   285                           	callstack 0
   286   000017                     	ds	2
   287   000019                     _num:
   288                           	callstack 0
   289   000019                     	ds	2
   290   00001B                     _ssd0:
   291                           	callstack 0
   292   00001B                     	ds	2
   293   00001D                     _ssd1:
   294                           	callstack 0
   295   00001D                     	ds	2
   296   00001F                     _ssd2:
   297                           	callstack 0
   298   00001F                     	ds	2
   299   000021                     _ssd3:
   300                           	callstack 0
   301   000021                     	ds	2
   302   000023                     _increment_pid_flag:
   303                           	callstack 0
   304   000023                     	ds	2
   305   000025                     _increment_ust_flag:
   306                           	callstack 0
   307   000025                     	ds	2
   308   000027                     _field_flag:
   309                           	callstack 0
   310   000027                     	ds	2
   311   000029                     _interrupt_key:
   312                           	callstack 0
   313   000029                     	ds	2
   314   00002B                     _key:
   315                           	callstack 0
   316   00002B                     	ds	1
   317   00002C                     _ssd@ssd_display$F315:
   318                           	callstack 0
   319   00002C                     	ds	4
   320   000030                     _ssd:
   321                           	callstack 0
   322   000030                     	ds	4
   323                           
   324                           	psect	dataCOMRAM
   325   000034                     __pdataCOMRAM:
   326                           	callstack 0
   327   000034                     _digit@ssd_display$F316:
   328                           	callstack 0
   329   000034                     	ds	10
   330   00003E                     product_id@once_pid:
   331                           	callstack 0
   332   00003E                     	ds	2
   333   000040                     normal_stock@once_ust:
   334                           	callstack 0
   335   000040                     	ds	2
   336   000042                     _disp_flag:
   337                           	callstack 0
   338   000042                     	ds	2
   339   000044                     _update_data_flag:
   340                           	callstack 0
   341   000044                     	ds	2
   342   000046                     _rec_cond_flag:
   343                           	callstack 0
   344   000046                     	ds	2
   345   000048                     _in_field_pid:
   346                           	callstack 0
   347   000048                     	ds	2
   348   00004A                     _in_field_ust:
   349                           	callstack 0
   350   00004A                     	ds	2
   351   00004C                     read_digital_keypad@once:
   352                           	callstack 0
   353   00004C                     	ds	1
   354                           
   355                           	psect	dataBANK0
   356   000060                     __pdataBANK0:
   357                           	callstack 0
   358   000060                     	ds	10
   359   00006A                     	ds	10
   360                           
   361                           	psect	cstackCOMRAM
   362   00004D                     __pcstackCOMRAM:
   363                           	callstack 0
   364   00004D                     ?___wmul:
   365                           	callstack 0
   366   00004D                     ?___lwdiv:
   367                           	callstack 0
   368   00004D                     read_digital_keypad@detection_type:
   369                           	callstack 0
   370   00004D                     read_internal_eeprom@address:
   371                           	callstack 0
   372   00004D                     display@data:
   373                           	callstack 0
   374   00004D                     ___wmul@multiplier:
   375                           	callstack 0
   376   00004D                     ___lwdiv@dividend:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x0
   380   00004D                     	ds	1
   381   00004E                     ??_read_pid_data_from_eeprom:
   382   00004E                     ??_read_ust_data_from_eeprom:
   383                           
   384                           ; 1 bytes @ 0x1
   385   00004E                     	ds	1
   386   00004F                     ??_display:
   387   00004F                     compare_and_check@ch:
   388                           	callstack 0
   389   00004F                     ___wmul@multiplicand:
   390                           	callstack 0
   391   00004F                     ___lwdiv@divisor:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x2
   395   00004F                     	ds	1
   396   000050                     compare_and_check@confirm:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x3
   400   000050                     	ds	1
   401   000051                     display@wait:
   402                           	callstack 0
   403   000051                     ___wmul@product:
   404                           	callstack 0
   405   000051                     ___lwdiv@quotient:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x4
   409   000051                     	ds	1
   410   000052                     compare_and_check@i:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x5
   414   000052                     	ds	1
   415   000053                     display@digit:
   416                           	callstack 0
   417   000053                     ___lwdiv@counter:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x6
   421   000053                     	ds	1
   422   000054                     ?___lwmod:
   423                           	callstack 0
   424   000054                     ___lwmod@dividend:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x7
   428   000054                     	ds	2
   429   000056                     ___lwmod@divisor:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x9
   433   000056                     	ds	2
   434   000058                     ___lwmod@counter:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0xB
   438   000058                     	ds	1
   439   000059                     write_internal_eeprom@data:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0xC
   443   000059                     	ds	1
   444   00005A                     write_internal_eeprom@address:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0xD
   448   00005A                     	ds	1
   449   00005B                     can_stock@wait:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0xE
   453   00005B                     	ds	4
   454   00005F                     
   455                           ; 1 bytes @ 0x12
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 40 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   475 ;;      Params:         0       0       0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels required when called: 6
   481 ;; This function calls:
   482 ;;		_init_config
   483 ;;		_read_digital_keypad
   484 ;;		_receive_can_data
   485 ;;		_two_fields
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text0
   492   000F10                     __ptext0:
   493                           	callstack 0
   494   000F10                     _main:
   495                           	callstack 25
   496   000F10                     
   497                           ;main.c: 41:     init_config();
   498   000F10  EC9C  F008         	call	_init_config	;wreg free
   499   000F14                     l2188:
   500                           
   501                           ;main.c: 43:         receive_can_data();
   502   000F14  ECCF  F003         	call	_receive_can_data	;wreg free
   503   000F18                     
   504                           ;main.c: 44:         if (interrupt_key) {
   505   000F18  5029               	movf	_interrupt_key^0,w,c
   506   000F1A  102A               	iorwf	(_interrupt_key+1)^0,w,c
   507   000F1C  B4D8               	btfsc	status,2,c
   508   000F1E  EF93  F007         	goto	u1391
   509   000F22  EF95  F007         	goto	u1390
   510   000F26                     u1391:
   511   000F26  EFAC  F007         	goto	l2200
   512   000F2A                     u1390:
   513   000F2A                     
   514                           ;main.c: 45:             if(update_data_flag)
   515   000F2A  5044               	movf	_update_data_flag^0,w,c
   516   000F2C  1045               	iorwf	(_update_data_flag+1)^0,w,c
   517   000F2E  B4D8               	btfsc	status,2,c
   518   000F30  EF9C  F007         	goto	u1401
   519   000F34  EF9E  F007         	goto	u1400
   520   000F38                     u1401:
   521   000F38  EFA4  F007         	goto	l2196
   522   000F3C                     u1400:
   523   000F3C                     
   524                           ;main.c: 46:                 key = read_digital_keypad(1);
   525   000F3C  0E01               	movlw	1
   526   000F3E  EC1C  F006         	call	_read_digital_keypad
   527   000F42  6E2B               	movwf	_key^0,c
   528   000F44  EFA8  F007         	goto	l2198
   529   000F48                     l2196:
   530                           
   531                           ;main.c: 48:                 key = read_digital_keypad(0);
   532   000F48  0E00               	movlw	0
   533   000F4A  EC1C  F006         	call	_read_digital_keypad
   534   000F4E  6E2B               	movwf	_key^0,c
   535   000F50                     l2198:
   536                           
   537                           ;main.c: 49:             two_fields();
   538   000F50  ECCD  F002         	call	_two_fields	;wreg free
   539                           
   540                           ;main.c: 51:         } else {
   541   000F54  EF8A  F007         	goto	l2188
   542   000F58                     l2200:
   543                           
   544                           ;main.c: 52:             PORTD = 0x00;
   545   000F58  0E00               	movlw	0
   546   000F5A  6E83               	movwf	131,c	;volatile
   547   000F5C  EF8A  F007         	goto	l2188
   548   000F60  EF07  F000         	goto	start
   549   000F64                     __end_of_main:
   550                           	callstack 0
   551                           
   552 ;; *************** function _two_fields *****************
   553 ;; Defined at:
   554 ;;		line 59 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   568 ;;      Params:         0       0       0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 5
   575 ;; This function calls:
   576 ;;		_display
   577 ;;		_product_id
   578 ;;		_update_stock
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text1
   585   00059A                     __ptext1:
   586                           	callstack 0
   587   00059A                     _two_fields:
   588                           	callstack 25
   589   00059A                     
   590                           ;main.c: 60:     if (field_flag == 0) {
   591   00059A  5027               	movf	_field_flag^0,w,c
   592   00059C  1028               	iorwf	(_field_flag+1)^0,w,c
   593   00059E  A4D8               	btfss	status,2,c
   594   0005A0  EFD4  F002         	goto	u1261
   595   0005A4  EFD6  F002         	goto	u1260
   596   0005A8                     u1261:
   597   0005A8  EF25  F003         	goto	l2168
   598   0005AC                     u1260:
   599   0005AC                     
   600                           ;main.c: 62:         if (in_field_ust) {
   601   0005AC  504A               	movf	_in_field_ust^0,w,c
   602   0005AE  104B               	iorwf	(_in_field_ust+1)^0,w,c
   603   0005B0  B4D8               	btfsc	status,2,c
   604   0005B2  EFDD  F002         	goto	u1271
   605   0005B6  EFDF  F002         	goto	u1270
   606   0005BA                     u1271:
   607   0005BA  EF21  F003         	goto	l2166
   608   0005BE                     u1270:
   609   0005BE                     
   610                           ;main.c: 63:             ssd[0] = 0XE5;
   611   0005BE  0EE5               	movlw	229
   612   0005C0  6E30               	movwf	_ssd^0,c
   613                           
   614                           ;main.c: 64:             ssd[1] = 0X40;
   615   0005C2  0E40               	movlw	64
   616   0005C4  6E31               	movwf	(_ssd+1)^0,c
   617                           
   618                           ;main.c: 65:             ssd[2] = 0X6E;
   619   0005C6  0E6E               	movlw	110
   620   0005C8  6E32               	movwf	(_ssd+2)^0,c
   621                           
   622                           ;main.c: 66:             ssd[3] = 0XCC;
   623   0005CA  0ECC               	movlw	204
   624   0005CC  6E33               	movwf	(_ssd+3)^0,c
   625   0005CE                     
   626                           ;main.c: 67:             if (key == 0x0B) {
   627   0005CE  0E0B               	movlw	11
   628   0005D0  182B               	xorwf	_key^0,w,c
   629   0005D2  A4D8               	btfss	status,2,c
   630   0005D4  EFEE  F002         	goto	u1281
   631   0005D8  EFF0  F002         	goto	u1280
   632   0005DC                     u1281:
   633   0005DC  EFFF  F002         	goto	l2158
   634   0005E0                     u1280:
   635   0005E0                     
   636                           ;main.c: 68:                 field_flag = !field_flag;
   637   0005E0  5027               	movf	_field_flag^0,w,c
   638   0005E2  1028               	iorwf	(_field_flag+1)^0,w,c
   639   0005E4  B4D8               	btfsc	status,2,c
   640   0005E6  EFF7  F002         	goto	u1291
   641   0005EA  EFFA  F002         	goto	u1290
   642   0005EE                     u1291:
   643   0005EE  0E01               	movlw	1
   644   0005F0  EFFB  F002         	goto	u1300
   645   0005F4                     u1290:
   646   0005F4  0E00               	movlw	0
   647   0005F6                     u1300:
   648   0005F6  6E27               	movwf	_field_flag^0,c
   649   0005F8  6A28               	clrf	(_field_flag+1)^0,c
   650                           
   651                           ;main.c: 69:             } else if (key == 0x0D) {
   652   0005FA  EF10  F003         	goto	l2162
   653   0005FE                     l2158:
   654   0005FE  0E0D               	movlw	13
   655   000600  182B               	xorwf	_key^0,w,c
   656   000602  A4D8               	btfss	status,2,c
   657   000604  EF06  F003         	goto	u1311
   658   000608  EF08  F003         	goto	u1310
   659   00060C                     u1311:
   660   00060C  EF10  F003         	goto	l2162
   661   000610                     u1310:
   662   000610                     
   663                           ;main.c: 70:                 in_field_ust = 0;
   664   000610  0E00               	movlw	0
   665   000612  6E4B               	movwf	(_in_field_ust+1)^0,c
   666   000614  0E00               	movlw	0
   667   000616  6E4A               	movwf	_in_field_ust^0,c
   668                           
   669                           ;main.c: 71:                 disp_flag = 0;
   670   000618  0E00               	movlw	0
   671   00061A  6E43               	movwf	(_disp_flag+1)^0,c
   672   00061C  0E00               	movlw	0
   673   00061E  6E42               	movwf	_disp_flag^0,c
   674   000620                     l2162:
   675                           
   676                           ;main.c: 73:             if (disp_flag)
   677   000620  5042               	movf	_disp_flag^0,w,c
   678   000622  1043               	iorwf	(_disp_flag+1)^0,w,c
   679   000624  B4D8               	btfsc	status,2,c
   680   000626  EF17  F003         	goto	u1321
   681   00062A  EF19  F003         	goto	u1320
   682   00062E                     u1321:
   683   00062E  EF6C  F003         	goto	l231
   684   000632                     u1320:
   685   000632                     l2164:
   686                           
   687                           ;main.c: 74:                 display(ssd);
   688   000632  0E30               	movlw	low _ssd
   689   000634  6E4D               	movwf	display@data^0,c
   690   000636  0E00               	movlw	high _ssd
   691   000638  6E4E               	movwf	(display@data+1)^0,c
   692   00063A  ECC6  F006         	call	_display	;wreg free
   693   00063E  EF6C  F003         	goto	l231
   694   000642                     l2166:
   695                           
   696                           ;main.c: 76:             update_stock();
   697   000642  EC7F  F008         	call	_update_stock	;wreg free
   698   000646  EF6C  F003         	goto	l231
   699   00064A                     l2168:
   700                           
   701                           ;main.c: 81:         if (in_field_pid) {
   702   00064A  5048               	movf	_in_field_pid^0,w,c
   703   00064C  1049               	iorwf	(_in_field_pid+1)^0,w,c
   704   00064E  B4D8               	btfsc	status,2,c
   705   000650  EF2C  F003         	goto	u1331
   706   000654  EF2E  F003         	goto	u1330
   707   000658                     u1331:
   708   000658  EF6A  F003         	goto	l2184
   709   00065C                     u1330:
   710   00065C                     
   711                           ;main.c: 82:             ssd[0] = 0X8F;
   712   00065C  0E8F               	movlw	143
   713   00065E  6E30               	movwf	_ssd^0,c
   714                           
   715                           ;main.c: 83:             ssd[1] = 0X40;
   716   000660  0E40               	movlw	64
   717   000662  6E31               	movwf	(_ssd+1)^0,c
   718                           
   719                           ;main.c: 84:             ssd[2] = 0X84;
   720   000664  0E84               	movlw	132
   721   000666  6E32               	movwf	(_ssd+2)^0,c
   722                           
   723                           ;main.c: 85:             ssd[3] = 0XE9;
   724   000668  0EE9               	movlw	233
   725   00066A  6E33               	movwf	(_ssd+3)^0,c
   726   00066C                     
   727                           ;main.c: 86:             if (key == 0x0B) {
   728   00066C  0E0B               	movlw	11
   729   00066E  182B               	xorwf	_key^0,w,c
   730   000670  A4D8               	btfss	status,2,c
   731   000672  EF3D  F003         	goto	u1341
   732   000676  EF3F  F003         	goto	u1340
   733   00067A                     u1341:
   734   00067A  EF4E  F003         	goto	l2176
   735   00067E                     u1340:
   736   00067E                     
   737                           ;main.c: 87:                 field_flag = !field_flag;
   738   00067E  5027               	movf	_field_flag^0,w,c
   739   000680  1028               	iorwf	(_field_flag+1)^0,w,c
   740   000682  B4D8               	btfsc	status,2,c
   741   000684  EF46  F003         	goto	u1351
   742   000688  EF49  F003         	goto	u1350
   743   00068C                     u1351:
   744   00068C  0E01               	movlw	1
   745   00068E  EF4A  F003         	goto	u1360
   746   000692                     u1350:
   747   000692  0E00               	movlw	0
   748   000694                     u1360:
   749   000694  6E27               	movwf	_field_flag^0,c
   750   000696  6A28               	clrf	(_field_flag+1)^0,c
   751                           
   752                           ;main.c: 88:             } else if (key == 0x0D) {
   753   000698  EF5F  F003         	goto	l2180
   754   00069C                     l2176:
   755   00069C  0E0D               	movlw	13
   756   00069E  182B               	xorwf	_key^0,w,c
   757   0006A0  A4D8               	btfss	status,2,c
   758   0006A2  EF55  F003         	goto	u1371
   759   0006A6  EF57  F003         	goto	u1370
   760   0006AA                     u1371:
   761   0006AA  EF5F  F003         	goto	l2180
   762   0006AE                     u1370:
   763   0006AE                     
   764                           ;main.c: 89:                 in_field_pid = 0;
   765   0006AE  0E00               	movlw	0
   766   0006B0  6E49               	movwf	(_in_field_pid+1)^0,c
   767   0006B2  0E00               	movlw	0
   768   0006B4  6E48               	movwf	_in_field_pid^0,c
   769                           
   770                           ;main.c: 90:                 disp_flag = 0;
   771   0006B6  0E00               	movlw	0
   772   0006B8  6E43               	movwf	(_disp_flag+1)^0,c
   773   0006BA  0E00               	movlw	0
   774   0006BC  6E42               	movwf	_disp_flag^0,c
   775   0006BE                     l2180:
   776                           
   777                           ;main.c: 92:             if (disp_flag)
   778   0006BE  5042               	movf	_disp_flag^0,w,c
   779   0006C0  1043               	iorwf	(_disp_flag+1)^0,w,c
   780   0006C2  B4D8               	btfsc	status,2,c
   781   0006C4  EF66  F003         	goto	u1381
   782   0006C8  EF68  F003         	goto	u1380
   783   0006CC                     u1381:
   784   0006CC  EF6C  F003         	goto	l231
   785   0006D0                     u1380:
   786   0006D0  EF19  F003         	goto	l2164
   787   0006D4                     l2184:
   788                           
   789                           ;main.c: 95:             product_id();
   790   0006D4  EC12  F002         	call	_product_id	;wreg free
   791   0006D8                     l231:
   792   0006D8  0012               	return		;funcret
   793   0006DA                     __end_of_two_fields:
   794                           	callstack 0
   795                           
   796 ;; *************** function _update_stock *****************
   797 ;; Defined at:
   798 ;;		line 9 in file "ssd_fields.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   812 ;;      Params:         0       0       0       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0
   815 ;;      Totals:         0       0       0       0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 4
   819 ;; This function calls:
   820 ;;		_can_stock
   821 ;;		_normal_stock
   822 ;; This function is called by:
   823 ;;		_two_fields
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text2
   828   0010FE                     __ptext2:
   829                           	callstack 0
   830   0010FE                     _update_stock:
   831                           	callstack 25
   832   0010FE                     
   833                           ;ssd_fields.c: 10:     if(update_data_flag)
   834   0010FE  5044               	movf	_update_data_flag^0,w,c
   835   001100  1045               	iorwf	(_update_data_flag+1)^0,w,c
   836   001102  B4D8               	btfsc	status,2,c
   837   001104  EF86  F008         	goto	u1121
   838   001108  EF88  F008         	goto	u1120
   839   00110C                     u1121:
   840   00110C  EF8C  F008         	goto	l2036
   841   001110                     u1120:
   842   001110                     
   843                           ;ssd_fields.c: 11:         normal_stock();
   844   001110  EC51  F001         	call	_normal_stock	;wreg free
   845   001114  EF8E  F008         	goto	l337
   846   001118                     l2036:
   847                           
   848                           ;ssd_fields.c: 13:         can_stock();
   849   001118  EC09  F000         	call	_can_stock	;wreg free
   850   00111C                     l337:
   851   00111C  0012               	return		;funcret
   852   00111E                     __end_of_update_stock:
   853                           	callstack 0
   854                           
   855 ;; *************** function _normal_stock *****************
   856 ;; Defined at:
   857 ;;		line 25 in file "ssd_fields.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   871 ;;      Params:         0       0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 3
   878 ;; This function calls:
   879 ;;		_can_transmit
   880 ;;		_display
   881 ;;		_first_ssd_ust
   882 ;;		_read_ust_data_from_eeprom
   883 ;;		_second_ssd_ust
   884 ;;		_third_ssd_ust
   885 ;;		_write_internal_eeprom
   886 ;;		_zeroth_ssd_ust
   887 ;; This function is called by:
   888 ;;		_update_stock
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text3
   893   0002A2                     __ptext3:
   894                           	callstack 0
   895   0002A2                     _normal_stock:
   896                           	callstack 25
   897   0002A2                     
   898                           ;ssd_fields.c: 27:     unsigned static int once_ust = 1;;ssd_fields.c: 28:     if (once_
      +                          ust) {
   899   0002A2  5040               	movf	normal_stock@once_ust^0,w,c
   900   0002A4  1041               	iorwf	(normal_stock@once_ust+1)^0,w,c
   901   0002A6  B4D8               	btfsc	status,2,c
   902   0002A8  EF58  F001         	goto	u961
   903   0002AC  EF5A  F001         	goto	u960
   904   0002B0                     u961:
   905   0002B0  EF60  F001         	goto	l1942
   906   0002B4                     u960:
   907   0002B4                     
   908                           ;ssd_fields.c: 29:         once_ust = 0;
   909   0002B4  0E00               	movlw	0
   910   0002B6  6E41               	movwf	(normal_stock@once_ust+1)^0,c
   911   0002B8  0E00               	movlw	0
   912   0002BA  6E40               	movwf	normal_stock@once_ust^0,c
   913   0002BC                     
   914                           ;ssd_fields.c: 30:         read_ust_data_from_eeprom();
   915   0002BC  ECB2  F007         	call	_read_ust_data_from_eeprom	;wreg free
   916   0002C0                     l1942:
   917                           
   918                           ;ssd_fields.c: 32:     if (increment_ust_flag == 0) {
   919   0002C0  5025               	movf	_increment_ust_flag^0,w,c
   920   0002C2  1026               	iorwf	(_increment_ust_flag+1)^0,w,c
   921   0002C4  A4D8               	btfss	status,2,c
   922   0002C6  EF67  F001         	goto	u971
   923   0002CA  EF69  F001         	goto	u970
   924   0002CE                     u971:
   925   0002CE  EF6D  F001         	goto	l1946
   926   0002D2                     u970:
   927   0002D2                     
   928                           ;ssd_fields.c: 33:         third_ssd_ust();
   929   0002D2  EC6A  F004         	call	_third_ssd_ust	;wreg free
   930                           
   931                           ;ssd_fields.c: 34:     } else if (increment_ust_flag == 1) {
   932   0002D6  EF96  F001         	goto	l1958
   933   0002DA                     l1946:
   934   0002DA  0425               	decf	_increment_ust_flag^0,w,c
   935   0002DC  1026               	iorwf	(_increment_ust_flag+1)^0,w,c
   936   0002DE  A4D8               	btfss	status,2,c
   937   0002E0  EF74  F001         	goto	u981
   938   0002E4  EF76  F001         	goto	u980
   939   0002E8                     u981:
   940   0002E8  EF7A  F001         	goto	l1950
   941   0002EC                     u980:
   942   0002EC                     
   943                           ;ssd_fields.c: 35:         second_ssd_ust();
   944   0002EC  ECA8  F004         	call	_second_ssd_ust	;wreg free
   945                           
   946                           ;ssd_fields.c: 36:     } else if (increment_ust_flag == 2) {
   947   0002F0  EF96  F001         	goto	l1958
   948   0002F4                     l1950:
   949   0002F4  0E02               	movlw	2
   950   0002F6  1825               	xorwf	_increment_ust_flag^0,w,c
   951   0002F8  1026               	iorwf	(_increment_ust_flag+1)^0,w,c
   952   0002FA  A4D8               	btfss	status,2,c
   953   0002FC  EF82  F001         	goto	u991
   954   000300  EF84  F001         	goto	u990
   955   000304                     u991:
   956   000304  EF88  F001         	goto	l1954
   957   000308                     u990:
   958   000308                     
   959                           ;ssd_fields.c: 37:         first_ssd_ust();
   960   000308  ECE6  F004         	call	_first_ssd_ust	;wreg free
   961                           
   962                           ;ssd_fields.c: 38:     } else if (increment_ust_flag == 3) {
   963   00030C  EF96  F001         	goto	l1958
   964   000310                     l1954:
   965   000310  0E03               	movlw	3
   966   000312  1825               	xorwf	_increment_ust_flag^0,w,c
   967   000314  1026               	iorwf	(_increment_ust_flag+1)^0,w,c
   968   000316  A4D8               	btfss	status,2,c
   969   000318  EF90  F001         	goto	u1001
   970   00031C  EF92  F001         	goto	u1000
   971   000320                     u1001:
   972   000320  EF96  F001         	goto	l349
   973   000324                     u1000:
   974   000324                     
   975                           ;ssd_fields.c: 39:         zeroth_ssd_ust();
   976   000324  EC2C  F004         	call	_zeroth_ssd_ust	;wreg free
   977   000328  EF96  F001         	goto	l1958
   978   00032C                     l349:
   979   00032C                     l1958:
   980                           
   981                           ;ssd_fields.c: 41:     if (key == 0x0D) {
   982   00032C  0E0D               	movlw	13
   983   00032E  182B               	xorwf	_key^0,w,c
   984   000330  A4D8               	btfss	status,2,c
   985   000332  EF9D  F001         	goto	u1011
   986   000336  EF9F  F001         	goto	u1010
   987   00033A                     u1011:
   988   00033A  EFB4  F001         	goto	l1966
   989   00033E                     u1010:
   990   00033E                     
   991                           ;ssd_fields.c: 42:         if (increment_ust_flag < 3)
   992   00033E  5026               	movf	(_increment_ust_flag+1)^0,w,c
   993   000340  E107               	bnz	u1021
   994   000342  0E03               	movlw	3
   995   000344  5C25               	subwf	_increment_ust_flag^0,w,c
   996   000346  B0D8               	btfsc	status,0,c
   997   000348  EFA8  F001         	goto	u1021
   998   00034C  EFAA  F001         	goto	u1020
   999   000350                     u1021:
  1000   000350  EFAE  F001         	goto	l1964
  1001   000354                     u1020:
  1002   000354                     
  1003                           ;ssd_fields.c: 43:             increment_ust_flag++;
  1004   000354  4A25               	infsnz	_increment_ust_flag^0,f,c
  1005   000356  2A26               	incf	(_increment_ust_flag+1)^0,f,c
  1006   000358  EF0B  F002         	goto	l1980
  1007   00035C                     l1964:
  1008                           
  1009                           ;ssd_fields.c: 45:             increment_ust_flag = 0;
  1010   00035C  0E00               	movlw	0
  1011   00035E  6E26               	movwf	(_increment_ust_flag+1)^0,c
  1012   000360  0E00               	movlw	0
  1013   000362  6E25               	movwf	_increment_ust_flag^0,c
  1014   000364  EF0B  F002         	goto	l1980
  1015   000368                     l1966:
  1016   000368  0E0B               	movlw	11
  1017   00036A  182B               	xorwf	_key^0,w,c
  1018   00036C  A4D8               	btfss	status,2,c
  1019   00036E  EFBB  F001         	goto	u1031
  1020   000372  EFBD  F001         	goto	u1030
  1021   000376                     u1031:
  1022   000376  EF0B  F002         	goto	l1980
  1023   00037A                     u1030:
  1024   00037A                     
  1025                           ;ssd_fields.c: 47:         field_flag = 0;
  1026   00037A  0E00               	movlw	0
  1027   00037C  6E28               	movwf	(_field_flag+1)^0,c
  1028   00037E  0E00               	movlw	0
  1029   000380  6E27               	movwf	_field_flag^0,c
  1030                           
  1031                           ;ssd_fields.c: 48:         in_field_ust = 1;
  1032   000382  0E00               	movlw	0
  1033   000384  6E4B               	movwf	(_in_field_ust+1)^0,c
  1034   000386  0E01               	movlw	1
  1035   000388  6E4A               	movwf	_in_field_ust^0,c
  1036                           
  1037                           ;ssd_fields.c: 49:         interrupt_key = 0;
  1038   00038A  0E00               	movlw	0
  1039   00038C  6E2A               	movwf	(_interrupt_key+1)^0,c
  1040   00038E  0E00               	movlw	0
  1041   000390  6E29               	movwf	_interrupt_key^0,c
  1042                           
  1043                           ;ssd_fields.c: 50:         increment_ust_flag = 0;
  1044   000392  0E00               	movlw	0
  1045   000394  6E26               	movwf	(_increment_ust_flag+1)^0,c
  1046   000396  0E00               	movlw	0
  1047   000398  6E25               	movwf	_increment_ust_flag^0,c
  1048                           
  1049                           ;ssd_fields.c: 51:         disp_flag = 1;
  1050   00039A  0E00               	movlw	0
  1051   00039C  6E43               	movwf	(_disp_flag+1)^0,c
  1052   00039E  0E01               	movlw	1
  1053   0003A0  6E42               	movwf	_disp_flag^0,c
  1054                           
  1055                           ;ssd_fields.c: 52:         once_ust = 1;
  1056   0003A2  0E00               	movlw	0
  1057   0003A4  6E41               	movwf	(normal_stock@once_ust+1)^0,c
  1058   0003A6  0E01               	movlw	1
  1059   0003A8  6E40               	movwf	normal_stock@once_ust^0,c
  1060                           
  1061                           ;ssd_fields.c: 53:         rec_cond_flag = 1;
  1062   0003AA  0E00               	movlw	0
  1063   0003AC  6E47               	movwf	(_rec_cond_flag+1)^0,c
  1064   0003AE  0E01               	movlw	1
  1065   0003B0  6E46               	movwf	_rec_cond_flag^0,c
  1066                           
  1067                           ;ssd_fields.c: 54:         update_data_flag = 1;
  1068   0003B2  0E00               	movlw	0
  1069   0003B4  6E45               	movwf	(_update_data_flag+1)^0,c
  1070   0003B6  0E01               	movlw	1
  1071   0003B8  6E44               	movwf	_update_data_flag^0,c
  1072   0003BA                     
  1073                           ;ssd_fields.c: 55:         write_internal_eeprom(0X00, ssd0 + 48);
  1074   0003BA  501B               	movf	_ssd0^0,w,c
  1075   0003BC  0F30               	addlw	48
  1076   0003BE  6E59               	movwf	write_internal_eeprom@data^0,c
  1077   0003C0  0E00               	movlw	0
  1078   0003C2  EC54  F008         	call	_write_internal_eeprom
  1079   0003C6                     
  1080                           ;ssd_fields.c: 56:         write_internal_eeprom(0X01, ssd1 + 48);
  1081   0003C6  501D               	movf	_ssd1^0,w,c
  1082   0003C8  0F30               	addlw	48
  1083   0003CA  6E59               	movwf	write_internal_eeprom@data^0,c
  1084   0003CC  0E01               	movlw	1
  1085   0003CE  EC54  F008         	call	_write_internal_eeprom
  1086   0003D2                     
  1087                           ;ssd_fields.c: 57:         write_internal_eeprom(0X02, ssd2 + 48);
  1088   0003D2  501F               	movf	_ssd2^0,w,c
  1089   0003D4  0F30               	addlw	48
  1090   0003D6  6E59               	movwf	write_internal_eeprom@data^0,c
  1091   0003D8  0E02               	movlw	2
  1092   0003DA  EC54  F008         	call	_write_internal_eeprom
  1093   0003DE                     
  1094                           ;ssd_fields.c: 58:         write_internal_eeprom(0X03, ssd3 + 48);
  1095   0003DE  5021               	movf	_ssd3^0,w,c
  1096   0003E0  0F30               	addlw	48
  1097   0003E2  6E59               	movwf	write_internal_eeprom@data^0,c
  1098   0003E4  0E03               	movlw	3
  1099   0003E6  EC54  F008         	call	_write_internal_eeprom
  1100                           
  1101                           ;ssd_fields.c: 59:         ssd0 = 0, ssd1 = 0, ssd2 = 0, ssd3 = 0;
  1102   0003EA  0E00               	movlw	0
  1103   0003EC  6E1C               	movwf	(_ssd0+1)^0,c
  1104   0003EE  0E00               	movlw	0
  1105   0003F0  6E1B               	movwf	_ssd0^0,c
  1106   0003F2  0E00               	movlw	0
  1107   0003F4  6E1E               	movwf	(_ssd1+1)^0,c
  1108   0003F6  0E00               	movlw	0
  1109   0003F8  6E1D               	movwf	_ssd1^0,c
  1110   0003FA  0E00               	movlw	0
  1111   0003FC  6E20               	movwf	(_ssd2+1)^0,c
  1112   0003FE  0E00               	movlw	0
  1113   000400  6E1F               	movwf	_ssd2^0,c
  1114   000402  0E00               	movlw	0
  1115   000404  6E22               	movwf	(_ssd3+1)^0,c
  1116   000406  0E00               	movlw	0
  1117   000408  6E21               	movwf	_ssd3^0,c
  1118                           
  1119                           ;ssd_fields.c: 60:         num = 0;
  1120   00040A  0E00               	movlw	0
  1121   00040C  6E1A               	movwf	(_num+1)^0,c
  1122   00040E  0E00               	movlw	0
  1123   000410  6E19               	movwf	_num^0,c
  1124   000412                     
  1125                           ;ssd_fields.c: 61:         can_transmit();
  1126   000412  EC91  F006         	call	_can_transmit	;wreg free
  1127   000416                     l1980:
  1128                           
  1129                           ;ssd_fields.c: 63:     display(ssd);
  1130   000416  0E2C               	movlw	low _ssd@ssd_display$F315
  1131   000418  6E4D               	movwf	display@data^0,c
  1132   00041A  0E00               	movlw	high _ssd@ssd_display$F315
  1133   00041C  6E4E               	movwf	(display@data+1)^0,c
  1134   00041E  ECC6  F006         	call	_display	;wreg free
  1135   000422  0012               	return		;funcret
  1136   000424                     __end_of_normal_stock:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _zeroth_ssd_ust *****************
  1140 ;; Defined at:
  1141 ;;		line 106 in file "ssd_fields.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1155 ;;      Params:         0       0       0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0
  1158 ;;      Totals:         0       0       0       0       0       0       0
  1159 ;;Total ram usage:        0 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_normal_stock
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text4
  1170   000858                     __ptext4:
  1171                           	callstack 0
  1172   000858                     _zeroth_ssd_ust:
  1173                           	callstack 26
  1174   000858                     
  1175                           ;ssd_fields.c: 107:     ssd[0] = digit[ssd0] | 0X10;
  1176   000858  0E34               	movlw	low _digit@ssd_display$F316
  1177   00085A  241B               	addwf	_ssd0^0,w,c
  1178   00085C  6ED9               	movwf	fsr2l,c
  1179   00085E  0E00               	movlw	high _digit@ssd_display$F316
  1180   000860  201C               	addwfc	(_ssd0+1)^0,w,c
  1181   000862  6EDA               	movwf	fsr2h,c
  1182   000864  50DF               	movf	indf2,w,c
  1183   000866  0910               	iorlw	16
  1184   000868  6E2C               	movwf	_ssd@ssd_display$F315^0,c
  1185                           
  1186                           ;ssd_fields.c: 108:     ssd[1] = digit[ssd1];
  1187   00086A  0E34               	movlw	low _digit@ssd_display$F316
  1188   00086C  241D               	addwf	_ssd1^0,w,c
  1189   00086E  6ED9               	movwf	fsr2l,c
  1190   000870  0E00               	movlw	high _digit@ssd_display$F316
  1191   000872  201E               	addwfc	(_ssd1+1)^0,w,c
  1192   000874  6EDA               	movwf	fsr2h,c
  1193   000876  50DF               	movf	indf2,w,c
  1194   000878  6E2D               	movwf	(_ssd@ssd_display$F315+1)^0,c
  1195                           
  1196                           ;ssd_fields.c: 109:     ssd[2] = digit[ssd2];
  1197   00087A  0E34               	movlw	low _digit@ssd_display$F316
  1198   00087C  241F               	addwf	_ssd2^0,w,c
  1199   00087E  6ED9               	movwf	fsr2l,c
  1200   000880  0E00               	movlw	high _digit@ssd_display$F316
  1201   000882  2020               	addwfc	(_ssd2+1)^0,w,c
  1202   000884  6EDA               	movwf	fsr2h,c
  1203   000886  50DF               	movf	indf2,w,c
  1204   000888  6E2E               	movwf	(_ssd@ssd_display$F315+2)^0,c
  1205                           
  1206                           ;ssd_fields.c: 110:     ssd[3] = digit[ssd3];
  1207   00088A  0E34               	movlw	low _digit@ssd_display$F316
  1208   00088C  2421               	addwf	_ssd3^0,w,c
  1209   00088E  6ED9               	movwf	fsr2l,c
  1210   000890  0E00               	movlw	high _digit@ssd_display$F316
  1211   000892  2022               	addwfc	(_ssd3+1)^0,w,c
  1212   000894  6EDA               	movwf	fsr2h,c
  1213   000896  50DF               	movf	indf2,w,c
  1214   000898  6E2F               	movwf	(_ssd@ssd_display$F315+3)^0,c
  1215   00089A                     
  1216                           ;ssd_fields.c: 111:     if (key == 0x0E) {
  1217   00089A  0E0E               	movlw	14
  1218   00089C  182B               	xorwf	_key^0,w,c
  1219   00089E  A4D8               	btfss	status,2,c
  1220   0008A0  EF54  F004         	goto	u111
  1221   0008A4  EF56  F004         	goto	u110
  1222   0008A8                     u111:
  1223   0008A8  EF69  F004         	goto	l382
  1224   0008AC                     u110:
  1225   0008AC                     
  1226                           ;ssd_fields.c: 112:         if (ssd0 < 9)
  1227   0008AC  501C               	movf	(_ssd0+1)^0,w,c
  1228   0008AE  E107               	bnz	u121
  1229   0008B0  0E09               	movlw	9
  1230   0008B2  5C1B               	subwf	_ssd0^0,w,c
  1231   0008B4  B0D8               	btfsc	status,0,c
  1232   0008B6  EF5F  F004         	goto	u121
  1233   0008BA  EF61  F004         	goto	u120
  1234   0008BE                     u121:
  1235   0008BE  EF65  F004         	goto	l1346
  1236   0008C2                     u120:
  1237   0008C2                     
  1238                           ;ssd_fields.c: 113:             ssd0++;
  1239   0008C2  4A1B               	infsnz	_ssd0^0,f,c
  1240   0008C4  2A1C               	incf	(_ssd0+1)^0,f,c
  1241   0008C6  EF69  F004         	goto	l382
  1242   0008CA                     l1346:
  1243                           
  1244                           ;ssd_fields.c: 115:             ssd0 = 0;
  1245   0008CA  0E00               	movlw	0
  1246   0008CC  6E1C               	movwf	(_ssd0+1)^0,c
  1247   0008CE  0E00               	movlw	0
  1248   0008D0  6E1B               	movwf	_ssd0^0,c
  1249   0008D2                     l382:
  1250   0008D2  0012               	return		;funcret
  1251   0008D4                     __end_of_zeroth_ssd_ust:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _third_ssd_ust *****************
  1255 ;; Defined at:
  1256 ;;		line 67 in file "ssd_fields.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1270 ;;      Params:         0       0       0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 1
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_normal_stock
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text5
  1285   0008D4                     __ptext5:
  1286                           	callstack 0
  1287   0008D4                     _third_ssd_ust:
  1288                           	callstack 26
  1289   0008D4                     
  1290                           ;ssd_fields.c: 68:     ssd[0] = digit[ssd0];
  1291   0008D4  0E34               	movlw	low _digit@ssd_display$F316
  1292   0008D6  241B               	addwf	_ssd0^0,w,c
  1293   0008D8  6ED9               	movwf	fsr2l,c
  1294   0008DA  0E00               	movlw	high _digit@ssd_display$F316
  1295   0008DC  201C               	addwfc	(_ssd0+1)^0,w,c
  1296   0008DE  6EDA               	movwf	fsr2h,c
  1297   0008E0  50DF               	movf	indf2,w,c
  1298   0008E2  6E2C               	movwf	_ssd@ssd_display$F315^0,c
  1299                           
  1300                           ;ssd_fields.c: 69:     ssd[1] = digit[ssd1];
  1301   0008E4  0E34               	movlw	low _digit@ssd_display$F316
  1302   0008E6  241D               	addwf	_ssd1^0,w,c
  1303   0008E8  6ED9               	movwf	fsr2l,c
  1304   0008EA  0E00               	movlw	high _digit@ssd_display$F316
  1305   0008EC  201E               	addwfc	(_ssd1+1)^0,w,c
  1306   0008EE  6EDA               	movwf	fsr2h,c
  1307   0008F0  50DF               	movf	indf2,w,c
  1308   0008F2  6E2D               	movwf	(_ssd@ssd_display$F315+1)^0,c
  1309                           
  1310                           ;ssd_fields.c: 70:     ssd[2] = digit[ssd2];
  1311   0008F4  0E34               	movlw	low _digit@ssd_display$F316
  1312   0008F6  241F               	addwf	_ssd2^0,w,c
  1313   0008F8  6ED9               	movwf	fsr2l,c
  1314   0008FA  0E00               	movlw	high _digit@ssd_display$F316
  1315   0008FC  2020               	addwfc	(_ssd2+1)^0,w,c
  1316   0008FE  6EDA               	movwf	fsr2h,c
  1317   000900  50DF               	movf	indf2,w,c
  1318   000902  6E2E               	movwf	(_ssd@ssd_display$F315+2)^0,c
  1319                           
  1320                           ;ssd_fields.c: 71:     ssd[3] = digit[ssd3] | 0X10;
  1321   000904  0E34               	movlw	low _digit@ssd_display$F316
  1322   000906  2421               	addwf	_ssd3^0,w,c
  1323   000908  6ED9               	movwf	fsr2l,c
  1324   00090A  0E00               	movlw	high _digit@ssd_display$F316
  1325   00090C  2022               	addwfc	(_ssd3+1)^0,w,c
  1326   00090E  6EDA               	movwf	fsr2h,c
  1327   000910  50DF               	movf	indf2,w,c
  1328   000912  0910               	iorlw	16
  1329   000914  6E2F               	movwf	(_ssd@ssd_display$F315+3)^0,c
  1330   000916                     
  1331                           ;ssd_fields.c: 72:     if (key == 0x0E) {
  1332   000916  0E0E               	movlw	14
  1333   000918  182B               	xorwf	_key^0,w,c
  1334   00091A  A4D8               	btfss	status,2,c
  1335   00091C  EF92  F004         	goto	u51
  1336   000920  EF94  F004         	goto	u50
  1337   000924                     u51:
  1338   000924  EFA7  F004         	goto	l364
  1339   000928                     u50:
  1340   000928                     
  1341                           ;ssd_fields.c: 73:         if (ssd3 < 9)
  1342   000928  5022               	movf	(_ssd3+1)^0,w,c
  1343   00092A  E107               	bnz	u61
  1344   00092C  0E09               	movlw	9
  1345   00092E  5C21               	subwf	_ssd3^0,w,c
  1346   000930  B0D8               	btfsc	status,0,c
  1347   000932  EF9D  F004         	goto	u61
  1348   000936  EF9F  F004         	goto	u60
  1349   00093A                     u61:
  1350   00093A  EFA3  F004         	goto	l1316
  1351   00093E                     u60:
  1352   00093E                     
  1353                           ;ssd_fields.c: 74:             ssd3++;
  1354   00093E  4A21               	infsnz	_ssd3^0,f,c
  1355   000940  2A22               	incf	(_ssd3+1)^0,f,c
  1356   000942  EFA7  F004         	goto	l364
  1357   000946                     l1316:
  1358                           
  1359                           ;ssd_fields.c: 76:             ssd3 = 0;
  1360   000946  0E00               	movlw	0
  1361   000948  6E22               	movwf	(_ssd3+1)^0,c
  1362   00094A  0E00               	movlw	0
  1363   00094C  6E21               	movwf	_ssd3^0,c
  1364   00094E                     l364:
  1365   00094E  0012               	return		;funcret
  1366   000950                     __end_of_third_ssd_ust:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _second_ssd_ust *****************
  1370 ;; Defined at:
  1371 ;;		line 80 in file "ssd_fields.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1385 ;;      Params:         0       0       0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0
  1388 ;;      Totals:         0       0       0       0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_normal_stock
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text6
  1400   000950                     __ptext6:
  1401                           	callstack 0
  1402   000950                     _second_ssd_ust:
  1403                           	callstack 26
  1404   000950                     
  1405                           ;ssd_fields.c: 81:     ssd[0] = digit[ssd0];
  1406   000950  0E34               	movlw	low _digit@ssd_display$F316
  1407   000952  241B               	addwf	_ssd0^0,w,c
  1408   000954  6ED9               	movwf	fsr2l,c
  1409   000956  0E00               	movlw	high _digit@ssd_display$F316
  1410   000958  201C               	addwfc	(_ssd0+1)^0,w,c
  1411   00095A  6EDA               	movwf	fsr2h,c
  1412   00095C  50DF               	movf	indf2,w,c
  1413   00095E  6E2C               	movwf	_ssd@ssd_display$F315^0,c
  1414                           
  1415                           ;ssd_fields.c: 82:     ssd[1] = digit[ssd1];
  1416   000960  0E34               	movlw	low _digit@ssd_display$F316
  1417   000962  241D               	addwf	_ssd1^0,w,c
  1418   000964  6ED9               	movwf	fsr2l,c
  1419   000966  0E00               	movlw	high _digit@ssd_display$F316
  1420   000968  201E               	addwfc	(_ssd1+1)^0,w,c
  1421   00096A  6EDA               	movwf	fsr2h,c
  1422   00096C  50DF               	movf	indf2,w,c
  1423   00096E  6E2D               	movwf	(_ssd@ssd_display$F315+1)^0,c
  1424                           
  1425                           ;ssd_fields.c: 83:     ssd[2] = digit[ssd2] | 0X10;
  1426   000970  0E34               	movlw	low _digit@ssd_display$F316
  1427   000972  241F               	addwf	_ssd2^0,w,c
  1428   000974  6ED9               	movwf	fsr2l,c
  1429   000976  0E00               	movlw	high _digit@ssd_display$F316
  1430   000978  2020               	addwfc	(_ssd2+1)^0,w,c
  1431   00097A  6EDA               	movwf	fsr2h,c
  1432   00097C  50DF               	movf	indf2,w,c
  1433   00097E  0910               	iorlw	16
  1434   000980  6E2E               	movwf	(_ssd@ssd_display$F315+2)^0,c
  1435                           
  1436                           ;ssd_fields.c: 84:     ssd[3] = digit[ssd3];
  1437   000982  0E34               	movlw	low _digit@ssd_display$F316
  1438   000984  2421               	addwf	_ssd3^0,w,c
  1439   000986  6ED9               	movwf	fsr2l,c
  1440   000988  0E00               	movlw	high _digit@ssd_display$F316
  1441   00098A  2022               	addwfc	(_ssd3+1)^0,w,c
  1442   00098C  6EDA               	movwf	fsr2h,c
  1443   00098E  50DF               	movf	indf2,w,c
  1444   000990  6E2F               	movwf	(_ssd@ssd_display$F315+3)^0,c
  1445   000992                     
  1446                           ;ssd_fields.c: 85:     if (key == 0x0E) {
  1447   000992  0E0E               	movlw	14
  1448   000994  182B               	xorwf	_key^0,w,c
  1449   000996  A4D8               	btfss	status,2,c
  1450   000998  EFD0  F004         	goto	u71
  1451   00099C  EFD2  F004         	goto	u70
  1452   0009A0                     u71:
  1453   0009A0  EFE5  F004         	goto	l370
  1454   0009A4                     u70:
  1455   0009A4                     
  1456                           ;ssd_fields.c: 86:         if (ssd2 < 9)
  1457   0009A4  5020               	movf	(_ssd2+1)^0,w,c
  1458   0009A6  E107               	bnz	u81
  1459   0009A8  0E09               	movlw	9
  1460   0009AA  5C1F               	subwf	_ssd2^0,w,c
  1461   0009AC  B0D8               	btfsc	status,0,c
  1462   0009AE  EFDB  F004         	goto	u81
  1463   0009B2  EFDD  F004         	goto	u80
  1464   0009B6                     u81:
  1465   0009B6  EFE1  F004         	goto	l1326
  1466   0009BA                     u80:
  1467   0009BA                     
  1468                           ;ssd_fields.c: 87:             ssd2++;
  1469   0009BA  4A1F               	infsnz	_ssd2^0,f,c
  1470   0009BC  2A20               	incf	(_ssd2+1)^0,f,c
  1471   0009BE  EFE5  F004         	goto	l370
  1472   0009C2                     l1326:
  1473                           
  1474                           ;ssd_fields.c: 89:             ssd2 = 0;
  1475   0009C2  0E00               	movlw	0
  1476   0009C4  6E20               	movwf	(_ssd2+1)^0,c
  1477   0009C6  0E00               	movlw	0
  1478   0009C8  6E1F               	movwf	_ssd2^0,c
  1479   0009CA                     l370:
  1480   0009CA  0012               	return		;funcret
  1481   0009CC                     __end_of_second_ssd_ust:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _read_ust_data_from_eeprom *****************
  1485 ;; Defined at:
  1486 ;;		line 16 in file "ssd_fields.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1500 ;;      Params:         0       0       0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0
  1502 ;;      Temps:          1       0       0       0       0       0       0
  1503 ;;      Totals:         1       0       0       0       0       0       0
  1504 ;;Total ram usage:        1 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 2
  1507 ;; This function calls:
  1508 ;;		_read_internal_eeprom
  1509 ;; This function is called by:
  1510 ;;		_normal_stock
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text7
  1515   000F64                     __ptext7:
  1516                           	callstack 0
  1517   000F64                     _read_ust_data_from_eeprom:
  1518                           	callstack 25
  1519   000F64                     
  1520                           ;ssd_fields.c: 18:     ssd0 = read_internal_eeprom(0X00) - 48;
  1521   000F64  0E00               	movlw	0
  1522   000F66  ECB1  F008         	call	_read_internal_eeprom
  1523   000F6A  6E4E               	movwf	??_read_ust_data_from_eeprom^0,c
  1524   000F6C  0ED0               	movlw	208
  1525   000F6E  244E               	addwf	??_read_ust_data_from_eeprom^0,w,c
  1526   000F70  6E1B               	movwf	_ssd0^0,c
  1527   000F72  6A1C               	clrf	(_ssd0+1)^0,c
  1528   000F74  0EFF               	movlw	255
  1529   000F76  221C               	addwfc	(_ssd0+1)^0,f,c
  1530                           
  1531                           ;ssd_fields.c: 19:     ssd1 = read_internal_eeprom(0X01) - 48;
  1532   000F78  0E01               	movlw	1
  1533   000F7A  ECB1  F008         	call	_read_internal_eeprom
  1534   000F7E  6E4E               	movwf	??_read_ust_data_from_eeprom^0,c
  1535   000F80  0ED0               	movlw	208
  1536   000F82  244E               	addwf	??_read_ust_data_from_eeprom^0,w,c
  1537   000F84  6E1D               	movwf	_ssd1^0,c
  1538   000F86  6A1E               	clrf	(_ssd1+1)^0,c
  1539   000F88  0EFF               	movlw	255
  1540   000F8A  221E               	addwfc	(_ssd1+1)^0,f,c
  1541                           
  1542                           ;ssd_fields.c: 20:     ssd2 = read_internal_eeprom(0X02) - 48;
  1543   000F8C  0E02               	movlw	2
  1544   000F8E  ECB1  F008         	call	_read_internal_eeprom
  1545   000F92  6E4E               	movwf	??_read_ust_data_from_eeprom^0,c
  1546   000F94  0ED0               	movlw	208
  1547   000F96  244E               	addwf	??_read_ust_data_from_eeprom^0,w,c
  1548   000F98  6E1F               	movwf	_ssd2^0,c
  1549   000F9A  6A20               	clrf	(_ssd2+1)^0,c
  1550   000F9C  0EFF               	movlw	255
  1551   000F9E  2220               	addwfc	(_ssd2+1)^0,f,c
  1552                           
  1553                           ;ssd_fields.c: 21:     ssd3 = read_internal_eeprom(0X03) - 48;
  1554   000FA0  0E03               	movlw	3
  1555   000FA2  ECB1  F008         	call	_read_internal_eeprom
  1556   000FA6  6E4E               	movwf	??_read_ust_data_from_eeprom^0,c
  1557   000FA8  0ED0               	movlw	208
  1558   000FAA  244E               	addwf	??_read_ust_data_from_eeprom^0,w,c
  1559   000FAC  6E21               	movwf	_ssd3^0,c
  1560   000FAE  6A22               	clrf	(_ssd3+1)^0,c
  1561   000FB0  0EFF               	movlw	255
  1562   000FB2  2222               	addwfc	(_ssd3+1)^0,f,c
  1563   000FB4  0012               	return		;funcret
  1564   000FB6                     __end_of_read_ust_data_from_eeprom:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function _first_ssd_ust *****************
  1568 ;; Defined at:
  1569 ;;		line 93 in file "ssd_fields.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1583 ;;      Params:         0       0       0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0
  1586 ;;      Totals:         0       0       0       0       0       0       0
  1587 ;;Total ram usage:        0 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_normal_stock
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text8
  1598   0009CC                     __ptext8:
  1599                           	callstack 0
  1600   0009CC                     _first_ssd_ust:
  1601                           	callstack 26
  1602   0009CC                     
  1603                           ;ssd_fields.c: 94:     ssd[0] = digit[ssd0];
  1604   0009CC  0E34               	movlw	low _digit@ssd_display$F316
  1605   0009CE  241B               	addwf	_ssd0^0,w,c
  1606   0009D0  6ED9               	movwf	fsr2l,c
  1607   0009D2  0E00               	movlw	high _digit@ssd_display$F316
  1608   0009D4  201C               	addwfc	(_ssd0+1)^0,w,c
  1609   0009D6  6EDA               	movwf	fsr2h,c
  1610   0009D8  50DF               	movf	indf2,w,c
  1611   0009DA  6E2C               	movwf	_ssd@ssd_display$F315^0,c
  1612                           
  1613                           ;ssd_fields.c: 95:     ssd[1] = digit[ssd1] | 0X10;
  1614   0009DC  0E34               	movlw	low _digit@ssd_display$F316
  1615   0009DE  241D               	addwf	_ssd1^0,w,c
  1616   0009E0  6ED9               	movwf	fsr2l,c
  1617   0009E2  0E00               	movlw	high _digit@ssd_display$F316
  1618   0009E4  201E               	addwfc	(_ssd1+1)^0,w,c
  1619   0009E6  6EDA               	movwf	fsr2h,c
  1620   0009E8  50DF               	movf	indf2,w,c
  1621   0009EA  0910               	iorlw	16
  1622   0009EC  6E2D               	movwf	(_ssd@ssd_display$F315+1)^0,c
  1623                           
  1624                           ;ssd_fields.c: 96:     ssd[2] = digit[ssd2];
  1625   0009EE  0E34               	movlw	low _digit@ssd_display$F316
  1626   0009F0  241F               	addwf	_ssd2^0,w,c
  1627   0009F2  6ED9               	movwf	fsr2l,c
  1628   0009F4  0E00               	movlw	high _digit@ssd_display$F316
  1629   0009F6  2020               	addwfc	(_ssd2+1)^0,w,c
  1630   0009F8  6EDA               	movwf	fsr2h,c
  1631   0009FA  50DF               	movf	indf2,w,c
  1632   0009FC  6E2E               	movwf	(_ssd@ssd_display$F315+2)^0,c
  1633                           
  1634                           ;ssd_fields.c: 97:     ssd[3] = digit[ssd3];
  1635   0009FE  0E34               	movlw	low _digit@ssd_display$F316
  1636   000A00  2421               	addwf	_ssd3^0,w,c
  1637   000A02  6ED9               	movwf	fsr2l,c
  1638   000A04  0E00               	movlw	high _digit@ssd_display$F316
  1639   000A06  2022               	addwfc	(_ssd3+1)^0,w,c
  1640   000A08  6EDA               	movwf	fsr2h,c
  1641   000A0A  50DF               	movf	indf2,w,c
  1642   000A0C  6E2F               	movwf	(_ssd@ssd_display$F315+3)^0,c
  1643   000A0E                     
  1644                           ;ssd_fields.c: 98:     if (key == 0x0E) {
  1645   000A0E  0E0E               	movlw	14
  1646   000A10  182B               	xorwf	_key^0,w,c
  1647   000A12  A4D8               	btfss	status,2,c
  1648   000A14  EF0E  F005         	goto	u91
  1649   000A18  EF10  F005         	goto	u90
  1650   000A1C                     u91:
  1651   000A1C  EF23  F005         	goto	l376
  1652   000A20                     u90:
  1653   000A20                     
  1654                           ;ssd_fields.c: 99:         if (ssd1 < 9)
  1655   000A20  501E               	movf	(_ssd1+1)^0,w,c
  1656   000A22  E107               	bnz	u101
  1657   000A24  0E09               	movlw	9
  1658   000A26  5C1D               	subwf	_ssd1^0,w,c
  1659   000A28  B0D8               	btfsc	status,0,c
  1660   000A2A  EF19  F005         	goto	u101
  1661   000A2E  EF1B  F005         	goto	u100
  1662   000A32                     u101:
  1663   000A32  EF1F  F005         	goto	l1336
  1664   000A36                     u100:
  1665   000A36                     
  1666                           ;ssd_fields.c: 100:             ssd1++;
  1667   000A36  4A1D               	infsnz	_ssd1^0,f,c
  1668   000A38  2A1E               	incf	(_ssd1+1)^0,f,c
  1669   000A3A  EF23  F005         	goto	l376
  1670   000A3E                     l1336:
  1671                           
  1672                           ;ssd_fields.c: 102:             ssd1 = 0;
  1673   000A3E  0E00               	movlw	0
  1674   000A40  6E1E               	movwf	(_ssd1+1)^0,c
  1675   000A42  0E00               	movlw	0
  1676   000A44  6E1D               	movwf	_ssd1^0,c
  1677   000A46                     l376:
  1678   000A46  0012               	return		;funcret
  1679   000A48                     __end_of_first_ssd_ust:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _can_stock *****************
  1683 ;; Defined at:
  1684 ;;		line 119 in file "ssd_fields.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  wait            4   14[COMRAM] unsigned long 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1698 ;;      Params:         0       0       0       0       0       0       0
  1699 ;;      Locals:         4       0       0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0
  1701 ;;      Totals:         4       0       0       0       0       0       0
  1702 ;;Total ram usage:        4 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 3
  1705 ;; This function calls:
  1706 ;;		___lwdiv
  1707 ;;		___lwmod
  1708 ;;		_can_transmit
  1709 ;;		_display
  1710 ;;		_write_internal_eeprom
  1711 ;; This function is called by:
  1712 ;;		_update_stock
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text9
  1717   000012                     __ptext9:
  1718                           	callstack 0
  1719   000012                     _can_stock:
  1720                           	callstack 25
  1721   000012                     
  1722                           ;ssd_fields.c: 121:     unsigned static int delay = 0;;ssd_fields.c: 122:     if(key == 
      +                          0x0E)
  1723   000012  0E0E               	movlw	14
  1724   000014  182B               	xorwf	_key^0,w,c
  1725   000016  A4D8               	btfss	status,2,c
  1726   000018  EF10  F000         	goto	u1041
  1727   00001C  EF12  F000         	goto	u1040
  1728   000020                     u1041:
  1729   000020  EF31  F000         	goto	l1992
  1730   000024                     u1040:
  1731   000024                     
  1732                           ;ssd_fields.c: 123:     {;ssd_fields.c: 124:         if(num < 9999 && delay++ == 10){
  1733   000024  0E0F               	movlw	15
  1734   000026  5C19               	subwf	_num^0,w,c
  1735   000028  0E27               	movlw	39
  1736   00002A  581A               	subwfb	(_num+1)^0,w,c
  1737   00002C  B0D8               	btfsc	status,0,c
  1738   00002E  EF1B  F000         	goto	u1051
  1739   000032  EF1D  F000         	goto	u1050
  1740   000036                     u1051:
  1741   000036  EFEE  F000         	goto	l2020
  1742   00003A                     u1050:
  1743   00003A  4A17               	infsnz	can_stock@delay^0,f,c
  1744   00003C  2A18               	incf	(can_stock@delay+1)^0,f,c
  1745   00003E  0E0B               	movlw	11
  1746   000040  1817               	xorwf	can_stock@delay^0,w,c
  1747   000042  1018               	iorwf	(can_stock@delay+1)^0,w,c
  1748   000044  A4D8               	btfss	status,2,c
  1749   000046  EF27  F000         	goto	u1061
  1750   00004A  EF29  F000         	goto	u1060
  1751   00004E                     u1061:
  1752   00004E  EFEE  F000         	goto	l2020
  1753   000052                     u1060:
  1754   000052                     
  1755                           ;ssd_fields.c: 125:             num++;
  1756   000052  4A19               	infsnz	_num^0,f,c
  1757   000054  2A1A               	incf	(_num+1)^0,f,c
  1758   000056                     l1990:
  1759                           
  1760                           ;ssd_fields.c: 126:             delay = 0;
  1761   000056  0E00               	movlw	0
  1762   000058  6E18               	movwf	(can_stock@delay+1)^0,c
  1763   00005A  0E00               	movlw	0
  1764   00005C  6E17               	movwf	can_stock@delay^0,c
  1765   00005E  EFEE  F000         	goto	l2020
  1766   000062                     l1992:
  1767   000062  0E0D               	movlw	13
  1768   000064  182B               	xorwf	_key^0,w,c
  1769   000066  A4D8               	btfss	status,2,c
  1770   000068  EF38  F000         	goto	u1071
  1771   00006C  EF3A  F000         	goto	u1070
  1772   000070                     u1071:
  1773   000070  EF54  F000         	goto	l2002
  1774   000074                     u1070:
  1775   000074                     
  1776                           ;ssd_fields.c: 129:         if(num > 0 && delay++ == 10){
  1777   000074  5019               	movf	_num^0,w,c
  1778   000076  101A               	iorwf	(_num+1)^0,w,c
  1779   000078  B4D8               	btfsc	status,2,c
  1780   00007A  EF41  F000         	goto	u1081
  1781   00007E  EF43  F000         	goto	u1080
  1782   000082                     u1081:
  1783   000082  EFEE  F000         	goto	l2020
  1784   000086                     u1080:
  1785   000086  4A17               	infsnz	can_stock@delay^0,f,c
  1786   000088  2A18               	incf	(can_stock@delay+1)^0,f,c
  1787   00008A  0E0B               	movlw	11
  1788   00008C  1817               	xorwf	can_stock@delay^0,w,c
  1789   00008E  1018               	iorwf	(can_stock@delay+1)^0,w,c
  1790   000090  A4D8               	btfss	status,2,c
  1791   000092  EF4D  F000         	goto	u1091
  1792   000096  EF4F  F000         	goto	u1090
  1793   00009A                     u1091:
  1794   00009A  EFEE  F000         	goto	l2020
  1795   00009E                     u1090:
  1796   00009E                     
  1797                           ;ssd_fields.c: 130:             num--;
  1798   00009E  0619               	decf	_num^0,f,c
  1799   0000A0  A0D8               	btfss	status,0,c
  1800   0000A2  061A               	decf	(_num+1)^0,f,c
  1801   0000A4  EF2B  F000         	goto	l1990
  1802   0000A8                     l2002:
  1803   0000A8  0E0B               	movlw	11
  1804   0000AA  182B               	xorwf	_key^0,w,c
  1805   0000AC  A4D8               	btfss	status,2,c
  1806   0000AE  EF5B  F000         	goto	u1101
  1807   0000B2  EF5D  F000         	goto	u1100
  1808   0000B6                     u1101:
  1809   0000B6  EFEE  F000         	goto	l2020
  1810   0000BA                     u1100:
  1811   0000BA                     
  1812                           ;ssd_fields.c: 134:         field_flag = 0;
  1813   0000BA  0E00               	movlw	0
  1814   0000BC  6E28               	movwf	(_field_flag+1)^0,c
  1815   0000BE  0E00               	movlw	0
  1816   0000C0  6E27               	movwf	_field_flag^0,c
  1817                           
  1818                           ;ssd_fields.c: 135:         in_field_ust = 1;
  1819   0000C2  0E00               	movlw	0
  1820   0000C4  6E4B               	movwf	(_in_field_ust+1)^0,c
  1821   0000C6  0E01               	movlw	1
  1822   0000C8  6E4A               	movwf	_in_field_ust^0,c
  1823                           
  1824                           ;ssd_fields.c: 136:         interrupt_key = 0;
  1825   0000CA  0E00               	movlw	0
  1826   0000CC  6E2A               	movwf	(_interrupt_key+1)^0,c
  1827   0000CE  0E00               	movlw	0
  1828   0000D0  6E29               	movwf	_interrupt_key^0,c
  1829                           
  1830                           ;ssd_fields.c: 137:         increment_ust_flag = 0;
  1831   0000D2  0E00               	movlw	0
  1832   0000D4  6E26               	movwf	(_increment_ust_flag+1)^0,c
  1833   0000D6  0E00               	movlw	0
  1834   0000D8  6E25               	movwf	_increment_ust_flag^0,c
  1835                           
  1836                           ;ssd_fields.c: 138:         disp_flag = 1;
  1837   0000DA  0E00               	movlw	0
  1838   0000DC  6E43               	movwf	(_disp_flag+1)^0,c
  1839   0000DE  0E01               	movlw	1
  1840   0000E0  6E42               	movwf	_disp_flag^0,c
  1841                           
  1842                           ;ssd_fields.c: 139:         rec_cond_flag = 1;
  1843   0000E2  0E00               	movlw	0
  1844   0000E4  6E47               	movwf	(_rec_cond_flag+1)^0,c
  1845   0000E6  0E01               	movlw	1
  1846   0000E8  6E46               	movwf	_rec_cond_flag^0,c
  1847                           
  1848                           ;ssd_fields.c: 140:         update_data_flag = 1;
  1849   0000EA  0E00               	movlw	0
  1850   0000EC  6E45               	movwf	(_update_data_flag+1)^0,c
  1851   0000EE  0E01               	movlw	1
  1852   0000F0  6E44               	movwf	_update_data_flag^0,c
  1853   0000F2                     
  1854                           ;ssd_fields.c: 141:         write_internal_eeprom(0X00, (num / 1000) + 48);
  1855   0000F2  C019  F04D         	movff	_num,___lwdiv@dividend
  1856   0000F6  C01A  F04E         	movff	_num+1,___lwdiv@dividend+1
  1857   0000FA  0E03               	movlw	3
  1858   0000FC  6E50               	movwf	(___lwdiv@divisor+1)^0,c
  1859   0000FE  0EE8               	movlw	232
  1860   000100  6E4F               	movwf	___lwdiv@divisor^0,c
  1861   000102  EC57  F006         	call	___lwdiv	;wreg free
  1862   000106  504D               	movf	?___lwdiv^0,w,c
  1863   000108  0F30               	addlw	48
  1864   00010A  6E59               	movwf	write_internal_eeprom@data^0,c
  1865   00010C  0E00               	movlw	0
  1866   00010E  EC54  F008         	call	_write_internal_eeprom
  1867   000112                     
  1868                           ;ssd_fields.c: 142:         write_internal_eeprom(0X01, ((num / 100) % 10) + 48);
  1869   000112  0E00               	movlw	0
  1870   000114  6E50               	movwf	(___lwdiv@divisor+1)^0,c
  1871   000116  0E64               	movlw	100
  1872   000118  6E4F               	movwf	___lwdiv@divisor^0,c
  1873   00011A  C019  F04D         	movff	_num,___lwdiv@dividend
  1874   00011E  C01A  F04E         	movff	_num+1,___lwdiv@dividend+1
  1875   000122  EC57  F006         	call	___lwdiv	;wreg free
  1876   000126  C04D  F054         	movff	?___lwdiv,___lwmod@dividend
  1877   00012A  C04E  F055         	movff	?___lwdiv+1,___lwmod@dividend+1
  1878   00012E  0E00               	movlw	0
  1879   000130  6E57               	movwf	(___lwmod@divisor+1)^0,c
  1880   000132  0E0A               	movlw	10
  1881   000134  6E56               	movwf	___lwmod@divisor^0,c
  1882   000136  ECFB  F006         	call	___lwmod	;wreg free
  1883   00013A  5054               	movf	?___lwmod^0,w,c
  1884   00013C  0F30               	addlw	48
  1885   00013E  6E59               	movwf	write_internal_eeprom@data^0,c
  1886   000140  0E01               	movlw	1
  1887   000142  EC54  F008         	call	_write_internal_eeprom
  1888   000146                     
  1889                           ;ssd_fields.c: 143:         write_internal_eeprom(0X02, ((num / 10) % 10) + 48);
  1890   000146  0E00               	movlw	0
  1891   000148  6E50               	movwf	(___lwdiv@divisor+1)^0,c
  1892   00014A  0E0A               	movlw	10
  1893   00014C  6E4F               	movwf	___lwdiv@divisor^0,c
  1894   00014E  C019  F04D         	movff	_num,___lwdiv@dividend
  1895   000152  C01A  F04E         	movff	_num+1,___lwdiv@dividend+1
  1896   000156  EC57  F006         	call	___lwdiv	;wreg free
  1897   00015A  C04D  F054         	movff	?___lwdiv,___lwmod@dividend
  1898   00015E  C04E  F055         	movff	?___lwdiv+1,___lwmod@dividend+1
  1899   000162  0E00               	movlw	0
  1900   000164  6E57               	movwf	(___lwmod@divisor+1)^0,c
  1901   000166  0E0A               	movlw	10
  1902   000168  6E56               	movwf	___lwmod@divisor^0,c
  1903   00016A  ECFB  F006         	call	___lwmod	;wreg free
  1904   00016E  5054               	movf	?___lwmod^0,w,c
  1905   000170  0F30               	addlw	48
  1906   000172  6E59               	movwf	write_internal_eeprom@data^0,c
  1907   000174  0E02               	movlw	2
  1908   000176  EC54  F008         	call	_write_internal_eeprom
  1909   00017A                     
  1910                           ;ssd_fields.c: 144:         write_internal_eeprom(0X03, (num % 10) + 48);
  1911   00017A  C019  F054         	movff	_num,___lwmod@dividend
  1912   00017E  C01A  F055         	movff	_num+1,___lwmod@dividend+1
  1913   000182  0E00               	movlw	0
  1914   000184  6E57               	movwf	(___lwmod@divisor+1)^0,c
  1915   000186  0E0A               	movlw	10
  1916   000188  6E56               	movwf	___lwmod@divisor^0,c
  1917   00018A  ECFB  F006         	call	___lwmod	;wreg free
  1918   00018E  5054               	movf	?___lwmod^0,w,c
  1919   000190  0F30               	addlw	48
  1920   000192  6E59               	movwf	write_internal_eeprom@data^0,c
  1921   000194  0E03               	movlw	3
  1922   000196  EC54  F008         	call	_write_internal_eeprom
  1923                           
  1924                           ;ssd_fields.c: 145:         for(unsigned long wait = 5000; wait--;);
  1925   00019A  0E88               	movlw	136
  1926   00019C  6E5B               	movwf	can_stock@wait^0,c
  1927   00019E  0E13               	movlw	19
  1928   0001A0  6E5C               	movwf	(can_stock@wait+1)^0,c
  1929   0001A2  0E00               	movlw	0
  1930   0001A4  6E5D               	movwf	(can_stock@wait+2)^0,c
  1931   0001A6  0E00               	movlw	0
  1932   0001A8  6E5E               	movwf	(can_stock@wait+3)^0,c
  1933   0001AA                     l2014:
  1934   0001AA  065B               	decf	can_stock@wait^0,f,c
  1935   0001AC  0E00               	movlw	0
  1936   0001AE  5A5C               	subwfb	(can_stock@wait+1)^0,f,c
  1937   0001B0  5A5D               	subwfb	(can_stock@wait+2)^0,f,c
  1938   0001B2  5A5E               	subwfb	(can_stock@wait+3)^0,f,c
  1939   0001B4  285B               	incf	can_stock@wait^0,w,c
  1940   0001B6  E10A               	bnz	u1111
  1941   0001B8  285C               	incf	(can_stock@wait+1)^0,w,c
  1942   0001BA  E108               	bnz	u1111
  1943   0001BC  285D               	incf	(can_stock@wait+2)^0,w,c
  1944   0001BE  E106               	bnz	u1111
  1945   0001C0  285E               	incf	(can_stock@wait+3)^0,w,c
  1946   0001C2  A4D8               	btfss	status,2,c
  1947   0001C4  EFE6  F000         	goto	u1111
  1948   0001C8  EFE8  F000         	goto	u1110
  1949   0001CC                     u1111:
  1950   0001CC  EFD5  F000         	goto	l2014
  1951   0001D0                     u1110:
  1952   0001D0                     
  1953                           ;ssd_fields.c: 146:         num = 0;
  1954   0001D0  0E00               	movlw	0
  1955   0001D2  6E1A               	movwf	(_num+1)^0,c
  1956   0001D4  0E00               	movlw	0
  1957   0001D6  6E19               	movwf	_num^0,c
  1958   0001D8                     
  1959                           ;ssd_fields.c: 147:         can_transmit();
  1960   0001D8  EC91  F006         	call	_can_transmit	;wreg free
  1961   0001DC                     l2020:
  1962                           
  1963                           ;ssd_fields.c: 149:     ssd[0] = digit[num / 1000];
  1964   0001DC  C019  F04D         	movff	_num,___lwdiv@dividend
  1965   0001E0  C01A  F04E         	movff	_num+1,___lwdiv@dividend+1
  1966   0001E4  0E03               	movlw	3
  1967   0001E6  6E50               	movwf	(___lwdiv@divisor+1)^0,c
  1968   0001E8  0EE8               	movlw	232
  1969   0001EA  6E4F               	movwf	___lwdiv@divisor^0,c
  1970   0001EC  EC57  F006         	call	___lwdiv	;wreg free
  1971   0001F0  0E34               	movlw	low _digit@ssd_display$F316
  1972   0001F2  244D               	addwf	?___lwdiv^0,w,c
  1973   0001F4  6ED9               	movwf	fsr2l,c
  1974   0001F6  0E00               	movlw	high _digit@ssd_display$F316
  1975   0001F8  204E               	addwfc	(?___lwdiv+1)^0,w,c
  1976   0001FA  6EDA               	movwf	fsr2h,c
  1977   0001FC  50DF               	movf	indf2,w,c
  1978   0001FE  6E2C               	movwf	_ssd@ssd_display$F315^0,c
  1979   000200                     
  1980                           ;ssd_fields.c: 150:     ssd[1] = digit[(num / 100) % 10];
  1981   000200  0E00               	movlw	0
  1982   000202  6E50               	movwf	(___lwdiv@divisor+1)^0,c
  1983   000204  0E64               	movlw	100
  1984   000206  6E4F               	movwf	___lwdiv@divisor^0,c
  1985   000208  C019  F04D         	movff	_num,___lwdiv@dividend
  1986   00020C  C01A  F04E         	movff	_num+1,___lwdiv@dividend+1
  1987   000210  EC57  F006         	call	___lwdiv	;wreg free
  1988   000214  C04D  F054         	movff	?___lwdiv,___lwmod@dividend
  1989   000218  C04E  F055         	movff	?___lwdiv+1,___lwmod@dividend+1
  1990   00021C  0E00               	movlw	0
  1991   00021E  6E57               	movwf	(___lwmod@divisor+1)^0,c
  1992   000220  0E0A               	movlw	10
  1993   000222  6E56               	movwf	___lwmod@divisor^0,c
  1994   000224  ECFB  F006         	call	___lwmod	;wreg free
  1995   000228  0E34               	movlw	low _digit@ssd_display$F316
  1996   00022A  2454               	addwf	?___lwmod^0,w,c
  1997   00022C  6ED9               	movwf	fsr2l,c
  1998   00022E  0E00               	movlw	high _digit@ssd_display$F316
  1999   000230  2055               	addwfc	(?___lwmod+1)^0,w,c
  2000   000232  6EDA               	movwf	fsr2h,c
  2001   000234  50DF               	movf	indf2,w,c
  2002   000236  6E2D               	movwf	(_ssd@ssd_display$F315+1)^0,c
  2003   000238                     
  2004                           ;ssd_fields.c: 151:     ssd[2] = digit[(num / 10) % 10];
  2005   000238  0E00               	movlw	0
  2006   00023A  6E50               	movwf	(___lwdiv@divisor+1)^0,c
  2007   00023C  0E0A               	movlw	10
  2008   00023E  6E4F               	movwf	___lwdiv@divisor^0,c
  2009   000240  C019  F04D         	movff	_num,___lwdiv@dividend
  2010   000244  C01A  F04E         	movff	_num+1,___lwdiv@dividend+1
  2011   000248  EC57  F006         	call	___lwdiv	;wreg free
  2012   00024C  C04D  F054         	movff	?___lwdiv,___lwmod@dividend
  2013   000250  C04E  F055         	movff	?___lwdiv+1,___lwmod@dividend+1
  2014   000254  0E00               	movlw	0
  2015   000256  6E57               	movwf	(___lwmod@divisor+1)^0,c
  2016   000258  0E0A               	movlw	10
  2017   00025A  6E56               	movwf	___lwmod@divisor^0,c
  2018   00025C  ECFB  F006         	call	___lwmod	;wreg free
  2019   000260  0E34               	movlw	low _digit@ssd_display$F316
  2020   000262  2454               	addwf	?___lwmod^0,w,c
  2021   000264  6ED9               	movwf	fsr2l,c
  2022   000266  0E00               	movlw	high _digit@ssd_display$F316
  2023   000268  2055               	addwfc	(?___lwmod+1)^0,w,c
  2024   00026A  6EDA               	movwf	fsr2h,c
  2025   00026C  50DF               	movf	indf2,w,c
  2026   00026E  6E2E               	movwf	(_ssd@ssd_display$F315+2)^0,c
  2027   000270                     
  2028                           ;ssd_fields.c: 152:     ssd[3] = digit[num % 10];
  2029   000270  C019  F054         	movff	_num,___lwmod@dividend
  2030   000274  C01A  F055         	movff	_num+1,___lwmod@dividend+1
  2031   000278  0E00               	movlw	0
  2032   00027A  6E57               	movwf	(___lwmod@divisor+1)^0,c
  2033   00027C  0E0A               	movlw	10
  2034   00027E  6E56               	movwf	___lwmod@divisor^0,c
  2035   000280  ECFB  F006         	call	___lwmod	;wreg free
  2036   000284  0E34               	movlw	low _digit@ssd_display$F316
  2037   000286  2454               	addwf	?___lwmod^0,w,c
  2038   000288  6ED9               	movwf	fsr2l,c
  2039   00028A  0E00               	movlw	high _digit@ssd_display$F316
  2040   00028C  2055               	addwfc	(?___lwmod+1)^0,w,c
  2041   00028E  6EDA               	movwf	fsr2h,c
  2042   000290  50DF               	movf	indf2,w,c
  2043   000292  6E2F               	movwf	(_ssd@ssd_display$F315+3)^0,c
  2044   000294                     
  2045                           ;ssd_fields.c: 153:     display(ssd);
  2046   000294  0E2C               	movlw	low _ssd@ssd_display$F315
  2047   000296  6E4D               	movwf	display@data^0,c
  2048   000298  0E00               	movlw	high _ssd@ssd_display$F315
  2049   00029A  6E4E               	movwf	(display@data+1)^0,c
  2050   00029C  ECC6  F006         	call	_display	;wreg free
  2051   0002A0  0012               	return		;funcret
  2052   0002A2                     __end_of_can_stock:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _can_transmit *****************
  2056 ;; Defined at:
  2057 ;;		line 95 in file "can.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2071 ;;      Params:         0       0       0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 2
  2078 ;; This function calls:
  2079 ;;		_read_internal_eeprom
  2080 ;; This function is called by:
  2081 ;;		_normal_stock
  2082 ;;		_can_stock
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text10
  2087   000D22                     __ptext10:
  2088                           	callstack 0
  2089   000D22                     _can_transmit:
  2090                           	callstack 25
  2091   000D22                     
  2092                           ;can.c: 97:  TXB0EIDH = 0x00;
  2093   000D22  0E00               	movlw	0
  2094   000D24  010F               	movlb	15	; () banked
  2095   000D26  6F43               	movwf	67,b	;volatile
  2096                           
  2097                           ;can.c: 98:  TXB0EIDL = 0x00;
  2098   000D28  0E00               	movlw	0
  2099   000D2A  6F44               	movwf	68,b	;volatile
  2100                           
  2101                           ;can.c: 101:  TXB0SIDH = 0x6B;
  2102   000D2C  0E6B               	movlw	107
  2103   000D2E  6F41               	movwf	65,b	;volatile
  2104                           
  2105                           ;can.c: 102:  TXB0SIDL = 0xC0;
  2106   000D30  0EC0               	movlw	192
  2107   000D32  6F42               	movwf	66,b	;volatile
  2108                           
  2109                           ;can.c: 104:  TXB0DLC = 0x08;
  2110   000D34  0E08               	movlw	8
  2111   000D36  6F45               	movwf	69,b	;volatile
  2112   000D38                     
  2113                           ; BSR set to: 15
  2114                           ;can.c: 114:     TXB0D0 = read_internal_eeprom(0X00);
  2115   000D38  0E00               	movlw	0
  2116   000D3A  ECB1  F008         	call	_read_internal_eeprom
  2117   000D3E  010F               	movlb	15	; () banked
  2118   000D40  6F46               	movwf	70,b	;volatile
  2119   000D42                     
  2120                           ; BSR set to: 15
  2121                           ;can.c: 115:     TXB0D1 = read_internal_eeprom(0X01);
  2122   000D42  0E01               	movlw	1
  2123   000D44  ECB1  F008         	call	_read_internal_eeprom
  2124   000D48  010F               	movlb	15	; () banked
  2125   000D4A  6F47               	movwf	71,b	;volatile
  2126   000D4C                     
  2127                           ; BSR set to: 15
  2128                           ;can.c: 116:     TXB0D2 = read_internal_eeprom(0X02);
  2129   000D4C  0E02               	movlw	2
  2130   000D4E  ECB1  F008         	call	_read_internal_eeprom
  2131   000D52  010F               	movlb	15	; () banked
  2132   000D54  6F48               	movwf	72,b	;volatile
  2133   000D56                     
  2134                           ; BSR set to: 15
  2135                           ;can.c: 117:     TXB0D3 = read_internal_eeprom(0X03);
  2136   000D56  0E03               	movlw	3
  2137   000D58  ECB1  F008         	call	_read_internal_eeprom
  2138   000D5C  010F               	movlb	15	; () banked
  2139   000D5E  6F49               	movwf	73,b	;volatile
  2140   000D60                     
  2141                           ; BSR set to: 15
  2142                           ;can.c: 118:     TXB0D4 = read_internal_eeprom(0X04);
  2143   000D60  0E04               	movlw	4
  2144   000D62  ECB1  F008         	call	_read_internal_eeprom
  2145   000D66  010F               	movlb	15	; () banked
  2146   000D68  6F4A               	movwf	74,b	;volatile
  2147   000D6A                     
  2148                           ; BSR set to: 15
  2149                           ;can.c: 119:     TXB0D5 = read_internal_eeprom(0X05);
  2150   000D6A  0E05               	movlw	5
  2151   000D6C  ECB1  F008         	call	_read_internal_eeprom
  2152   000D70  010F               	movlb	15	; () banked
  2153   000D72  6F4B               	movwf	75,b	;volatile
  2154   000D74                     
  2155                           ; BSR set to: 15
  2156                           ;can.c: 120:     TXB0D6 = read_internal_eeprom(0X06);
  2157   000D74  0E06               	movlw	6
  2158   000D76  ECB1  F008         	call	_read_internal_eeprom
  2159   000D7A  010F               	movlb	15	; () banked
  2160   000D7C  6F4C               	movwf	76,b	;volatile
  2161   000D7E                     
  2162                           ; BSR set to: 15
  2163                           ;can.c: 121:     TXB0D7 = read_internal_eeprom(0X07);
  2164   000D7E  0E07               	movlw	7
  2165   000D80  ECB1  F008         	call	_read_internal_eeprom
  2166   000D84  010F               	movlb	15	; () banked
  2167   000D86  6F4D               	movwf	77,b	;volatile
  2168   000D88                     
  2169                           ; BSR set to: 15
  2170                           ;can.c: 122:  TXB0REQ = 1;
  2171   000D88  8740               	bsf	64,3,b	;volatile
  2172   000D8A                     
  2173                           ; BSR set to: 15
  2174   000D8A  0012               	return		;funcret
  2175   000D8C                     __end_of_can_transmit:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function ___lwmod *****************
  2179 ;; Defined at:
  2180 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  dividend        2    7[COMRAM] unsigned int 
  2183 ;;  divisor         2    9[COMRAM] unsigned int 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  counter         1   11[COMRAM] unsigned char 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2    7[COMRAM] unsigned int 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2195 ;;      Params:         4       0       0       0       0       0       0
  2196 ;;      Locals:         1       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0
  2198 ;;      Totals:         5       0       0       0       0       0       0
  2199 ;;Total ram usage:        5 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_can_stock
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text11
  2210   000DF6                     __ptext11:
  2211                           	callstack 0
  2212   000DF6                     ___lwmod:
  2213                           	callstack 26
  2214   000DF6  5056               	movf	___lwmod@divisor^0,w,c
  2215   000DF8  1057               	iorwf	(___lwmod@divisor+1)^0,w,c
  2216   000DFA  B4D8               	btfsc	status,2,c
  2217   000DFC  EF02  F007         	goto	u931
  2218   000E00  EF04  F007         	goto	u930
  2219   000E04                     u931:
  2220   000E04  EF28  F007         	goto	l1082
  2221   000E08                     u930:
  2222   000E08  0E01               	movlw	1
  2223   000E0A  6E58               	movwf	___lwmod@counter^0,c
  2224   000E0C  EF0C  F007         	goto	l1926
  2225   000E10                     l1924:
  2226   000E10  90D8               	bcf	status,0,c
  2227   000E12  3656               	rlcf	___lwmod@divisor^0,f,c
  2228   000E14  3657               	rlcf	(___lwmod@divisor+1)^0,f,c
  2229   000E16  2A58               	incf	___lwmod@counter^0,f,c
  2230   000E18                     l1926:
  2231   000E18  AE57               	btfss	(___lwmod@divisor+1)^0,7,c
  2232   000E1A  EF11  F007         	goto	u941
  2233   000E1E  EF13  F007         	goto	u940
  2234   000E22                     u941:
  2235   000E22  EF08  F007         	goto	l1924
  2236   000E26                     u940:
  2237   000E26                     l1928:
  2238   000E26  5056               	movf	___lwmod@divisor^0,w,c
  2239   000E28  5C54               	subwf	___lwmod@dividend^0,w,c
  2240   000E2A  5057               	movf	(___lwmod@divisor+1)^0,w,c
  2241   000E2C  5855               	subwfb	(___lwmod@dividend+1)^0,w,c
  2242   000E2E  A0D8               	btfss	status,0,c
  2243   000E30  EF1C  F007         	goto	u951
  2244   000E34  EF1E  F007         	goto	u950
  2245   000E38                     u951:
  2246   000E38  EF22  F007         	goto	l1932
  2247   000E3C                     u950:
  2248   000E3C  5056               	movf	___lwmod@divisor^0,w,c
  2249   000E3E  5E54               	subwf	___lwmod@dividend^0,f,c
  2250   000E40  5057               	movf	(___lwmod@divisor+1)^0,w,c
  2251   000E42  5A55               	subwfb	(___lwmod@dividend+1)^0,f,c
  2252   000E44                     l1932:
  2253   000E44  90D8               	bcf	status,0,c
  2254   000E46  3257               	rrcf	(___lwmod@divisor+1)^0,f,c
  2255   000E48  3256               	rrcf	___lwmod@divisor^0,f,c
  2256   000E4A  2E58               	decfsz	___lwmod@counter^0,f,c
  2257   000E4C  EF13  F007         	goto	l1928
  2258   000E50                     l1082:
  2259   000E50  C054  F054         	movff	___lwmod@dividend,?___lwmod
  2260   000E54  C055  F055         	movff	___lwmod@dividend+1,?___lwmod+1
  2261   000E58  0012               	return		;funcret
  2262   000E5A                     __end_of___lwmod:
  2263                           	callstack 0
  2264                           
  2265 ;; *************** function ___lwdiv *****************
  2266 ;; Defined at:
  2267 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  dividend        2    0[COMRAM] unsigned int 
  2270 ;;  divisor         2    2[COMRAM] unsigned int 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  quotient        2    4[COMRAM] unsigned int 
  2273 ;;  counter         1    6[COMRAM] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2    0[COMRAM] unsigned int 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2283 ;;      Params:         4       0       0       0       0       0       0
  2284 ;;      Locals:         3       0       0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0
  2286 ;;      Totals:         7       0       0       0       0       0       0
  2287 ;;Total ram usage:        7 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_can_stock
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text12
  2298   000CAE                     __ptext12:
  2299                           	callstack 0
  2300   000CAE                     ___lwdiv:
  2301                           	callstack 26
  2302   000CAE  0E00               	movlw	0
  2303   000CB0  6E52               	movwf	(___lwdiv@quotient+1)^0,c
  2304   000CB2  0E00               	movlw	0
  2305   000CB4  6E51               	movwf	___lwdiv@quotient^0,c
  2306   000CB6  504F               	movf	___lwdiv@divisor^0,w,c
  2307   000CB8  1050               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2308   000CBA  B4D8               	btfsc	status,2,c
  2309   000CBC  EF62  F006         	goto	u901
  2310   000CC0  EF64  F006         	goto	u900
  2311   000CC4                     u901:
  2312   000CC4  EF8C  F006         	goto	l1072
  2313   000CC8                     u900:
  2314   000CC8  0E01               	movlw	1
  2315   000CCA  6E53               	movwf	___lwdiv@counter^0,c
  2316   000CCC  EF6C  F006         	goto	l1906
  2317   000CD0                     l1904:
  2318   000CD0  90D8               	bcf	status,0,c
  2319   000CD2  364F               	rlcf	___lwdiv@divisor^0,f,c
  2320   000CD4  3650               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2321   000CD6  2A53               	incf	___lwdiv@counter^0,f,c
  2322   000CD8                     l1906:
  2323   000CD8  AE50               	btfss	(___lwdiv@divisor+1)^0,7,c
  2324   000CDA  EF71  F006         	goto	u911
  2325   000CDE  EF73  F006         	goto	u910
  2326   000CE2                     u911:
  2327   000CE2  EF68  F006         	goto	l1904
  2328   000CE6                     u910:
  2329   000CE6                     l1908:
  2330   000CE6  90D8               	bcf	status,0,c
  2331   000CE8  3651               	rlcf	___lwdiv@quotient^0,f,c
  2332   000CEA  3652               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2333   000CEC  504F               	movf	___lwdiv@divisor^0,w,c
  2334   000CEE  5C4D               	subwf	___lwdiv@dividend^0,w,c
  2335   000CF0  5050               	movf	(___lwdiv@divisor+1)^0,w,c
  2336   000CF2  584E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2337   000CF4  A0D8               	btfss	status,0,c
  2338   000CF6  EF7F  F006         	goto	u921
  2339   000CFA  EF81  F006         	goto	u920
  2340   000CFE                     u921:
  2341   000CFE  EF86  F006         	goto	l1916
  2342   000D02                     u920:
  2343   000D02  504F               	movf	___lwdiv@divisor^0,w,c
  2344   000D04  5E4D               	subwf	___lwdiv@dividend^0,f,c
  2345   000D06  5050               	movf	(___lwdiv@divisor+1)^0,w,c
  2346   000D08  5A4E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2347   000D0A  8051               	bsf	___lwdiv@quotient^0,0,c
  2348   000D0C                     l1916:
  2349   000D0C  90D8               	bcf	status,0,c
  2350   000D0E  3250               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2351   000D10  324F               	rrcf	___lwdiv@divisor^0,f,c
  2352   000D12  2E53               	decfsz	___lwdiv@counter^0,f,c
  2353   000D14  EF73  F006         	goto	l1908
  2354   000D18                     l1072:
  2355   000D18  C051  F04D         	movff	___lwdiv@quotient,?___lwdiv
  2356   000D1C  C052  F04E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2357   000D20  0012               	return		;funcret
  2358   000D22                     __end_of___lwdiv:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function _product_id *****************
  2362 ;; Defined at:
  2363 ;;		line 157 in file "ssd_fields.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2377 ;;      Params:         0       0       0       0       0       0       0
  2378 ;;      Locals:         0       0       0       0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0       0       0
  2380 ;;      Totals:         0       0       0       0       0       0       0
  2381 ;;Total ram usage:        0 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 3
  2384 ;; This function calls:
  2385 ;;		_display
  2386 ;;		_first_ssd_pid
  2387 ;;		_read_pid_data_from_eeprom
  2388 ;;		_second_ssd_pid
  2389 ;;		_third_ssd_pid
  2390 ;;		_write_internal_eeprom
  2391 ;;		_zeroth_ssd_pid
  2392 ;; This function is called by:
  2393 ;;		_two_fields
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text13
  2398   000424                     __ptext13:
  2399                           	callstack 0
  2400   000424                     _product_id:
  2401                           	callstack 26
  2402   000424                     
  2403                           ;ssd_fields.c: 158:     unsigned static int once_pid = 1;;ssd_fields.c: 159:     if (onc
      +                          e_pid) {
  2404   000424  503E               	movf	product_id@once_pid^0,w,c
  2405   000426  103F               	iorwf	(product_id@once_pid+1)^0,w,c
  2406   000428  B4D8               	btfsc	status,2,c
  2407   00042A  EF19  F002         	goto	u1131
  2408   00042E  EF1B  F002         	goto	u1130
  2409   000432                     u1131:
  2410   000432  EF21  F002         	goto	l2044
  2411   000436                     u1130:
  2412   000436                     
  2413                           ;ssd_fields.c: 160:         once_pid = 0;
  2414   000436  0E00               	movlw	0
  2415   000438  6E3F               	movwf	(product_id@once_pid+1)^0,c
  2416   00043A  0E00               	movlw	0
  2417   00043C  6E3E               	movwf	product_id@once_pid^0,c
  2418   00043E                     
  2419                           ;ssd_fields.c: 161:         read_pid_data_from_eeprom();
  2420   00043E  ECDB  F007         	call	_read_pid_data_from_eeprom	;wreg free
  2421   000442                     l2044:
  2422                           
  2423                           ;ssd_fields.c: 163:     if (increment_pid_flag == 0) {
  2424   000442  5023               	movf	_increment_pid_flag^0,w,c
  2425   000444  1024               	iorwf	(_increment_pid_flag+1)^0,w,c
  2426   000446  A4D8               	btfss	status,2,c
  2427   000448  EF28  F002         	goto	u1141
  2428   00044C  EF2A  F002         	goto	u1140
  2429   000450                     u1141:
  2430   000450  EF2E  F002         	goto	l2048
  2431   000454                     u1140:
  2432   000454                     
  2433                           ;ssd_fields.c: 164:         third_ssd_pid();
  2434   000454  EC62  F005         	call	_third_ssd_pid	;wreg free
  2435                           
  2436                           ;ssd_fields.c: 165:     } else if (increment_pid_flag == 1) {
  2437   000458  EF57  F002         	goto	l2060
  2438   00045C                     l2048:
  2439   00045C  0423               	decf	_increment_pid_flag^0,w,c
  2440   00045E  1024               	iorwf	(_increment_pid_flag+1)^0,w,c
  2441   000460  A4D8               	btfss	status,2,c
  2442   000462  EF35  F002         	goto	u1151
  2443   000466  EF37  F002         	goto	u1150
  2444   00046A                     u1151:
  2445   00046A  EF3B  F002         	goto	l2052
  2446   00046E                     u1150:
  2447   00046E                     
  2448                           ;ssd_fields.c: 166:         second_ssd_pid();
  2449   00046E  ECA0  F005         	call	_second_ssd_pid	;wreg free
  2450                           
  2451                           ;ssd_fields.c: 167:     } else if (increment_pid_flag == 2) {
  2452   000472  EF57  F002         	goto	l2060
  2453   000476                     l2052:
  2454   000476  0E02               	movlw	2
  2455   000478  1823               	xorwf	_increment_pid_flag^0,w,c
  2456   00047A  1024               	iorwf	(_increment_pid_flag+1)^0,w,c
  2457   00047C  A4D8               	btfss	status,2,c
  2458   00047E  EF43  F002         	goto	u1161
  2459   000482  EF45  F002         	goto	u1160
  2460   000486                     u1161:
  2461   000486  EF49  F002         	goto	l2056
  2462   00048A                     u1160:
  2463   00048A                     
  2464                           ;ssd_fields.c: 168:         first_ssd_pid();
  2465   00048A  ECDE  F005         	call	_first_ssd_pid	;wreg free
  2466                           
  2467                           ;ssd_fields.c: 169:     } else if (increment_pid_flag == 3) {
  2468   00048E  EF57  F002         	goto	l2060
  2469   000492                     l2056:
  2470   000492  0E03               	movlw	3
  2471   000494  1823               	xorwf	_increment_pid_flag^0,w,c
  2472   000496  1024               	iorwf	(_increment_pid_flag+1)^0,w,c
  2473   000498  A4D8               	btfss	status,2,c
  2474   00049A  EF51  F002         	goto	u1171
  2475   00049E  EF53  F002         	goto	u1170
  2476   0004A2                     u1171:
  2477   0004A2  EF57  F002         	goto	l406
  2478   0004A6                     u1170:
  2479   0004A6                     
  2480                           ;ssd_fields.c: 170:         zeroth_ssd_pid();
  2481   0004A6  EC24  F005         	call	_zeroth_ssd_pid	;wreg free
  2482   0004AA  EF57  F002         	goto	l2060
  2483   0004AE                     l406:
  2484   0004AE                     l2060:
  2485                           
  2486                           ;ssd_fields.c: 172:     if (key == 0x0D) {
  2487   0004AE  0E0D               	movlw	13
  2488   0004B0  182B               	xorwf	_key^0,w,c
  2489   0004B2  A4D8               	btfss	status,2,c
  2490   0004B4  EF5E  F002         	goto	u1181
  2491   0004B8  EF60  F002         	goto	u1180
  2492   0004BC                     u1181:
  2493   0004BC  EF75  F002         	goto	l2068
  2494   0004C0                     u1180:
  2495   0004C0                     
  2496                           ;ssd_fields.c: 173:         if (increment_pid_flag < 3)
  2497   0004C0  5024               	movf	(_increment_pid_flag+1)^0,w,c
  2498   0004C2  E107               	bnz	u1191
  2499   0004C4  0E03               	movlw	3
  2500   0004C6  5C23               	subwf	_increment_pid_flag^0,w,c
  2501   0004C8  B0D8               	btfsc	status,0,c
  2502   0004CA  EF69  F002         	goto	u1191
  2503   0004CE  EF6B  F002         	goto	u1190
  2504   0004D2                     u1191:
  2505   0004D2  EF6F  F002         	goto	l2066
  2506   0004D6                     u1190:
  2507   0004D6                     
  2508                           ;ssd_fields.c: 174:             increment_pid_flag++;
  2509   0004D6  4A23               	infsnz	_increment_pid_flag^0,f,c
  2510   0004D8  2A24               	incf	(_increment_pid_flag+1)^0,f,c
  2511   0004DA  EFC6  F002         	goto	l2080
  2512   0004DE                     l2066:
  2513                           
  2514                           ;ssd_fields.c: 176:             increment_pid_flag = 0;
  2515   0004DE  0E00               	movlw	0
  2516   0004E0  6E24               	movwf	(_increment_pid_flag+1)^0,c
  2517   0004E2  0E00               	movlw	0
  2518   0004E4  6E23               	movwf	_increment_pid_flag^0,c
  2519   0004E6  EFC6  F002         	goto	l2080
  2520   0004EA                     l2068:
  2521   0004EA  0E0B               	movlw	11
  2522   0004EC  182B               	xorwf	_key^0,w,c
  2523   0004EE  A4D8               	btfss	status,2,c
  2524   0004F0  EF7C  F002         	goto	u1201
  2525   0004F4  EF7E  F002         	goto	u1200
  2526   0004F8                     u1201:
  2527   0004F8  EFC6  F002         	goto	l2080
  2528   0004FC                     u1200:
  2529   0004FC                     
  2530                           ;ssd_fields.c: 178:         field_flag = 0;
  2531   0004FC  0E00               	movlw	0
  2532   0004FE  6E28               	movwf	(_field_flag+1)^0,c
  2533   000500  0E00               	movlw	0
  2534   000502  6E27               	movwf	_field_flag^0,c
  2535                           
  2536                           ;ssd_fields.c: 179:         in_field_pid = 1;
  2537   000504  0E00               	movlw	0
  2538   000506  6E49               	movwf	(_in_field_pid+1)^0,c
  2539   000508  0E01               	movlw	1
  2540   00050A  6E48               	movwf	_in_field_pid^0,c
  2541                           
  2542                           ;ssd_fields.c: 180:         interrupt_key = 0;
  2543   00050C  0E00               	movlw	0
  2544   00050E  6E2A               	movwf	(_interrupt_key+1)^0,c
  2545   000510  0E00               	movlw	0
  2546   000512  6E29               	movwf	_interrupt_key^0,c
  2547                           
  2548                           ;ssd_fields.c: 181:         increment_pid_flag = 0;
  2549   000514  0E00               	movlw	0
  2550   000516  6E24               	movwf	(_increment_pid_flag+1)^0,c
  2551   000518  0E00               	movlw	0
  2552   00051A  6E23               	movwf	_increment_pid_flag^0,c
  2553                           
  2554                           ;ssd_fields.c: 182:         disp_flag = 1;
  2555   00051C  0E00               	movlw	0
  2556   00051E  6E43               	movwf	(_disp_flag+1)^0,c
  2557   000520  0E01               	movlw	1
  2558   000522  6E42               	movwf	_disp_flag^0,c
  2559                           
  2560                           ;ssd_fields.c: 183:         once_pid = 1;
  2561   000524  0E00               	movlw	0
  2562   000526  6E3F               	movwf	(product_id@once_pid+1)^0,c
  2563   000528  0E01               	movlw	1
  2564   00052A  6E3E               	movwf	product_id@once_pid^0,c
  2565                           
  2566                           ;ssd_fields.c: 184:         rec_cond_flag = 1;
  2567   00052C  0E00               	movlw	0
  2568   00052E  6E47               	movwf	(_rec_cond_flag+1)^0,c
  2569   000530  0E01               	movlw	1
  2570   000532  6E46               	movwf	_rec_cond_flag^0,c
  2571                           
  2572                           ;ssd_fields.c: 185:         update_data_flag = 1;
  2573   000534  0E00               	movlw	0
  2574   000536  6E45               	movwf	(_update_data_flag+1)^0,c
  2575   000538  0E01               	movlw	1
  2576   00053A  6E44               	movwf	_update_data_flag^0,c
  2577   00053C                     
  2578                           ;ssd_fields.c: 186:         write_internal_eeprom(0X04, ssd0 + 48);
  2579   00053C  501B               	movf	_ssd0^0,w,c
  2580   00053E  0F30               	addlw	48
  2581   000540  6E59               	movwf	write_internal_eeprom@data^0,c
  2582   000542  0E04               	movlw	4
  2583   000544  EC54  F008         	call	_write_internal_eeprom
  2584   000548                     
  2585                           ;ssd_fields.c: 187:         write_internal_eeprom(0X05, ssd1 + 48);
  2586   000548  501D               	movf	_ssd1^0,w,c
  2587   00054A  0F30               	addlw	48
  2588   00054C  6E59               	movwf	write_internal_eeprom@data^0,c
  2589   00054E  0E05               	movlw	5
  2590   000550  EC54  F008         	call	_write_internal_eeprom
  2591   000554                     
  2592                           ;ssd_fields.c: 188:         write_internal_eeprom(0X06, ssd2 + 48);
  2593   000554  501F               	movf	_ssd2^0,w,c
  2594   000556  0F30               	addlw	48
  2595   000558  6E59               	movwf	write_internal_eeprom@data^0,c
  2596   00055A  0E06               	movlw	6
  2597   00055C  EC54  F008         	call	_write_internal_eeprom
  2598   000560                     
  2599                           ;ssd_fields.c: 189:         write_internal_eeprom(0X07, ssd3 + 48);
  2600   000560  5021               	movf	_ssd3^0,w,c
  2601   000562  0F30               	addlw	48
  2602   000564  6E59               	movwf	write_internal_eeprom@data^0,c
  2603   000566  0E07               	movlw	7
  2604   000568  EC54  F008         	call	_write_internal_eeprom
  2605                           
  2606                           ;ssd_fields.c: 190:         ssd0 = 0, ssd1 = 0, ssd2 = 0, ssd3 = 0;
  2607   00056C  0E00               	movlw	0
  2608   00056E  6E1C               	movwf	(_ssd0+1)^0,c
  2609   000570  0E00               	movlw	0
  2610   000572  6E1B               	movwf	_ssd0^0,c
  2611   000574  0E00               	movlw	0
  2612   000576  6E1E               	movwf	(_ssd1+1)^0,c
  2613   000578  0E00               	movlw	0
  2614   00057A  6E1D               	movwf	_ssd1^0,c
  2615   00057C  0E00               	movlw	0
  2616   00057E  6E20               	movwf	(_ssd2+1)^0,c
  2617   000580  0E00               	movlw	0
  2618   000582  6E1F               	movwf	_ssd2^0,c
  2619   000584  0E00               	movlw	0
  2620   000586  6E22               	movwf	(_ssd3+1)^0,c
  2621   000588  0E00               	movlw	0
  2622   00058A  6E21               	movwf	_ssd3^0,c
  2623   00058C                     l2080:
  2624                           
  2625                           ;ssd_fields.c: 193:     display(ssd);
  2626   00058C  0E2C               	movlw	low _ssd@ssd_display$F315
  2627   00058E  6E4D               	movwf	display@data^0,c
  2628   000590  0E00               	movlw	high _ssd@ssd_display$F315
  2629   000592  6E4E               	movwf	(display@data+1)^0,c
  2630   000594  ECC6  F006         	call	_display	;wreg free
  2631   000598  0012               	return		;funcret
  2632   00059A                     __end_of_product_id:
  2633                           	callstack 0
  2634                           
  2635 ;; *************** function _zeroth_ssd_pid *****************
  2636 ;; Defined at:
  2637 ;;		line 242 in file "ssd_fields.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2651 ;;      Params:         0       0       0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0
  2654 ;;      Totals:         0       0       0       0       0       0       0
  2655 ;;Total ram usage:        0 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 1
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_product_id
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text14
  2666   000A48                     __ptext14:
  2667                           	callstack 0
  2668   000A48                     _zeroth_ssd_pid:
  2669                           	callstack 27
  2670   000A48                     
  2671                           ;ssd_fields.c: 243:     ssd[0] = digit[ssd0] | 0X10;
  2672   000A48  0E34               	movlw	low _digit@ssd_display$F316
  2673   000A4A  241B               	addwf	_ssd0^0,w,c
  2674   000A4C  6ED9               	movwf	fsr2l,c
  2675   000A4E  0E00               	movlw	high _digit@ssd_display$F316
  2676   000A50  201C               	addwfc	(_ssd0+1)^0,w,c
  2677   000A52  6EDA               	movwf	fsr2h,c
  2678   000A54  50DF               	movf	indf2,w,c
  2679   000A56  0910               	iorlw	16
  2680   000A58  6E2C               	movwf	_ssd@ssd_display$F315^0,c
  2681                           
  2682                           ;ssd_fields.c: 244:     ssd[1] = digit[ssd1];
  2683   000A5A  0E34               	movlw	low _digit@ssd_display$F316
  2684   000A5C  241D               	addwf	_ssd1^0,w,c
  2685   000A5E  6ED9               	movwf	fsr2l,c
  2686   000A60  0E00               	movlw	high _digit@ssd_display$F316
  2687   000A62  201E               	addwfc	(_ssd1+1)^0,w,c
  2688   000A64  6EDA               	movwf	fsr2h,c
  2689   000A66  50DF               	movf	indf2,w,c
  2690   000A68  6E2D               	movwf	(_ssd@ssd_display$F315+1)^0,c
  2691                           
  2692                           ;ssd_fields.c: 245:     ssd[2] = digit[ssd2];
  2693   000A6A  0E34               	movlw	low _digit@ssd_display$F316
  2694   000A6C  241F               	addwf	_ssd2^0,w,c
  2695   000A6E  6ED9               	movwf	fsr2l,c
  2696   000A70  0E00               	movlw	high _digit@ssd_display$F316
  2697   000A72  2020               	addwfc	(_ssd2+1)^0,w,c
  2698   000A74  6EDA               	movwf	fsr2h,c
  2699   000A76  50DF               	movf	indf2,w,c
  2700   000A78  6E2E               	movwf	(_ssd@ssd_display$F315+2)^0,c
  2701                           
  2702                           ;ssd_fields.c: 246:     ssd[3] = digit[ssd3];
  2703   000A7A  0E34               	movlw	low _digit@ssd_display$F316
  2704   000A7C  2421               	addwf	_ssd3^0,w,c
  2705   000A7E  6ED9               	movwf	fsr2l,c
  2706   000A80  0E00               	movlw	high _digit@ssd_display$F316
  2707   000A82  2022               	addwfc	(_ssd3+1)^0,w,c
  2708   000A84  6EDA               	movwf	fsr2h,c
  2709   000A86  50DF               	movf	indf2,w,c
  2710   000A88  6E2F               	movwf	(_ssd@ssd_display$F315+3)^0,c
  2711   000A8A                     
  2712                           ;ssd_fields.c: 247:     if (key == 0x0E) {
  2713   000A8A  0E0E               	movlw	14
  2714   000A8C  182B               	xorwf	_key^0,w,c
  2715   000A8E  A4D8               	btfss	status,2,c
  2716   000A90  EF4C  F005         	goto	u411
  2717   000A94  EF4E  F005         	goto	u410
  2718   000A98                     u411:
  2719   000A98  EF61  F005         	goto	l442
  2720   000A9C                     u410:
  2721   000A9C                     
  2722                           ;ssd_fields.c: 248:         if (ssd0 < 9)
  2723   000A9C  501C               	movf	(_ssd0+1)^0,w,c
  2724   000A9E  E107               	bnz	u421
  2725   000AA0  0E09               	movlw	9
  2726   000AA2  5C1B               	subwf	_ssd0^0,w,c
  2727   000AA4  B0D8               	btfsc	status,0,c
  2728   000AA6  EF57  F005         	goto	u421
  2729   000AAA  EF59  F005         	goto	u420
  2730   000AAE                     u421:
  2731   000AAE  EF5D  F005         	goto	l1540
  2732   000AB2                     u420:
  2733   000AB2                     
  2734                           ;ssd_fields.c: 249:             ssd0++;
  2735   000AB2  4A1B               	infsnz	_ssd0^0,f,c
  2736   000AB4  2A1C               	incf	(_ssd0+1)^0,f,c
  2737   000AB6  EF61  F005         	goto	l442
  2738   000ABA                     l1540:
  2739                           
  2740                           ;ssd_fields.c: 251:             ssd0 = 0;
  2741   000ABA  0E00               	movlw	0
  2742   000ABC  6E1C               	movwf	(_ssd0+1)^0,c
  2743   000ABE  0E00               	movlw	0
  2744   000AC0  6E1B               	movwf	_ssd0^0,c
  2745   000AC2                     l442:
  2746   000AC2  0012               	return		;funcret
  2747   000AC4                     __end_of_zeroth_ssd_pid:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function _write_internal_eeprom *****************
  2751 ;; Defined at:
  2752 ;;		line 4 in file "eeprom.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  address         1    wreg     unsigned char 
  2755 ;;  data            1   12[COMRAM] unsigned char 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  address         1   13[COMRAM] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2767 ;;      Params:         1       0       0       0       0       0       0
  2768 ;;      Locals:         1       0       0       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0
  2770 ;;      Totals:         2       0       0       0       0       0       0
  2771 ;;Total ram usage:        2 bytes
  2772 ;; Hardware stack levels used: 1
  2773 ;; Hardware stack levels required when called: 1
  2774 ;; This function calls:
  2775 ;;		Nothing
  2776 ;; This function is called by:
  2777 ;;		_normal_stock
  2778 ;;		_can_stock
  2779 ;;		_product_id
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text15
  2784   0010A8                     __ptext15:
  2785                           	callstack 0
  2786   0010A8                     _write_internal_eeprom:
  2787                           	callstack 26
  2788                           
  2789                           ;incstack = 0
  2790                           ;write_internal_eeprom@address stored from wreg
  2791   0010A8  6E5A               	movwf	write_internal_eeprom@address^0,c
  2792   0010AA                     
  2793                           ;eeprom.c: 4: void write_internal_eeprom(unsigned char address, unsigned char data);eepr
      +                          om.c: 5: {;eeprom.c: 7:  EEADR = address;
  2794   0010AA  C05A  FFA9         	movff	write_internal_eeprom@address,4009	;volatile
  2795   0010AE                     
  2796                           ;eeprom.c: 10:  EEDATA = data;
  2797   0010AE  C059  FFA8         	movff	write_internal_eeprom@data,4008	;volatile
  2798   0010B2                     
  2799                           ;eeprom.c: 13:  EECON1bits.EEPGD = 0;
  2800   0010B2  9EA6               	bcf	166,7,c	;volsfr
  2801   0010B4                     
  2802                           ;eeprom.c: 16:  EECON1bits.CFGS = 0;
  2803   0010B4  9CA6               	bcf	166,6,c	;volsfr
  2804   0010B6                     
  2805                           ;eeprom.c: 19:  EECON1bits.WREN = 1;
  2806   0010B6  84A6               	bsf	166,2,c	;volsfr
  2807   0010B8                     
  2808                           ;eeprom.c: 22:  GIE = 0;
  2809   0010B8  9EF2               	bcf	4082,7,c	;volatile
  2810   0010BA                     
  2811                           ;eeprom.c: 25:  EECON2 = 0x55;
  2812   0010BA  0E55               	movlw	85
  2813   0010BC  6EA7               	movwf	167,c	;volsfr
  2814   0010BE                     
  2815                           ;eeprom.c: 26:  EECON2 = 0xAA;
  2816   0010BE  0EAA               	movlw	170
  2817   0010C0  6EA7               	movwf	167,c	;volsfr
  2818   0010C2                     
  2819                           ;eeprom.c: 29:  EECON1bits.WR = 1;
  2820   0010C2  82A6               	bsf	166,1,c	;volsfr
  2821   0010C4                     
  2822                           ;eeprom.c: 32:  GIE = 1;
  2823   0010C4  8EF2               	bsf	4082,7,c	;volatile
  2824   0010C6                     l65:
  2825   0010C6  A8A1               	btfss	161,4,c	;volatile
  2826   0010C8  EF68  F008         	goto	u861
  2827   0010CC  EF6A  F008         	goto	u860
  2828   0010D0                     u861:
  2829   0010D0  EF63  F008         	goto	l65
  2830   0010D4                     u860:
  2831   0010D4                     
  2832                           ;eeprom.c: 38:  PIR2bits.EEIF = 0;
  2833   0010D4  98A1               	bcf	161,4,c	;volatile
  2834   0010D6  0012               	return		;funcret
  2835   0010D8                     __end_of_write_internal_eeprom:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _third_ssd_pid *****************
  2839 ;; Defined at:
  2840 ;;		line 203 in file "ssd_fields.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2854 ;;      Params:         0       0       0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 1
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_product_id
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text16
  2869   000AC4                     __ptext16:
  2870                           	callstack 0
  2871   000AC4                     _third_ssd_pid:
  2872                           	callstack 27
  2873   000AC4                     
  2874                           ;ssd_fields.c: 204:     ssd[0] = digit[ssd0];
  2875   000AC4  0E34               	movlw	low _digit@ssd_display$F316
  2876   000AC6  241B               	addwf	_ssd0^0,w,c
  2877   000AC8  6ED9               	movwf	fsr2l,c
  2878   000ACA  0E00               	movlw	high _digit@ssd_display$F316
  2879   000ACC  201C               	addwfc	(_ssd0+1)^0,w,c
  2880   000ACE  6EDA               	movwf	fsr2h,c
  2881   000AD0  50DF               	movf	indf2,w,c
  2882   000AD2  6E2C               	movwf	_ssd@ssd_display$F315^0,c
  2883                           
  2884                           ;ssd_fields.c: 205:     ssd[1] = digit[ssd1];
  2885   000AD4  0E34               	movlw	low _digit@ssd_display$F316
  2886   000AD6  241D               	addwf	_ssd1^0,w,c
  2887   000AD8  6ED9               	movwf	fsr2l,c
  2888   000ADA  0E00               	movlw	high _digit@ssd_display$F316
  2889   000ADC  201E               	addwfc	(_ssd1+1)^0,w,c
  2890   000ADE  6EDA               	movwf	fsr2h,c
  2891   000AE0  50DF               	movf	indf2,w,c
  2892   000AE2  6E2D               	movwf	(_ssd@ssd_display$F315+1)^0,c
  2893                           
  2894                           ;ssd_fields.c: 206:     ssd[2] = digit[ssd2];
  2895   000AE4  0E34               	movlw	low _digit@ssd_display$F316
  2896   000AE6  241F               	addwf	_ssd2^0,w,c
  2897   000AE8  6ED9               	movwf	fsr2l,c
  2898   000AEA  0E00               	movlw	high _digit@ssd_display$F316
  2899   000AEC  2020               	addwfc	(_ssd2+1)^0,w,c
  2900   000AEE  6EDA               	movwf	fsr2h,c
  2901   000AF0  50DF               	movf	indf2,w,c
  2902   000AF2  6E2E               	movwf	(_ssd@ssd_display$F315+2)^0,c
  2903                           
  2904                           ;ssd_fields.c: 207:     ssd[3] = digit[ssd3] | 0X10;
  2905   000AF4  0E34               	movlw	low _digit@ssd_display$F316
  2906   000AF6  2421               	addwf	_ssd3^0,w,c
  2907   000AF8  6ED9               	movwf	fsr2l,c
  2908   000AFA  0E00               	movlw	high _digit@ssd_display$F316
  2909   000AFC  2022               	addwfc	(_ssd3+1)^0,w,c
  2910   000AFE  6EDA               	movwf	fsr2h,c
  2911   000B00  50DF               	movf	indf2,w,c
  2912   000B02  0910               	iorlw	16
  2913   000B04  6E2F               	movwf	(_ssd@ssd_display$F315+3)^0,c
  2914   000B06                     
  2915                           ;ssd_fields.c: 208:     if (key == 0x0E) {
  2916   000B06  0E0E               	movlw	14
  2917   000B08  182B               	xorwf	_key^0,w,c
  2918   000B0A  A4D8               	btfss	status,2,c
  2919   000B0C  EF8A  F005         	goto	u351
  2920   000B10  EF8C  F005         	goto	u350
  2921   000B14                     u351:
  2922   000B14  EF9F  F005         	goto	l424
  2923   000B18                     u350:
  2924   000B18                     
  2925                           ;ssd_fields.c: 209:         if (ssd3 < 9)
  2926   000B18  5022               	movf	(_ssd3+1)^0,w,c
  2927   000B1A  E107               	bnz	u361
  2928   000B1C  0E09               	movlw	9
  2929   000B1E  5C21               	subwf	_ssd3^0,w,c
  2930   000B20  B0D8               	btfsc	status,0,c
  2931   000B22  EF95  F005         	goto	u361
  2932   000B26  EF97  F005         	goto	u360
  2933   000B2A                     u361:
  2934   000B2A  EF9B  F005         	goto	l1510
  2935   000B2E                     u360:
  2936   000B2E                     
  2937                           ;ssd_fields.c: 210:             ssd3++;
  2938   000B2E  4A21               	infsnz	_ssd3^0,f,c
  2939   000B30  2A22               	incf	(_ssd3+1)^0,f,c
  2940   000B32  EF9F  F005         	goto	l424
  2941   000B36                     l1510:
  2942                           
  2943                           ;ssd_fields.c: 212:             ssd3 = 0;
  2944   000B36  0E00               	movlw	0
  2945   000B38  6E22               	movwf	(_ssd3+1)^0,c
  2946   000B3A  0E00               	movlw	0
  2947   000B3C  6E21               	movwf	_ssd3^0,c
  2948   000B3E                     l424:
  2949   000B3E  0012               	return		;funcret
  2950   000B40                     __end_of_third_ssd_pid:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _second_ssd_pid *****************
  2954 ;; Defined at:
  2955 ;;		line 216 in file "ssd_fields.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2969 ;;      Params:         0       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_product_id
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text17
  2984   000B40                     __ptext17:
  2985                           	callstack 0
  2986   000B40                     _second_ssd_pid:
  2987                           	callstack 27
  2988   000B40                     
  2989                           ;ssd_fields.c: 217:     ssd[0] = digit[ssd0];
  2990   000B40  0E34               	movlw	low _digit@ssd_display$F316
  2991   000B42  241B               	addwf	_ssd0^0,w,c
  2992   000B44  6ED9               	movwf	fsr2l,c
  2993   000B46  0E00               	movlw	high _digit@ssd_display$F316
  2994   000B48  201C               	addwfc	(_ssd0+1)^0,w,c
  2995   000B4A  6EDA               	movwf	fsr2h,c
  2996   000B4C  50DF               	movf	indf2,w,c
  2997   000B4E  6E2C               	movwf	_ssd@ssd_display$F315^0,c
  2998                           
  2999                           ;ssd_fields.c: 218:     ssd[1] = digit[ssd1];
  3000   000B50  0E34               	movlw	low _digit@ssd_display$F316
  3001   000B52  241D               	addwf	_ssd1^0,w,c
  3002   000B54  6ED9               	movwf	fsr2l,c
  3003   000B56  0E00               	movlw	high _digit@ssd_display$F316
  3004   000B58  201E               	addwfc	(_ssd1+1)^0,w,c
  3005   000B5A  6EDA               	movwf	fsr2h,c
  3006   000B5C  50DF               	movf	indf2,w,c
  3007   000B5E  6E2D               	movwf	(_ssd@ssd_display$F315+1)^0,c
  3008                           
  3009                           ;ssd_fields.c: 219:     ssd[2] = digit[ssd2] | 0X10;
  3010   000B60  0E34               	movlw	low _digit@ssd_display$F316
  3011   000B62  241F               	addwf	_ssd2^0,w,c
  3012   000B64  6ED9               	movwf	fsr2l,c
  3013   000B66  0E00               	movlw	high _digit@ssd_display$F316
  3014   000B68  2020               	addwfc	(_ssd2+1)^0,w,c
  3015   000B6A  6EDA               	movwf	fsr2h,c
  3016   000B6C  50DF               	movf	indf2,w,c
  3017   000B6E  0910               	iorlw	16
  3018   000B70  6E2E               	movwf	(_ssd@ssd_display$F315+2)^0,c
  3019                           
  3020                           ;ssd_fields.c: 220:     ssd[3] = digit[ssd3];
  3021   000B72  0E34               	movlw	low _digit@ssd_display$F316
  3022   000B74  2421               	addwf	_ssd3^0,w,c
  3023   000B76  6ED9               	movwf	fsr2l,c
  3024   000B78  0E00               	movlw	high _digit@ssd_display$F316
  3025   000B7A  2022               	addwfc	(_ssd3+1)^0,w,c
  3026   000B7C  6EDA               	movwf	fsr2h,c
  3027   000B7E  50DF               	movf	indf2,w,c
  3028   000B80  6E2F               	movwf	(_ssd@ssd_display$F315+3)^0,c
  3029   000B82                     
  3030                           ;ssd_fields.c: 221:     if (key == 0x0E) {
  3031   000B82  0E0E               	movlw	14
  3032   000B84  182B               	xorwf	_key^0,w,c
  3033   000B86  A4D8               	btfss	status,2,c
  3034   000B88  EFC8  F005         	goto	u371
  3035   000B8C  EFCA  F005         	goto	u370
  3036   000B90                     u371:
  3037   000B90  EFDD  F005         	goto	l430
  3038   000B94                     u370:
  3039   000B94                     
  3040                           ;ssd_fields.c: 222:         if (ssd2 < 9)
  3041   000B94  5020               	movf	(_ssd2+1)^0,w,c
  3042   000B96  E107               	bnz	u381
  3043   000B98  0E09               	movlw	9
  3044   000B9A  5C1F               	subwf	_ssd2^0,w,c
  3045   000B9C  B0D8               	btfsc	status,0,c
  3046   000B9E  EFD3  F005         	goto	u381
  3047   000BA2  EFD5  F005         	goto	u380
  3048   000BA6                     u381:
  3049   000BA6  EFD9  F005         	goto	l1520
  3050   000BAA                     u380:
  3051   000BAA                     
  3052                           ;ssd_fields.c: 223:             ssd2++;
  3053   000BAA  4A1F               	infsnz	_ssd2^0,f,c
  3054   000BAC  2A20               	incf	(_ssd2+1)^0,f,c
  3055   000BAE  EFDD  F005         	goto	l430
  3056   000BB2                     l1520:
  3057                           
  3058                           ;ssd_fields.c: 225:             ssd2 = 0;
  3059   000BB2  0E00               	movlw	0
  3060   000BB4  6E20               	movwf	(_ssd2+1)^0,c
  3061   000BB6  0E00               	movlw	0
  3062   000BB8  6E1F               	movwf	_ssd2^0,c
  3063   000BBA                     l430:
  3064   000BBA  0012               	return		;funcret
  3065   000BBC                     __end_of_second_ssd_pid:
  3066                           	callstack 0
  3067                           
  3068 ;; *************** function _read_pid_data_from_eeprom *****************
  3069 ;; Defined at:
  3070 ;;		line 196 in file "ssd_fields.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3084 ;;      Params:         0       0       0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0
  3086 ;;      Temps:          1       0       0       0       0       0       0
  3087 ;;      Totals:         1       0       0       0       0       0       0
  3088 ;;Total ram usage:        1 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 2
  3091 ;; This function calls:
  3092 ;;		_read_internal_eeprom
  3093 ;; This function is called by:
  3094 ;;		_product_id
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text18
  3099   000FB6                     __ptext18:
  3100                           	callstack 0
  3101   000FB6                     _read_pid_data_from_eeprom:
  3102                           	callstack 26
  3103   000FB6                     
  3104                           ;ssd_fields.c: 197:     ssd0 = read_internal_eeprom(0X04) - 48;
  3105   000FB6  0E04               	movlw	4
  3106   000FB8  ECB1  F008         	call	_read_internal_eeprom
  3107   000FBC  6E4E               	movwf	??_read_pid_data_from_eeprom^0,c
  3108   000FBE  0ED0               	movlw	208
  3109   000FC0  244E               	addwf	??_read_pid_data_from_eeprom^0,w,c
  3110   000FC2  6E1B               	movwf	_ssd0^0,c
  3111   000FC4  6A1C               	clrf	(_ssd0+1)^0,c
  3112   000FC6  0EFF               	movlw	255
  3113   000FC8  221C               	addwfc	(_ssd0+1)^0,f,c
  3114                           
  3115                           ;ssd_fields.c: 198:     ssd1 = read_internal_eeprom(0X05)- 48;
  3116   000FCA  0E05               	movlw	5
  3117   000FCC  ECB1  F008         	call	_read_internal_eeprom
  3118   000FD0  6E4E               	movwf	??_read_pid_data_from_eeprom^0,c
  3119   000FD2  0ED0               	movlw	208
  3120   000FD4  244E               	addwf	??_read_pid_data_from_eeprom^0,w,c
  3121   000FD6  6E1D               	movwf	_ssd1^0,c
  3122   000FD8  6A1E               	clrf	(_ssd1+1)^0,c
  3123   000FDA  0EFF               	movlw	255
  3124   000FDC  221E               	addwfc	(_ssd1+1)^0,f,c
  3125                           
  3126                           ;ssd_fields.c: 199:     ssd2 = read_internal_eeprom(0X06) - 48;
  3127   000FDE  0E06               	movlw	6
  3128   000FE0  ECB1  F008         	call	_read_internal_eeprom
  3129   000FE4  6E4E               	movwf	??_read_pid_data_from_eeprom^0,c
  3130   000FE6  0ED0               	movlw	208
  3131   000FE8  244E               	addwf	??_read_pid_data_from_eeprom^0,w,c
  3132   000FEA  6E1F               	movwf	_ssd2^0,c
  3133   000FEC  6A20               	clrf	(_ssd2+1)^0,c
  3134   000FEE  0EFF               	movlw	255
  3135   000FF0  2220               	addwfc	(_ssd2+1)^0,f,c
  3136                           
  3137                           ;ssd_fields.c: 200:     ssd3 = read_internal_eeprom(0X07) - 48;
  3138   000FF2  0E07               	movlw	7
  3139   000FF4  ECB1  F008         	call	_read_internal_eeprom
  3140   000FF8  6E4E               	movwf	??_read_pid_data_from_eeprom^0,c
  3141   000FFA  0ED0               	movlw	208
  3142   000FFC  244E               	addwf	??_read_pid_data_from_eeprom^0,w,c
  3143   000FFE  6E21               	movwf	_ssd3^0,c
  3144   001000  6A22               	clrf	(_ssd3+1)^0,c
  3145   001002  0EFF               	movlw	255
  3146   001004  2222               	addwfc	(_ssd3+1)^0,f,c
  3147   001006  0012               	return		;funcret
  3148   001008                     __end_of_read_pid_data_from_eeprom:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _first_ssd_pid *****************
  3152 ;; Defined at:
  3153 ;;		line 229 in file "ssd_fields.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3167 ;;      Params:         0       0       0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0
  3170 ;;      Totals:         0       0       0       0       0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 1
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_product_id
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text19
  3182   000BBC                     __ptext19:
  3183                           	callstack 0
  3184   000BBC                     _first_ssd_pid:
  3185                           	callstack 27
  3186   000BBC                     
  3187                           ;ssd_fields.c: 230:     ssd[0] = digit[ssd0];
  3188   000BBC  0E34               	movlw	low _digit@ssd_display$F316
  3189   000BBE  241B               	addwf	_ssd0^0,w,c
  3190   000BC0  6ED9               	movwf	fsr2l,c
  3191   000BC2  0E00               	movlw	high _digit@ssd_display$F316
  3192   000BC4  201C               	addwfc	(_ssd0+1)^0,w,c
  3193   000BC6  6EDA               	movwf	fsr2h,c
  3194   000BC8  50DF               	movf	indf2,w,c
  3195   000BCA  6E2C               	movwf	_ssd@ssd_display$F315^0,c
  3196                           
  3197                           ;ssd_fields.c: 231:     ssd[1] = digit[ssd1] | 0X10;
  3198   000BCC  0E34               	movlw	low _digit@ssd_display$F316
  3199   000BCE  241D               	addwf	_ssd1^0,w,c
  3200   000BD0  6ED9               	movwf	fsr2l,c
  3201   000BD2  0E00               	movlw	high _digit@ssd_display$F316
  3202   000BD4  201E               	addwfc	(_ssd1+1)^0,w,c
  3203   000BD6  6EDA               	movwf	fsr2h,c
  3204   000BD8  50DF               	movf	indf2,w,c
  3205   000BDA  0910               	iorlw	16
  3206   000BDC  6E2D               	movwf	(_ssd@ssd_display$F315+1)^0,c
  3207                           
  3208                           ;ssd_fields.c: 232:     ssd[2] = digit[ssd2];
  3209   000BDE  0E34               	movlw	low _digit@ssd_display$F316
  3210   000BE0  241F               	addwf	_ssd2^0,w,c
  3211   000BE2  6ED9               	movwf	fsr2l,c
  3212   000BE4  0E00               	movlw	high _digit@ssd_display$F316
  3213   000BE6  2020               	addwfc	(_ssd2+1)^0,w,c
  3214   000BE8  6EDA               	movwf	fsr2h,c
  3215   000BEA  50DF               	movf	indf2,w,c
  3216   000BEC  6E2E               	movwf	(_ssd@ssd_display$F315+2)^0,c
  3217                           
  3218                           ;ssd_fields.c: 233:     ssd[3] = digit[ssd3];
  3219   000BEE  0E34               	movlw	low _digit@ssd_display$F316
  3220   000BF0  2421               	addwf	_ssd3^0,w,c
  3221   000BF2  6ED9               	movwf	fsr2l,c
  3222   000BF4  0E00               	movlw	high _digit@ssd_display$F316
  3223   000BF6  2022               	addwfc	(_ssd3+1)^0,w,c
  3224   000BF8  6EDA               	movwf	fsr2h,c
  3225   000BFA  50DF               	movf	indf2,w,c
  3226   000BFC  6E2F               	movwf	(_ssd@ssd_display$F315+3)^0,c
  3227   000BFE                     
  3228                           ;ssd_fields.c: 234:     if (key == 0x0E) {
  3229   000BFE  0E0E               	movlw	14
  3230   000C00  182B               	xorwf	_key^0,w,c
  3231   000C02  A4D8               	btfss	status,2,c
  3232   000C04  EF06  F006         	goto	u391
  3233   000C08  EF08  F006         	goto	u390
  3234   000C0C                     u391:
  3235   000C0C  EF1B  F006         	goto	l436
  3236   000C10                     u390:
  3237   000C10                     
  3238                           ;ssd_fields.c: 235:         if (ssd1 < 9)
  3239   000C10  501E               	movf	(_ssd1+1)^0,w,c
  3240   000C12  E107               	bnz	u401
  3241   000C14  0E09               	movlw	9
  3242   000C16  5C1D               	subwf	_ssd1^0,w,c
  3243   000C18  B0D8               	btfsc	status,0,c
  3244   000C1A  EF11  F006         	goto	u401
  3245   000C1E  EF13  F006         	goto	u400
  3246   000C22                     u401:
  3247   000C22  EF17  F006         	goto	l1530
  3248   000C26                     u400:
  3249   000C26                     
  3250                           ;ssd_fields.c: 236:             ssd1++;
  3251   000C26  4A1D               	infsnz	_ssd1^0,f,c
  3252   000C28  2A1E               	incf	(_ssd1+1)^0,f,c
  3253   000C2A  EF1B  F006         	goto	l436
  3254   000C2E                     l1530:
  3255                           
  3256                           ;ssd_fields.c: 238:             ssd1 = 0;
  3257   000C2E  0E00               	movlw	0
  3258   000C30  6E1E               	movwf	(_ssd1+1)^0,c
  3259   000C32  0E00               	movlw	0
  3260   000C34  6E1D               	movwf	_ssd1^0,c
  3261   000C36                     l436:
  3262   000C36  0012               	return		;funcret
  3263   000C38                     __end_of_first_ssd_pid:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _display *****************
  3267 ;; Defined at:
  3268 ;;		line 16 in file "ssd_display.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  data            2    0[COMRAM] PTR unsigned char 
  3271 ;;		 -> ssd@ssd_display$F315(4), ssd(4), 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  wait            2    4[COMRAM] unsigned int 
  3274 ;;  digit           1    6[COMRAM] unsigned char 
  3275 ;;  data_bit        1    0        unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3285 ;;      Params:         2       0       0       0       0       0       0
  3286 ;;      Locals:         3       0       0       0       0       0       0
  3287 ;;      Temps:          2       0       0       0       0       0       0
  3288 ;;      Totals:         7       0       0       0       0       0       0
  3289 ;;Total ram usage:        7 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_two_fields
  3296 ;;		_normal_stock
  3297 ;;		_can_stock
  3298 ;;		_product_id
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text20
  3303   000D8C                     __ptext20:
  3304                           	callstack 0
  3305   000D8C                     _display:
  3306                           	callstack 26
  3307   000D8C                     
  3308                           ;ssd_display.c: 16: void display(unsigned char data[]);ssd_display.c: 17: {;ssd_display.
      +                          c: 18:  unsigned int wait;;ssd_display.c: 19:  unsigned char data_bit;;ssd_display.c: 20
      +                          :  unsigned char digit;;ssd_display.c: 22:  for (digit = 0; digit < 4; digit++)
  3309   000D8C  0E00               	movlw	0
  3310   000D8E  6E53               	movwf	display@digit^0,c
  3311   000D90                     l1864:
  3312                           
  3313                           ;ssd_display.c: 23:  {;ssd_display.c: 24:   PORTD = data[digit];
  3314   000D90  5053               	movf	display@digit^0,w,c
  3315   000D92  244D               	addwf	display@data^0,w,c
  3316   000D94  6ED9               	movwf	fsr2l,c
  3317   000D96  0E00               	movlw	0
  3318   000D98  204E               	addwfc	(display@data+1)^0,w,c
  3319   000D9A  6EDA               	movwf	fsr2h,c
  3320   000D9C  50DF               	movf	indf2,w,c
  3321   000D9E  6E83               	movwf	131,c	;volatile
  3322   000DA0                     
  3323                           ;ssd_display.c: 25:   PORTA = (PORTA & 0xF0) | (0x01 << digit);
  3324   000DA0  C053  F04F         	movff	display@digit,??_display
  3325   000DA4  0E01               	movlw	1
  3326   000DA6  6E50               	movwf	(??_display+1)^0,c
  3327   000DA8  2A4F               	incf	??_display^0,f,c
  3328   000DAA  EFD9  F006         	goto	u874
  3329   000DAE                     u875:
  3330   000DAE  90D8               	bcf	status,0,c
  3331   000DB0  3650               	rlcf	(??_display+1)^0,f,c
  3332   000DB2                     u874:
  3333   000DB2  2E4F               	decfsz	??_display^0,f,c
  3334   000DB4  EFD7  F006         	goto	u875
  3335   000DB8  5080               	movf	128,w,c	;volatile
  3336   000DBA  0BF0               	andlw	240
  3337   000DBC  1050               	iorwf	(??_display+1)^0,w,c
  3338   000DBE  6E80               	movwf	128,c	;volatile
  3339   000DC0                     
  3340                           ;ssd_display.c: 27:   for (wait = 1000; wait--; );
  3341   000DC0  0E03               	movlw	3
  3342   000DC2  6E52               	movwf	(display@wait+1)^0,c
  3343   000DC4  0EE8               	movlw	232
  3344   000DC6  6E51               	movwf	display@wait^0,c
  3345   000DC8                     l1870:
  3346   000DC8  0651               	decf	display@wait^0,f,c
  3347   000DCA  A0D8               	btfss	status,0,c
  3348   000DCC  0652               	decf	(display@wait+1)^0,f,c
  3349   000DCE  2851               	incf	display@wait^0,w,c
  3350   000DD0  E106               	bnz	u881
  3351   000DD2  2852               	incf	(display@wait+1)^0,w,c
  3352   000DD4  A4D8               	btfss	status,2,c
  3353   000DD6  EFEF  F006         	goto	u881
  3354   000DDA  EFF1  F006         	goto	u880
  3355   000DDE                     u881:
  3356   000DDE  EFE4  F006         	goto	l1870
  3357   000DE2                     u880:
  3358   000DE2                     
  3359                           ;ssd_display.c: 28:  }
  3360   000DE2  2A53               	incf	display@digit^0,f,c
  3361   000DE4  0E03               	movlw	3
  3362   000DE6  6453               	cpfsgt	display@digit^0,c
  3363   000DE8  EFF8  F006         	goto	u891
  3364   000DEC  EFFA  F006         	goto	u890
  3365   000DF0                     u891:
  3366   000DF0  EFC8  F006         	goto	l1864
  3367   000DF4                     u890:
  3368   000DF4  0012               	return		;funcret
  3369   000DF6                     __end_of_display:
  3370                           	callstack 0
  3371                           
  3372 ;; *************** function _receive_can_data *****************
  3373 ;; Defined at:
  3374 ;;		line 101 in file "main.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3388 ;;      Params:         0       0       0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0
  3391 ;;      Totals:         0       0       0       0       0       0       0
  3392 ;;Total ram usage:        0 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 3
  3395 ;; This function calls:
  3396 ;;		___wmul
  3397 ;;		_can_receive
  3398 ;;		_compare_and_check
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text21
  3405   00079E                     __ptext21:
  3406                           	callstack 0
  3407   00079E                     _receive_can_data:
  3408                           	callstack 27
  3409   00079E                     
  3410                           ;main.c: 102:     if (can_receive()) {
  3411   00079E  EC04  F008         	call	_can_receive	;wreg free
  3412   0007A2  0900               	iorlw	0
  3413   0007A4  B4D8               	btfsc	status,2,c
  3414   0007A6  EFD7  F003         	goto	u1251
  3415   0007AA  EFD9  F003         	goto	u1250
  3416   0007AE                     u1251:
  3417   0007AE  EF2B  F004         	goto	l235
  3418   0007B2                     u1250:
  3419   0007B2                     
  3420                           ;main.c: 103:         num = 0;
  3421   0007B2  0E00               	movlw	0
  3422   0007B4  6E1A               	movwf	(_num+1)^0,c
  3423   0007B6  0E00               	movlw	0
  3424   0007B8  6E19               	movwf	_num^0,c
  3425   0007BA                     
  3426                           ;main.c: 104:         num = can_payload[5 + 0] - 48;
  3427   0007BA  0ED0               	movlw	208
  3428   0007BC  2406               	addwf	(_can_payload+5)^0,w,c
  3429   0007BE  6E19               	movwf	_num^0,c
  3430   0007C0  6A1A               	clrf	(_num+1)^0,c
  3431   0007C2  0EFF               	movlw	255
  3432   0007C4  221A               	addwfc	(_num+1)^0,f,c
  3433   0007C6                     
  3434                           ;main.c: 105:         num = (num * 10) + (can_payload[5 + 1] - 48);
  3435   0007C6  C019  F04D         	movff	_num,___wmul@multiplier
  3436   0007CA  C01A  F04E         	movff	_num+1,___wmul@multiplier+1
  3437   0007CE  0E00               	movlw	0
  3438   0007D0  6E50               	movwf	(___wmul@multiplicand+1)^0,c
  3439   0007D2  0E0A               	movlw	10
  3440   0007D4  6E4F               	movwf	___wmul@multiplicand^0,c
  3441   0007D6  EC6C  F008         	call	___wmul	;wreg free
  3442   0007DA  5007               	movf	(_can_payload+6)^0,w,c
  3443   0007DC  264D               	addwf	?___wmul^0,f,c
  3444   0007DE  0E00               	movlw	0
  3445   0007E0  224E               	addwfc	(?___wmul+1)^0,f,c
  3446   0007E2  0ED0               	movlw	208
  3447   0007E4  244D               	addwf	?___wmul^0,w,c
  3448   0007E6  6E19               	movwf	_num^0,c
  3449   0007E8  0EFF               	movlw	255
  3450   0007EA  204E               	addwfc	(?___wmul+1)^0,w,c
  3451   0007EC  6E1A               	movwf	(_num+1)^0,c
  3452   0007EE                     
  3453                           ;main.c: 106:         num = (num * 10) + (can_payload[5 + 2] - 48);
  3454   0007EE  C019  F04D         	movff	_num,___wmul@multiplier
  3455   0007F2  C01A  F04E         	movff	_num+1,___wmul@multiplier+1
  3456   0007F6  0E00               	movlw	0
  3457   0007F8  6E50               	movwf	(___wmul@multiplicand+1)^0,c
  3458   0007FA  0E0A               	movlw	10
  3459   0007FC  6E4F               	movwf	___wmul@multiplicand^0,c
  3460   0007FE  EC6C  F008         	call	___wmul	;wreg free
  3461   000802  5008               	movf	(_can_payload+7)^0,w,c
  3462   000804  264D               	addwf	?___wmul^0,f,c
  3463   000806  0E00               	movlw	0
  3464   000808  224E               	addwfc	(?___wmul+1)^0,f,c
  3465   00080A  0ED0               	movlw	208
  3466   00080C  244D               	addwf	?___wmul^0,w,c
  3467   00080E  6E19               	movwf	_num^0,c
  3468   000810  0EFF               	movlw	255
  3469   000812  204E               	addwfc	(?___wmul+1)^0,w,c
  3470   000814  6E1A               	movwf	(_num+1)^0,c
  3471   000816                     
  3472                           ;main.c: 107:         num = (num * 10) + (can_payload[5 + 3] - 48);
  3473   000816  C019  F04D         	movff	_num,___wmul@multiplier
  3474   00081A  C01A  F04E         	movff	_num+1,___wmul@multiplier+1
  3475   00081E  0E00               	movlw	0
  3476   000820  6E50               	movwf	(___wmul@multiplicand+1)^0,c
  3477   000822  0E0A               	movlw	10
  3478   000824  6E4F               	movwf	___wmul@multiplicand^0,c
  3479   000826  EC6C  F008         	call	___wmul	;wreg free
  3480   00082A  5009               	movf	(_can_payload+8)^0,w,c
  3481   00082C  264D               	addwf	?___wmul^0,f,c
  3482   00082E  0E00               	movlw	0
  3483   000830  224E               	addwfc	(?___wmul+1)^0,f,c
  3484   000832  0ED0               	movlw	208
  3485   000834  244D               	addwf	?___wmul^0,w,c
  3486   000836  6E19               	movwf	_num^0,c
  3487   000838  0EFF               	movlw	255
  3488   00083A  204E               	addwfc	(?___wmul+1)^0,w,c
  3489   00083C  6E1A               	movwf	(_num+1)^0,c
  3490   00083E                     
  3491                           ;main.c: 109:         can_id[0] = can_payload[5 + 4];
  3492   00083E  C00A  F00E         	movff	_can_payload+9,_can_id
  3493   000842                     
  3494                           ;main.c: 110:         can_id[1] = can_payload[5 + 5];
  3495   000842  C00B  F00F         	movff	_can_payload+10,_can_id+1
  3496   000846                     
  3497                           ;main.c: 111:         can_id[2] = can_payload[5 + 6];
  3498   000846  C00C  F010         	movff	_can_payload+11,_can_id+2
  3499   00084A                     
  3500                           ;main.c: 112:         can_id[3] = can_payload[5 + 7];
  3501   00084A  C00D  F011         	movff	_can_payload+12,_can_id+3
  3502   00084E                     
  3503                           ;main.c: 113:         can_id[4] = '\0';
  3504   00084E  0E00               	movlw	0
  3505   000850  6E12               	movwf	(_can_id+4)^0,c
  3506   000852                     
  3507                           ;main.c: 115:         compare_and_check();
  3508   000852  EC6D  F003         	call	_compare_and_check	;wreg free
  3509   000856                     l235:
  3510   000856  0012               	return		;funcret
  3511   000858                     __end_of_receive_can_data:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function _compare_and_check *****************
  3515 ;; Defined at:
  3516 ;;		line 120 in file "main.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  ch              1    2[COMRAM] unsigned char 
  3521 ;;  i               2    5[COMRAM] int 
  3522 ;;  confirm         2    3[COMRAM] int 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3532 ;;      Params:         0       0       0       0       0       0       0
  3533 ;;      Locals:         5       0       0       0       0       0       0
  3534 ;;      Temps:          1       0       0       0       0       0       0
  3535 ;;      Totals:         6       0       0       0       0       0       0
  3536 ;;Total ram usage:        6 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 2
  3539 ;; This function calls:
  3540 ;;		_read_internal_eeprom
  3541 ;; This function is called by:
  3542 ;;		_receive_can_data
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text22
  3547   0006DA                     __ptext22:
  3548                           	callstack 0
  3549   0006DA                     _compare_and_check:
  3550                           	callstack 27
  3551   0006DA                     
  3552                           ;main.c: 122:     int confirm = 0;
  3553   0006DA  0E00               	movlw	0
  3554   0006DC  6E51               	movwf	(compare_and_check@confirm+1)^0,c
  3555   0006DE  0E00               	movlw	0
  3556   0006E0  6E50               	movwf	compare_and_check@confirm^0,c
  3557                           
  3558                           ;main.c: 123:     for(int i = 4; i < 8; i++)
  3559   0006E2  0E00               	movlw	0
  3560   0006E4  6E53               	movwf	(compare_and_check@i+1)^0,c
  3561   0006E6  0E04               	movlw	4
  3562   0006E8  6E52               	movwf	compare_and_check@i^0,c
  3563   0006EA                     l2104:
  3564                           
  3565                           ;main.c: 124:     {;main.c: 125:         char ch = read_internal_eeprom(i);
  3566   0006EA  5052               	movf	compare_and_check@i^0,w,c
  3567   0006EC  ECB1  F008         	call	_read_internal_eeprom
  3568   0006F0  6E4F               	movwf	compare_and_check@ch^0,c
  3569   0006F2                     
  3570                           ;main.c: 126:         if(can_id[confirm] == ch)
  3571   0006F2  0E0E               	movlw	low _can_id
  3572   0006F4  2450               	addwf	compare_and_check@confirm^0,w,c
  3573   0006F6  6ED9               	movwf	fsr2l,c
  3574   0006F8  0E00               	movlw	high _can_id
  3575   0006FA  2051               	addwfc	(compare_and_check@confirm+1)^0,w,c
  3576   0006FC  6EDA               	movwf	fsr2h,c
  3577   0006FE  504F               	movf	compare_and_check@ch^0,w,c
  3578   000700  18DE               	xorwf	postinc2,w,c
  3579   000702  A4D8               	btfss	status,2,c
  3580   000704  EF86  F003         	goto	u1221
  3581   000708  EF88  F003         	goto	u1220
  3582   00070C                     u1221:
  3583   00070C  EF8A  F003         	goto	l240
  3584   000710                     u1220:
  3585   000710                     
  3586                           ;main.c: 127:             confirm++;
  3587   000710  4A50               	infsnz	compare_and_check@confirm^0,f,c
  3588   000712  2A51               	incf	(compare_and_check@confirm+1)^0,f,c
  3589   000714                     l240:
  3590                           
  3591                           ;main.c: 128:     }
  3592   000714  4A52               	infsnz	compare_and_check@i^0,f,c
  3593   000716  2A53               	incf	(compare_and_check@i+1)^0,f,c
  3594   000718  BE53               	btfsc	(compare_and_check@i+1)^0,7,c
  3595   00071A  EF98  F003         	goto	u1231
  3596   00071E  5053               	movf	(compare_and_check@i+1)^0,w,c
  3597   000720  E109               	bnz	u1230
  3598   000722  0E08               	movlw	8
  3599   000724  5C52               	subwf	compare_and_check@i^0,w,c
  3600   000726  A0D8               	btfss	status,0,c
  3601   000728  EF98  F003         	goto	u1231
  3602   00072C  EF9A  F003         	goto	u1230
  3603   000730                     u1231:
  3604   000730  EF75  F003         	goto	l2104
  3605   000734                     u1230:
  3606   000734                     
  3607                           ;main.c: 129:     if(confirm == 4){
  3608   000734  0E04               	movlw	4
  3609   000736  1850               	xorwf	compare_and_check@confirm^0,w,c
  3610   000738  1051               	iorwf	(compare_and_check@confirm+1)^0,w,c
  3611   00073A  A4D8               	btfss	status,2,c
  3612   00073C  EFA2  F003         	goto	u1241
  3613   000740  EFA4  F003         	goto	u1240
  3614   000744                     u1241:
  3615   000744  EFBA  F003         	goto	l2116
  3616   000748                     u1240:
  3617   000748                     
  3618                           ;main.c: 130:         rec_cond_flag = 0;
  3619   000748  0E00               	movlw	0
  3620   00074A  6E47               	movwf	(_rec_cond_flag+1)^0,c
  3621   00074C  0E00               	movlw	0
  3622   00074E  6E46               	movwf	_rec_cond_flag^0,c
  3623                           
  3624                           ;main.c: 131:         update_data_flag = 0;
  3625   000750  0E00               	movlw	0
  3626   000752  6E45               	movwf	(_update_data_flag+1)^0,c
  3627   000754  0E00               	movlw	0
  3628   000756  6E44               	movwf	_update_data_flag^0,c
  3629                           
  3630                           ;main.c: 132:         interrupt_key = 1;
  3631   000758  0E00               	movlw	0
  3632   00075A  6E2A               	movwf	(_interrupt_key+1)^0,c
  3633   00075C  0E01               	movlw	1
  3634   00075E  6E29               	movwf	_interrupt_key^0,c
  3635                           
  3636                           ;main.c: 133:         field_flag = 0;
  3637   000760  0E00               	movlw	0
  3638   000762  6E28               	movwf	(_field_flag+1)^0,c
  3639   000764  0E00               	movlw	0
  3640   000766  6E27               	movwf	_field_flag^0,c
  3641                           
  3642                           ;main.c: 134:         in_field_ust = 0;
  3643   000768  0E00               	movlw	0
  3644   00076A  6E4B               	movwf	(_in_field_ust+1)^0,c
  3645   00076C  0E00               	movlw	0
  3646   00076E  6E4A               	movwf	_in_field_ust^0,c
  3647                           
  3648                           ;main.c: 135:     }else{
  3649   000770  EFCE  F003         	goto	l243
  3650   000774                     l2116:
  3651                           
  3652                           ;main.c: 136:         rec_cond_flag = 1;
  3653   000774  0E00               	movlw	0
  3654   000776  6E47               	movwf	(_rec_cond_flag+1)^0,c
  3655   000778  0E01               	movlw	1
  3656   00077A  6E46               	movwf	_rec_cond_flag^0,c
  3657                           
  3658                           ;main.c: 137:         interrupt_key = 0;
  3659   00077C  0E00               	movlw	0
  3660   00077E  6E2A               	movwf	(_interrupt_key+1)^0,c
  3661   000780  0E00               	movlw	0
  3662   000782  6E29               	movwf	_interrupt_key^0,c
  3663                           
  3664                           ;main.c: 138:         field_flag = 0;
  3665   000784  0E00               	movlw	0
  3666   000786  6E28               	movwf	(_field_flag+1)^0,c
  3667   000788  0E00               	movlw	0
  3668   00078A  6E27               	movwf	_field_flag^0,c
  3669                           
  3670                           ;main.c: 139:         in_field_ust = 1;
  3671   00078C  0E00               	movlw	0
  3672   00078E  6E4B               	movwf	(_in_field_ust+1)^0,c
  3673   000790  0E01               	movlw	1
  3674   000792  6E4A               	movwf	_in_field_ust^0,c
  3675                           
  3676                           ;main.c: 140:         update_data_flag = 1;
  3677   000794  0E00               	movlw	0
  3678   000796  6E45               	movwf	(_update_data_flag+1)^0,c
  3679   000798  0E01               	movlw	1
  3680   00079A  6E44               	movwf	_update_data_flag^0,c
  3681   00079C                     l243:
  3682   00079C  0012               	return		;funcret
  3683   00079E                     __end_of_compare_and_check:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _read_internal_eeprom *****************
  3687 ;; Defined at:
  3688 ;;		line 41 in file "eeprom.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  address         1    wreg     unsigned char 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  address         1    0[COMRAM] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      unsigned char 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3702 ;;      Params:         0       0       0       0       0       0       0
  3703 ;;      Locals:         1       0       0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0
  3705 ;;      Totals:         1       0       0       0       0       0       0
  3706 ;;Total ram usage:        1 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_compare_and_check
  3713 ;;		_read_ust_data_from_eeprom
  3714 ;;		_read_pid_data_from_eeprom
  3715 ;;		_can_transmit
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text23
  3720   001162                     __ptext23:
  3721                           	callstack 0
  3722   001162                     _read_internal_eeprom:
  3723                           	callstack 25
  3724                           
  3725                           ;incstack = 0
  3726                           ;read_internal_eeprom@address stored from wreg
  3727   001162  6E4D               	movwf	read_internal_eeprom@address^0,c
  3728   001164                     
  3729                           ;eeprom.c: 41: unsigned char read_internal_eeprom(unsigned char address);eeprom.c: 42: {
      +                          ;eeprom.c: 44:  EEADR = address;
  3730   001164  C04D  FFA9         	movff	read_internal_eeprom@address,4009	;volatile
  3731   001168                     
  3732                           ;eeprom.c: 47:  EECON1bits.WREN = 0;
  3733   001168  94A6               	bcf	166,2,c	;volsfr
  3734   00116A                     
  3735                           ;eeprom.c: 50:  EECON1bits.EEPGD = 0;
  3736   00116A  9EA6               	bcf	166,7,c	;volsfr
  3737   00116C                     
  3738                           ;eeprom.c: 53:  EECON1bits.CFGS = 0;
  3739   00116C  9CA6               	bcf	166,6,c	;volsfr
  3740   00116E                     
  3741                           ;eeprom.c: 56:  EECON1bits.RD = 1;
  3742   00116E  80A6               	bsf	166,0,c	;volsfr
  3743   001170                     
  3744                           ;eeprom.c: 59:  return EEDATA;
  3745   001170  50A8               	movf	168,w,c	;volatile
  3746   001172  0012               	return		;funcret
  3747   001174                     __end_of_read_internal_eeprom:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _can_receive *****************
  3751 ;; Defined at:
  3752 ;;		line 63 in file "can.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;		None
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  rx_msg_flag     1    0        unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      unsigned char 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3766 ;;      Params:         0       0       0       0       0       0       0
  3767 ;;      Locals:         0       0       0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0
  3769 ;;      Totals:         0       0       0       0       0       0       0
  3770 ;;Total ram usage:        0 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_receive_can_data
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text24
  3781   001008                     __ptext24:
  3782                           	callstack 0
  3783   001008                     _can_receive:
  3784                           	callstack 28
  3785   001008                     
  3786                           ;can.c: 67:  if (RXB0FUL)
  3787   001008  AE60               	btfss	3936,7,c	;volatile
  3788   00100A  EF09  F008         	goto	u1211
  3789   00100E  EF0B  F008         	goto	u1210
  3790   001012                     u1211:
  3791   001012  EF2A  F008         	goto	l2094
  3792   001016                     u1210:
  3793   001016                     
  3794                           ;can.c: 68:  {;can.c: 69:   can_payload[0] = RXB0EIDH;
  3795   001016  CF63 F001          	movff	3939,_can_payload	;volatile
  3796                           
  3797                           ;can.c: 70:   can_payload[1] = RXB0EIDL;
  3798   00101A  CF64 F002          	movff	3940,_can_payload+1	;volatile
  3799                           
  3800                           ;can.c: 71:   can_payload[2] = RXB0SIDH;
  3801   00101E  CF61 F003          	movff	3937,_can_payload+2	;volatile
  3802                           
  3803                           ;can.c: 72:   can_payload[3] = RXB0SIDL;
  3804   001022  CF62 F004          	movff	3938,_can_payload+3	;volatile
  3805                           
  3806                           ;can.c: 73:   can_payload[4] = RXB0DLC;
  3807   001026  CF65 F005          	movff	3941,_can_payload+4	;volatile
  3808                           
  3809                           ;can.c: 74:   can_payload[5] = RXB0D0;
  3810   00102A  CF66 F006          	movff	3942,_can_payload+5	;volatile
  3811                           
  3812                           ;can.c: 75:   can_payload[6] = RXB0D1;
  3813   00102E  CF67 F007          	movff	3943,_can_payload+6	;volatile
  3814                           
  3815                           ;can.c: 76:   can_payload[7] = RXB0D2;
  3816   001032  CF68 F008          	movff	3944,_can_payload+7	;volatile
  3817                           
  3818                           ;can.c: 77:   can_payload[8] = RXB0D3;
  3819   001036  CF69 F009          	movff	3945,_can_payload+8	;volatile
  3820                           
  3821                           ;can.c: 78:   can_payload[9] = RXB0D4;
  3822   00103A  CF6A F00A          	movff	3946,_can_payload+9	;volatile
  3823                           
  3824                           ;can.c: 79:   can_payload[10] = RXB0D5;
  3825   00103E  CF6B F00B          	movff	3947,_can_payload+10	;volatile
  3826                           
  3827                           ;can.c: 80:   can_payload[11] = RXB0D6;
  3828   001042  CF6C F00C          	movff	3948,_can_payload+11	;volatile
  3829                           
  3830                           ;can.c: 81:   can_payload[12] = RXB0D7;
  3831   001046  CF6D F00D          	movff	3949,_can_payload+12	;volatile
  3832                           
  3833                           ;can.c: 83:   RXB0FUL = 0;
  3834   00104A  9E60               	bcf	3936,7,c	;volatile
  3835                           
  3836                           ;can.c: 84:   RXB0IF = 0;
  3837   00104C  90A4               	bcf	4004,0,c	;volatile
  3838   00104E                     
  3839                           ;can.c: 86:   return 1;
  3840   00104E  0E01               	movlw	1
  3841   001050  EF2B  F008         	goto	l574
  3842   001054                     l2094:
  3843                           
  3844                           ;can.c: 89:  {;can.c: 90:   return 0;
  3845   001054  0E00               	movlw	0
  3846   001056                     l574:
  3847   001056  0012               	return		;funcret
  3848   001058                     __end_of_can_receive:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function ___wmul *****************
  3852 ;; Defined at:
  3853 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  multiplier      2    0[COMRAM] unsigned int 
  3856 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  product         2    4[COMRAM] unsigned int 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  2    0[COMRAM] unsigned int 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, prodl, prodh
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3868 ;;      Params:         4       0       0       0       0       0       0
  3869 ;;      Locals:         2       0       0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0
  3871 ;;      Totals:         6       0       0       0       0       0       0
  3872 ;;Total ram usage:        6 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; Hardware stack levels required when called: 1
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_receive_can_data
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text25
  3883   0010D8                     __ptext25:
  3884                           	callstack 0
  3885   0010D8                     ___wmul:
  3886                           	callstack 28
  3887   0010D8  504D               	movf	___wmul@multiplier^0,w,c
  3888   0010DA  024F               	mulwf	___wmul@multiplicand^0,c
  3889   0010DC  CFF3 F051          	movff	prodl,___wmul@product
  3890   0010E0  CFF4 F052          	movff	prodh,___wmul@product+1
  3891   0010E4  504D               	movf	___wmul@multiplier^0,w,c
  3892   0010E6  0250               	mulwf	(___wmul@multiplicand+1)^0,c
  3893   0010E8  50F3               	movf	243,w,c
  3894   0010EA  2652               	addwf	(___wmul@product+1)^0,f,c
  3895   0010EC  504E               	movf	(___wmul@multiplier+1)^0,w,c
  3896   0010EE  024F               	mulwf	___wmul@multiplicand^0,c
  3897   0010F0  50F3               	movf	243,w,c
  3898   0010F2  2652               	addwf	(___wmul@product+1)^0,f,c
  3899   0010F4  C051  F04D         	movff	___wmul@product,?___wmul
  3900   0010F8  C052  F04E         	movff	___wmul@product+1,?___wmul+1
  3901   0010FC  0012               	return		;funcret
  3902   0010FE                     __end_of___wmul:
  3903                           	callstack 0
  3904                           
  3905 ;; *************** function _read_digital_keypad *****************
  3906 ;; Defined at:
  3907 ;;		line 9 in file "digital_keypad.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  detection_ty    1    wreg     unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  detection_ty    1    0[COMRAM] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      unsigned char 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3921 ;;      Params:         0       0       0       0       0       0       0
  3922 ;;      Locals:         1       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0
  3924 ;;      Totals:         1       0       0       0       0       0       0
  3925 ;;Total ram usage:        1 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 1
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_main
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text26
  3936   000C38                     __ptext26:
  3937                           	callstack 0
  3938   000C38                     _read_digital_keypad:
  3939                           	callstack 29
  3940                           
  3941                           ;incstack = 0
  3942                           ;read_digital_keypad@detection_type stored from wreg
  3943   000C38  6E4D               	movwf	read_digital_keypad@detection_type^0,c
  3944   000C3A                     
  3945                           ;digital_keypad.c: 9: unsigned char read_digital_keypad(unsigned char detection_type);di
      +                          gital_keypad.c: 10: {;digital_keypad.c: 11:  static unsigned char once = 1;;digital_keyp
      +                          ad.c: 13:  if (detection_type == 1)
  3946   000C3A  044D               	decf	read_digital_keypad@detection_type^0,w,c
  3947   000C3C  A4D8               	btfss	status,2,c
  3948   000C3E  EF23  F006         	goto	u571
  3949   000C42  EF25  F006         	goto	u570
  3950   000C46                     u571:
  3951   000C46  EF4B  F006         	goto	l1706
  3952   000C4A                     u570:
  3953   000C4A                     
  3954                           ;digital_keypad.c: 14:  {;digital_keypad.c: 15:   if (((PORTC & 0x0F) != 0x0F) && once)
  3955   000C4A  5082               	movf	130,w,c	;volatile
  3956   000C4C  0B0F               	andlw	15
  3957   000C4E  0A0F               	xorlw	15
  3958   000C50  B4D8               	btfsc	status,2,c
  3959   000C52  EF2D  F006         	goto	u581
  3960   000C56  EF2F  F006         	goto	u580
  3961   000C5A                     u581:
  3962   000C5A  EF3D  F006         	goto	l1702
  3963   000C5E                     u580:
  3964   000C5E  504C               	movf	read_digital_keypad@once^0,w,c
  3965   000C60  B4D8               	btfsc	status,2,c
  3966   000C62  EF35  F006         	goto	u591
  3967   000C66  EF37  F006         	goto	u590
  3968   000C6A                     u591:
  3969   000C6A  EF3D  F006         	goto	l1702
  3970   000C6E                     u590:
  3971   000C6E                     
  3972                           ;digital_keypad.c: 16:   {;digital_keypad.c: 17:    once = 0;
  3973   000C6E  0E00               	movlw	0
  3974   000C70  6E4C               	movwf	read_digital_keypad@once^0,c
  3975   000C72                     l1696:
  3976                           
  3977                           ;digital_keypad.c: 19:    return (PORTC & 0x0F);
  3978   000C72  5082               	movf	130,w,c	;volatile
  3979   000C74  0B0F               	andlw	15
  3980   000C76  EF56  F006         	goto	l14
  3981   000C7A                     l1702:
  3982   000C7A  5082               	movf	130,w,c	;volatile
  3983   000C7C  0B0F               	andlw	15
  3984   000C7E  0A0F               	xorlw	15
  3985   000C80  A4D8               	btfss	status,2,c
  3986   000C82  EF45  F006         	goto	u601
  3987   000C86  EF47  F006         	goto	u600
  3988   000C8A                     u601:
  3989   000C8A  EF55  F006         	goto	l1712
  3990   000C8E                     u600:
  3991   000C8E                     
  3992                           ;digital_keypad.c: 22:   {;digital_keypad.c: 23:    once = 1;
  3993   000C8E  0E01               	movlw	1
  3994   000C90  6E4C               	movwf	read_digital_keypad@once^0,c
  3995   000C92  EF55  F006         	goto	l1712
  3996   000C96                     l1706:
  3997   000C96  504D               	movf	read_digital_keypad@detection_type^0,w,c
  3998   000C98  A4D8               	btfss	status,2,c
  3999   000C9A  EF51  F006         	goto	u611
  4000   000C9E  EF53  F006         	goto	u610
  4001   000CA2                     u611:
  4002   000CA2  EF55  F006         	goto	l1712
  4003   000CA6                     u610:
  4004   000CA6  EF39  F006         	goto	l1696
  4005   000CAA                     l1712:
  4006                           
  4007                           ;digital_keypad.c: 31:  return 0xFF;
  4008   000CAA  0EFF               	movlw	255
  4009   000CAC                     l14:
  4010   000CAC  0012               	return		;funcret
  4011   000CAE                     __end_of_read_digital_keypad:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _init_config *****************
  4015 ;; Defined at:
  4016 ;;		line 31 in file "main.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4030 ;;      Params:         0       0       0       0       0       0       0
  4031 ;;      Locals:         0       0       0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0
  4033 ;;      Totals:         0       0       0       0       0       0       0
  4034 ;;Total ram usage:        0 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; Hardware stack levels required when called: 2
  4037 ;; This function calls:
  4038 ;;		_init_can
  4039 ;;		_init_digital_keypad
  4040 ;;		_init_external_interrupt
  4041 ;;		_init_ssd_control
  4042 ;; This function is called by:
  4043 ;;		_main
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text27
  4048   001138                     __ptext27:
  4049                           	callstack 0
  4050   001138                     _init_config:
  4051                           	callstack 28
  4052   001138                     
  4053                           ;main.c: 32:     GIE = 1;
  4054   001138  8EF2               	bsf	4082,7,c	;volatile
  4055                           
  4056                           ;main.c: 33:     PEIE = 1;
  4057   00113A  8CF2               	bsf	4082,6,c	;volatile
  4058   00113C                     
  4059                           ;main.c: 34:     init_external_interrupt();
  4060   00113C  ECC3  F008         	call	_init_external_interrupt	;wreg free
  4061   001140                     
  4062                           ;main.c: 35:     init_digital_keypad();
  4063   001140  ECC7  F008         	call	_init_digital_keypad	;wreg free
  4064   001144                     
  4065                           ;main.c: 36:     init_ssd_control();
  4066   001144  ECBA  F008         	call	_init_ssd_control	;wreg free
  4067   001148                     
  4068                           ;main.c: 37:     init_can();
  4069   001148  EC2C  F008         	call	_init_can	;wreg free
  4070   00114C  0012               	return		;funcret
  4071   00114E                     __end_of_init_config:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _init_ssd_control *****************
  4075 ;; Defined at:
  4076 ;;		line 4 in file "ssd_display.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4090 ;;      Params:         0       0       0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0
  4093 ;;      Totals:         0       0       0       0       0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_init_config
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text28
  4105   001174                     __ptext28:
  4106                           	callstack 0
  4107   001174                     _init_ssd_control:
  4108                           	callstack 28
  4109   001174                     
  4110                           ;ssd_display.c: 7:  TRISD = 0x00;
  4111   001174  0E00               	movlw	0
  4112   001176  6E95               	movwf	149,c	;volatile
  4113   001178                     
  4114                           ;ssd_display.c: 9:  TRISA = TRISA & 0xF0;
  4115   001178  5092               	movf	146,w,c	;volatile
  4116   00117A  0BF0               	andlw	240
  4117   00117C  6E92               	movwf	146,c	;volatile
  4118   00117E                     
  4119                           ;ssd_display.c: 12:  PORTA = PORTA & 0xF0;
  4120   00117E  5080               	movf	128,w,c	;volatile
  4121   001180  0BF0               	andlw	240
  4122   001182  6E80               	movwf	128,c	;volatile
  4123   001184  0012               	return		;funcret
  4124   001186                     __end_of_init_ssd_control:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _init_external_interrupt *****************
  4128 ;; Defined at:
  4129 ;;		line 23 in file "main.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		None
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4143 ;;      Params:         0       0       0       0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used: 1
  4149 ;; Hardware stack levels required when called: 1
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_init_config
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text29
  4158   001186                     __ptext29:
  4159                           	callstack 0
  4160   001186                     _init_external_interrupt:
  4161                           	callstack 28
  4162   001186                     
  4163                           ;main.c: 24:     INTEDG0 = 1;
  4164   001186  8CF1               	bsf	4081,6,c	;volatile
  4165                           
  4166                           ;main.c: 26:     INT0F = 0;
  4167   001188  92F2               	bcf	4082,1,c	;volatile
  4168                           
  4169                           ;main.c: 28:     INT0E = 1;
  4170   00118A  88F2               	bsf	4082,4,c	;volatile
  4171   00118C  0012               	return		;funcret
  4172   00118E                     __end_of_init_external_interrupt:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _init_digital_keypad *****************
  4176 ;; Defined at:
  4177 ;;		line 4 in file "digital_keypad.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4191 ;;      Params:         0       0       0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0
  4194 ;;      Totals:         0       0       0       0       0       0       0
  4195 ;;Total ram usage:        0 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_init_config
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text30
  4206   00118E                     __ptext30:
  4207                           	callstack 0
  4208   00118E                     _init_digital_keypad:
  4209                           	callstack 28
  4210   00118E                     
  4211                           ;digital_keypad.c: 6:  TRISC = TRISC | 0x0F;
  4212   00118E  5094               	movf	148,w,c	;volatile
  4213   001190  090F               	iorlw	15
  4214   001192  6E94               	movwf	148,c	;volatile
  4215   001194  0012               	return		;funcret
  4216   001196                     __end_of_init_digital_keypad:
  4217                           	callstack 0
  4218                           
  4219 ;; *************** function _init_can *****************
  4220 ;; Defined at:
  4221 ;;		line 19 in file "can.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4235 ;;      Params:         0       0       0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0
  4238 ;;      Totals:         0       0       0       0       0       0       0
  4239 ;;Total ram usage:        0 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 1
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_init_config
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text31
  4250   001058                     __ptext31:
  4251                           	callstack 0
  4252   001058                     _init_can:
  4253                           	callstack 28
  4254   001058                     
  4255                           ;can.c: 22:  TRISB2 = 0;
  4256   001058  9493               	bcf	3987,2,c	;volatile
  4257                           
  4258                           ;can.c: 23:  TRISB3 = 1;
  4259   00105A  8693               	bsf	3987,3,c	;volatile
  4260   00105C                     
  4261                           ;can.c: 27:    { CANCON &= 0x1F; CANCON |= e_can_op_mode_config; };
  4262   00105C  0E1F               	movlw	31
  4263   00105E  166F               	andwf	111,f,c	;volatile
  4264   001060  8E6F               	bsf	111,7,c	;volatile
  4265   001062                     l1558:
  4266   001062  0E80               	movlw	128
  4267   001064  186E               	xorwf	110,w,c	;volatile
  4268   001066  A4D8               	btfss	status,2,c
  4269   001068  EF38  F008         	goto	u431
  4270   00106C  EF3A  F008         	goto	u430
  4271   001070                     u431:
  4272   001070  EF31  F008         	goto	l1558
  4273   001074                     u430:
  4274   001074                     
  4275                           ;can.c: 33:  ECANCON = 0x00;
  4276   001074  0E00               	movlw	0
  4277   001076  6E77               	movwf	119,c	;volatile
  4278                           
  4279                           ;can.c: 36:  BRGCON1 = 0xE1;
  4280   001078  0EE1               	movlw	225
  4281   00107A  6E70               	movwf	112,c	;volatile
  4282                           
  4283                           ;can.c: 37:  BRGCON2 = 0x1B;
  4284   00107C  0E1B               	movlw	27
  4285   00107E  6E71               	movwf	113,c	;volatile
  4286                           
  4287                           ;can.c: 38:  BRGCON3 = 0x03;
  4288   001080  0E03               	movlw	3
  4289   001082  6E72               	movwf	114,c	;volatile
  4290                           
  4291                           ;can.c: 44:  RXFCON0 = 0x01;
  4292   001084  0E01               	movlw	1
  4293   001086  010D               	movlb	13	; () banked
  4294   001088  6FD4               	movwf	212,b	;volatile
  4295                           
  4296                           ;can.c: 50:  RXF0EIDH = 0x00;
  4297   00108A  0E00               	movlw	0
  4298   00108C  010F               	movlb	15	; () banked
  4299   00108E  6F02               	movwf	2,b	;volatile
  4300                           
  4301                           ;can.c: 51:  RXF0EIDL = 0x00;
  4302   001090  0E00               	movlw	0
  4303   001092  6F03               	movwf	3,b	;volatile
  4304                           
  4305                           ;can.c: 52:  RXF0SIDH = 0x6B;
  4306   001094  0E6B               	movlw	107
  4307   001096  6F00               	movwf	0,b	;volatile
  4308                           
  4309                           ;can.c: 53:  RXF0SIDL = 0xC0;
  4310   001098  0EC0               	movlw	192
  4311   00109A  6F01               	movwf	1,b	;volatile
  4312   00109C                     
  4313                           ; BSR set to: 15
  4314                           ;can.c: 56:  { CANCON &= 0x1F; CANCON |= e_can_op_mode_normal; };
  4315   00109C  0E1F               	movlw	31
  4316   00109E  166F               	andwf	111,f,c	;volatile
  4317   0010A0                     
  4318                           ; BSR set to: 15
  4319   0010A0  506F               	movf	111,w,c	;volatile
  4320   0010A2                     
  4321                           ; BSR set to: 15
  4322                           ;can.c: 59:  RXB0CON = 0x00;
  4323   0010A2  0E00               	movlw	0
  4324   0010A4  6E60               	movwf	96,c	;volatile
  4325   0010A6                     
  4326                           ; BSR set to: 15
  4327   0010A6  0012               	return		;funcret
  4328   0010A8                     __end_of_init_can:
  4329                           	callstack 0
  4330                           
  4331 ;; *************** function _isr *****************
  4332 ;; Defined at:
  4333 ;;		line 3 in file "isr.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;		None
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      void 
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4347 ;;      Params:         0       0       0       0       0       0       0
  4348 ;;      Locals:         0       0       0       0       0       0       0
  4349 ;;      Temps:          0       0       0       0       0       0       0
  4350 ;;      Totals:         0       0       0       0       0       0       0
  4351 ;;Total ram usage:        0 bytes
  4352 ;; Hardware stack levels used: 1
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		Interrupt level 2
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	intcode
  4361   000008                     __pintcode:
  4362                           	callstack 0
  4363   000008                     _isr:
  4364                           	callstack 25
  4365                           
  4366                           ; BSR set to: 15
  4367                           ;incstack = 0
  4368   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4369   00000A  ED2D  F007         	call	int_func,f	;refresh shadow registers
  4370                           
  4371                           	psect	intcode_body
  4372   000E5A                     __pintcode_body:
  4373                           	callstack 25
  4374   000E5A                     int_func:
  4375                           	callstack 25
  4376   000E5A  0006               	pop		; remove dummy address from shadow register refresh
  4377   000E5C                     
  4378                           ;isr.c: 5:  if (INT0F == 1)
  4379   000E5C  A2F2               	btfss	4082,1,c	;volatile
  4380   000E5E  EF33  F007         	goto	i2u76_41
  4381   000E62  EF35  F007         	goto	i2u76_40
  4382   000E66                     i2u76_41:
  4383   000E66  EF5B  F007         	goto	i2l113
  4384   000E6A                     i2u76_40:
  4385   000E6A                     
  4386                           ;isr.c: 6:  {;isr.c: 7:         if(rec_cond_flag)
  4387   000E6A  5046               	movf	_rec_cond_flag^0,w,c
  4388   000E6C  1047               	iorwf	(_rec_cond_flag+1)^0,w,c
  4389   000E6E  B4D8               	btfsc	status,2,c
  4390   000E70  EF3C  F007         	goto	i2u77_41
  4391   000E74  EF3E  F007         	goto	i2u77_40
  4392   000E78                     i2u77_41:
  4393   000E78  EF4D  F007         	goto	i2l1794
  4394   000E7C                     i2u77_40:
  4395   000E7C                     
  4396                           ;isr.c: 8:             interrupt_key = !interrupt_key;
  4397   000E7C  5029               	movf	_interrupt_key^0,w,c
  4398   000E7E  102A               	iorwf	(_interrupt_key+1)^0,w,c
  4399   000E80  B4D8               	btfsc	status,2,c
  4400   000E82  EF45  F007         	goto	i2u78_41
  4401   000E86  EF48  F007         	goto	i2u78_40
  4402   000E8A                     i2u78_41:
  4403   000E8A  0E01               	movlw	1
  4404   000E8C  EF49  F007         	goto	i2u79_40
  4405   000E90                     i2u78_40:
  4406   000E90  0E00               	movlw	0
  4407   000E92                     i2u79_40:
  4408   000E92  6E29               	movwf	_interrupt_key^0,c
  4409   000E94  6A2A               	clrf	(_interrupt_key+1)^0,c
  4410   000E96  EF5A  F007         	goto	i2l1796
  4411   000E9A                     i2l1794:
  4412                           
  4413                           ;isr.c: 10:             update_data_flag = !update_data_flag;
  4414   000E9A  5044               	movf	_update_data_flag^0,w,c
  4415   000E9C  1045               	iorwf	(_update_data_flag+1)^0,w,c
  4416   000E9E  B4D8               	btfsc	status,2,c
  4417   000EA0  EF54  F007         	goto	i2u80_41
  4418   000EA4  EF57  F007         	goto	i2u80_40
  4419   000EA8                     i2u80_41:
  4420   000EA8  0E01               	movlw	1
  4421   000EAA  EF58  F007         	goto	i2u81_40
  4422   000EAE                     i2u80_40:
  4423   000EAE  0E00               	movlw	0
  4424   000EB0                     i2u81_40:
  4425   000EB0  6E44               	movwf	_update_data_flag^0,c
  4426   000EB2  6A45               	clrf	(_update_data_flag+1)^0,c
  4427   000EB4                     i2l1796:
  4428                           
  4429                           ;isr.c: 11:   INT0F = 0;
  4430   000EB4  92F2               	bcf	4082,1,c	;volatile
  4431   000EB6                     i2l113:
  4432   000EB6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4433   000EB8  0011               	retfie		f
  4434   000EBA                     __end_of_isr:
  4435                           	callstack 0
  4436   000000                     
  4437                           	psect	rparam
  4438   000000                     
  4439                           	psect	temp
  4440   00005F                     btemp:
  4441                           	callstack 0
  4442   00005F                     	ds	1
  4443   000000                     int$flags	set	btemp
  4444   000000                     wtemp8	set	btemp+1
  4445   000000                     ttemp5	set	btemp+1
  4446   000000                     ttemp6	set	btemp+4
  4447   000000                     ttemp7	set	btemp+8
  4448                           
  4449                           	psect	idloc
  4450                           
  4451                           ;Config register IDLOC0 @ 0x200000
  4452                           ;	unspecified, using default values
  4453   200000                     	org	2097152
  4454   200000  FF                 	db	255
  4455                           
  4456                           ;Config register IDLOC1 @ 0x200001
  4457                           ;	unspecified, using default values
  4458   200001                     	org	2097153
  4459   200001  FF                 	db	255
  4460                           
  4461                           ;Config register IDLOC2 @ 0x200002
  4462                           ;	unspecified, using default values
  4463   200002                     	org	2097154
  4464   200002  FF                 	db	255
  4465                           
  4466                           ;Config register IDLOC3 @ 0x200003
  4467                           ;	unspecified, using default values
  4468   200003                     	org	2097155
  4469   200003  FF                 	db	255
  4470                           
  4471                           ;Config register IDLOC4 @ 0x200004
  4472                           ;	unspecified, using default values
  4473   200004                     	org	2097156
  4474   200004  FF                 	db	255
  4475                           
  4476                           ;Config register IDLOC5 @ 0x200005
  4477                           ;	unspecified, using default values
  4478   200005                     	org	2097157
  4479   200005  FF                 	db	255
  4480                           
  4481                           ;Config register IDLOC6 @ 0x200006
  4482                           ;	unspecified, using default values
  4483   200006                     	org	2097158
  4484   200006  FF                 	db	255
  4485                           
  4486                           ;Config register IDLOC7 @ 0x200007
  4487                           ;	unspecified, using default values
  4488   200007                     	org	2097159
  4489   200007  FF                 	db	255
  4490                           
  4491                           	psect	config
  4492                           
  4493                           ; Padding undefined space
  4494   300000                     	org	3145728
  4495   300000  FF                 	db	255
  4496                           
  4497                           ;Config register CONFIG1H @ 0x300001
  4498                           ;	unspecified, using default values
  4499                           ;	Oscillator Selection bits
  4500                           ;	OSC = 0x7, unprogrammed default
  4501                           ;	Fail-Safe Clock Monitor Enable bit
  4502                           ;	FCMEN = 0x0, unprogrammed default
  4503                           ;	Internal/External Oscillator Switchover bit
  4504                           ;	IESO = 0x0, unprogrammed default
  4505   300001                     	org	3145729
  4506   300001  07                 	db	7
  4507                           
  4508                           ;Config register CONFIG2L @ 0x300002
  4509                           ;	unspecified, using default values
  4510                           ;	Power-up Timer Enable bit
  4511                           ;	PWRT = 0x1, unprogrammed default
  4512                           ;	Brown-out Reset Enable bits
  4513                           ;	BOREN = 0x3, unprogrammed default
  4514                           ;	Brown-out Reset Voltage bits
  4515                           ;	BORV = 0x3, unprogrammed default
  4516   300002                     	org	3145730
  4517   300002  1F                 	db	31
  4518                           
  4519                           ;Config register CONFIG2H @ 0x300003
  4520                           ;	unspecified, using default values
  4521                           ;	Watchdog Timer Enable bit
  4522                           ;	WDT = 0x1, unprogrammed default
  4523                           ;	Watchdog Timer Postscale Select bits
  4524                           ;	WDTPS = 0xF, unprogrammed default
  4525   300003                     	org	3145731
  4526   300003  1F                 	db	31
  4527                           
  4528                           ; Padding undefined space
  4529   300004                     	org	3145732
  4530   300004  FF                 	db	255
  4531                           
  4532                           ;Config register CONFIG3H @ 0x300005
  4533                           ;	unspecified, using default values
  4534                           ;	PORTB A/D Enable bit
  4535                           ;	PBADEN = 0x1, unprogrammed default
  4536                           ;	Low-Power Timer 1 Oscillator Enable bit
  4537                           ;	LPT1OSC = 0x0, unprogrammed default
  4538                           ;	MCLR Pin Enable bit
  4539                           ;	MCLRE = 0x1, unprogrammed default
  4540   300005                     	org	3145733
  4541   300005  82                 	db	130
  4542                           
  4543                           ;Config register CONFIG4L @ 0x300006
  4544                           ;	unspecified, using default values
  4545                           ;	Stack Full/Underflow Reset Enable bit
  4546                           ;	STVREN = 0x1, unprogrammed default
  4547                           ;	Single-Supply ICSP Enable bit
  4548                           ;	LVP = 0x1, unprogrammed default
  4549                           ;	Boot Block Size Select bit
  4550                           ;	BBSIZ = 0x0, unprogrammed default
  4551                           ;	Extended Instruction Set Enable bit
  4552                           ;	XINST = 0x0, unprogrammed default
  4553                           ;	Background Debugger Enable bit
  4554                           ;	DEBUG = 0x1, unprogrammed default
  4555   300006                     	org	3145734
  4556   300006  85                 	db	133
  4557                           
  4558                           ; Padding undefined space
  4559   300007                     	org	3145735
  4560   300007  FF                 	db	255
  4561                           
  4562                           ;Config register CONFIG5L @ 0x300008
  4563                           ;	unspecified, using default values
  4564                           ;	Code Protection bit
  4565                           ;	CP0 = 0x1, unprogrammed default
  4566                           ;	Code Protection bit
  4567                           ;	CP1 = 0x1, unprogrammed default
  4568                           ;	Code Protection bit
  4569                           ;	CP2 = 0x1, unprogrammed default
  4570                           ;	Code Protection bit
  4571                           ;	CP3 = 0x1, unprogrammed default
  4572   300008                     	org	3145736
  4573   300008  0F                 	db	15
  4574                           
  4575                           ;Config register CONFIG5H @ 0x300009
  4576                           ;	unspecified, using default values
  4577                           ;	Boot Block Code Protection bit
  4578                           ;	CPB = 0x1, unprogrammed default
  4579                           ;	Data EEPROM Code Protection bit
  4580                           ;	CPD = 0x1, unprogrammed default
  4581   300009                     	org	3145737
  4582   300009  C0                 	db	192
  4583                           
  4584                           ;Config register CONFIG6L @ 0x30000A
  4585                           ;	unspecified, using default values
  4586                           ;	Write Protection bit
  4587                           ;	WRT0 = 0x1, unprogrammed default
  4588                           ;	Write Protection bit
  4589                           ;	WRT1 = 0x1, unprogrammed default
  4590                           ;	Write Protection bit
  4591                           ;	WRT2 = 0x1, unprogrammed default
  4592                           ;	Write Protection bit
  4593                           ;	WRT3 = 0x1, unprogrammed default
  4594   30000A                     	org	3145738
  4595   30000A  0F                 	db	15
  4596                           
  4597                           ;Config register CONFIG6H @ 0x30000B
  4598                           ;	unspecified, using default values
  4599                           ;	Configuration Register Write Protection bit
  4600                           ;	WRTC = 0x1, unprogrammed default
  4601                           ;	Boot Block Write Protection bit
  4602                           ;	WRTB = 0x1, unprogrammed default
  4603                           ;	Data EEPROM Write Protection bit
  4604                           ;	WRTD = 0x1, unprogrammed default
  4605   30000B                     	org	3145739
  4606   30000B  E0                 	db	224
  4607                           
  4608                           ;Config register CONFIG7L @ 0x30000C
  4609                           ;	unspecified, using default values
  4610                           ;	Table Read Protection bit
  4611                           ;	EBTR0 = 0x1, unprogrammed default
  4612                           ;	Table Read Protection bit
  4613                           ;	EBTR1 = 0x1, unprogrammed default
  4614                           ;	Table Read Protection bit
  4615                           ;	EBTR2 = 0x1, unprogrammed default
  4616                           ;	Table Read Protection bit
  4617                           ;	EBTR3 = 0x1, unprogrammed default
  4618   30000C                     	org	3145740
  4619   30000C  0F                 	db	15
  4620                           
  4621                           ;Config register CONFIG7H @ 0x30000D
  4622                           ;	unspecified, using default values
  4623                           ;	Boot Block Table Read Protection bit
  4624                           ;	EBTRB = 0x1, unprogrammed default
  4625   30000D                     	org	3145741
  4626   30000D  40                 	db	64
  4627                           tosu	equ	0xFFF
  4628                           tosh	equ	0xFFE
  4629                           tosl	equ	0xFFD
  4630                           stkptr	equ	0xFFC
  4631                           pclatu	equ	0xFFB
  4632                           pclath	equ	0xFFA
  4633                           pcl	equ	0xFF9
  4634                           tblptru	equ	0xFF8
  4635                           tblptrh	equ	0xFF7
  4636                           tblptrl	equ	0xFF6
  4637                           tablat	equ	0xFF5
  4638                           prodh	equ	0xFF4
  4639                           prodl	equ	0xFF3
  4640                           indf0	equ	0xFEF
  4641                           postinc0	equ	0xFEE
  4642                           postdec0	equ	0xFED
  4643                           preinc0	equ	0xFEC
  4644                           plusw0	equ	0xFEB
  4645                           fsr0h	equ	0xFEA
  4646                           fsr0l	equ	0xFE9
  4647                           wreg	equ	0xFE8
  4648                           indf1	equ	0xFE7
  4649                           postinc1	equ	0xFE6
  4650                           postdec1	equ	0xFE5
  4651                           preinc1	equ	0xFE4
  4652                           plusw1	equ	0xFE3
  4653                           fsr1h	equ	0xFE2
  4654                           fsr1l	equ	0xFE1
  4655                           bsr	equ	0xFE0
  4656                           indf2	equ	0xFDF
  4657                           postinc2	equ	0xFDE
  4658                           postdec2	equ	0xFDD
  4659                           preinc2	equ	0xFDC
  4660                           plusw2	equ	0xFDB
  4661                           fsr2h	equ	0xFDA
  4662                           fsr2l	equ	0xFD9
  4663                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        45
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      94
    BANK0           160      0      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(2) Largest target is 4
		 -> ssd@ssd_display$F315(COMRAM[4]), ssd(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _update_stock->_can_stock
    _normal_stock->_write_internal_eeprom
    _read_ust_data_from_eeprom->_read_internal_eeprom
    _can_stock->_write_internal_eeprom
    _can_transmit->_read_internal_eeprom
    ___lwmod->___lwdiv
    _product_id->_write_internal_eeprom
    _write_internal_eeprom->___lwmod
    _read_pid_data_from_eeprom->_read_internal_eeprom
    _receive_can_data->_compare_and_check
    _compare_and_check->_read_internal_eeprom

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7989
                        _init_config
                _read_digital_keypad
                   _receive_can_data
                         _two_fields
 ---------------------------------------------------------------------------------
 (1) _two_fields                                           0     0      0    7184
                            _display
                         _product_id
                       _update_stock
 ---------------------------------------------------------------------------------
 (2) _update_stock                                         0     0      0    5176
                          _can_stock
                       _normal_stock
 ---------------------------------------------------------------------------------
 (3) _normal_stock                                         0     0      0    1515
                       _can_transmit
                            _display
                      _first_ssd_ust
          _read_ust_data_from_eeprom
                     _second_ssd_ust
                      _third_ssd_ust
              _write_internal_eeprom
                     _zeroth_ssd_ust
 ---------------------------------------------------------------------------------
 (4) _zeroth_ssd_ust                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _third_ssd_ust                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _second_ssd_ust                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_ust_data_from_eeprom                            1     1      0      22
                                              1 COMRAM     1     1      0
               _read_internal_eeprom
 ---------------------------------------------------------------------------------
 (4) _first_ssd_ust                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _can_stock                                            4     4      0    3661
                                             14 COMRAM     4     4      0
                            ___lwdiv
                            ___lwmod
                       _can_transmit
                            _display
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (4) _can_transmit                                         0     0      0      22
               _read_internal_eeprom
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    1071
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1074
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _product_id                                           0     0      0    1493
                            _display
                      _first_ssd_pid
          _read_pid_data_from_eeprom
                     _second_ssd_pid
                      _third_ssd_pid
              _write_internal_eeprom
                     _zeroth_ssd_pid
 ---------------------------------------------------------------------------------
 (3) _zeroth_ssd_pid                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _write_internal_eeprom                                2     1      1     956
                                             12 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _third_ssd_pid                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _second_ssd_pid                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _read_pid_data_from_eeprom                            1     1      0      22
                                              1 COMRAM     1     1      0
               _read_internal_eeprom
 ---------------------------------------------------------------------------------
 (3) _first_ssd_pid                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display                                              8     6      2     515
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _receive_can_data                                     0     0      0     775
                             ___wmul
                        _can_receive
                  _compare_and_check
 ---------------------------------------------------------------------------------
 (2) _compare_and_check                                    6     6      0     159
                                              1 COMRAM     6     6      0
               _read_internal_eeprom
 ---------------------------------------------------------------------------------
 (5) _read_internal_eeprom                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _can_receive                                          1     1      0       1
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_can
                _init_digital_keypad
            _init_external_interrupt
                   _init_ssd_control
 ---------------------------------------------------------------------------------
 (2) _init_ssd_control                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_external_interrupt                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_can                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_can
     _init_digital_keypad
     _init_external_interrupt
     _init_ssd_control
   _read_digital_keypad
   _receive_can_data
     ___wmul
     _can_receive
     _compare_and_check
       _read_internal_eeprom
   _two_fields
     _display
     _product_id
       _display
       _first_ssd_pid
       _read_pid_data_from_eeprom
         _read_internal_eeprom
       _second_ssd_pid
       _third_ssd_pid
       _write_internal_eeprom
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
       _zeroth_ssd_pid
     _update_stock
       _can_stock
         ___lwdiv
         ___lwmod
         _can_transmit
           _read_internal_eeprom
         _display
         _write_internal_eeprom
       _normal_stock
         _can_transmit
         _display
         _first_ssd_ust
         _read_ust_data_from_eeprom
           _read_internal_eeprom
         _second_ssd_ust
         _third_ssd_ust
         _write_internal_eeprom
         _zeroth_ssd_ust

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      30        0.0%
BITBIGSFRllllhl    12B      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRlllll      D4      0       0      28        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      14       5       12.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      5E       1      100.0%
BITBIGSFRhhl        47      0       0      17        0.0%
BITBIGSFRllllhh     3C      0       0      26        0.0%
BITBIGSFRllllhh     12      0       0      25        0.0%
BITBIGSFRlhl         E      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhlll        B      0       0      20        0.0%
BITBIGSFRlllhh       8      0       0      23        0.0%
BITBIGSFRlllhl       4      0       0      24        0.0%
BITBIGSFRhllhl       2      0       0      19        0.0%
BITBIGSFRhllhh       1      0       0      18        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      29        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Mar 19 16:57:07 2025

                                l7 1194                  ?_receive_can_data 004D  
                     _update_stock 10FE                                 l14 0CAC  
                               l71 1172                                 l65 10C6  
                               l67 10D4                                 l68 10D6  
                               u50 0928                                 u51 0924  
                               u60 093E                                 u61 093A  
                               u70 09A4                                 u71 09A0  
                               u80 09BA                                 u81 09B6  
                               u90 0A20                                 u91 0A1C  
              ___wmul@multiplicand 004F                 ??_receive_can_data 0054  
                              l202 114C                                l231 06D8  
                              l240 0714                                l243 079C  
                              l235 0856                                l340 0FB4  
                              l430 0BBA                                l406 04AE  
                              l415 0598                                l424 0B3E  
                              l337 111C                                l258 1184  
                              l266 0DF4                                l418 1006  
                              l442 0AC2                                l370 09CA  
                              l436 0C36                                l364 094E  
                              l349 032C                                l382 08D2  
                              l358 0422                                l199 118C  
                              l376 0A46                                l570 10A6  
                              l581 10FC                                l397 02A0  
                              l574 1056                                l578 0D8A  
                              _GIE 7F97                                u100 0A36  
                              u101 0A32                                u110 08AC  
                              u111 08A8                                u120 08C2  
                              u121 08BE                                u400 0C26  
                              u401 0C22                                u410 0A9C  
                              u411 0A98                                u420 0AB2  
                              u421 0AAE                                u430 1074  
                              u350 0B18                                u431 1070  
                              u351 0B14                                u600 0C8E  
                              u360 0B2E                                u601 0C8A  
                              u361 0B2A                                u610 0CA6  
                              u370 0B94                                u611 0CA2  
                              u371 0B90                                u380 0BAA  
                              u381 0BA6                                u390 0C10  
                              u391 0C0C                                u570 0C4A  
                              u571 0C46                                u580 0C5E  
                              u900 0CC8                                u581 0C5A  
                              u901 0CC4                                u590 0C6E  
                              u910 0CE6                                u591 0C6A  
                              u911 0CE2                                u920 0D02  
                              u921 0CFE                                u930 0E08  
                              u931 0E04                                u860 10D4  
                              u940 0E26                                u861 10D0  
                              u941 0E22                                u950 0E3C  
                              u951 0E38                                u880 0DE2  
                              u960 02B4                                u881 0DDE  
                              u961 02B0                                u890 0DF4  
                              u874 0DB2                                u970 02D2  
                              u891 0DF0                                u875 0DAE  
                              u971 02CE                                u980 02EC  
                              u981 02E8                                u990 0308  
                              u991 0304                                _key 002B  
                              _isr 0008                                _num 0019  
                              _ssd 0030                                wreg 0FE8  
                  ??_third_ssd_pid 004D                    ??_third_ssd_ust 004D  
               _increment_pid_flag 0023                   _update_data_flag 0044  
                             l2010 0146                               l2002 00A8  
                             l2012 017A                               l2004 00BA  
                             l2020 01DC                               l2110 0718  
                             l2030 0FB6                               l2022 0200  
                             l2014 01AA                               l2006 00F2  
                             l1310 0916                               l2120 10F4  
                             l2112 0734                               l2104 06EA  
                             l2040 0436                               l1072 0D18  
                             l2024 0238                               l2016 01D0  
                             l2008 0112                               l1320 0992  
                             l1312 0928                               l2032 10FE  
                             l2200 0F58                               l2114 0748  
                             l2106 06F2                               l2130 07C6  
                             l2050 046E                               l2042 043E  
                             l1082 0E50                               l2026 0270  
                             l2018 01D8                               l1330 0A0E  
                             l1322 09A4                               l1314 093E  
                             l2034 1110                               l2116 0774  
                             l2108 0710                               l2140 0846  
                             l2132 07EE                               l2124 079E  
                             l2052 0476                               l2060 04AE  
                             l2044 0442                               l2028 0294  
                             l1332 0A20                               l1324 09BA  
                             l1316 0946                               l1308 08D4  
                             l1340 089A                               l2036 1118  
                             l2118 10D8                               l2142 084A  
                             l2134 0816                               l2126 07B2  
                             l1510 0B36                               l1502 0AC4  
                             l2070 04FC                               l2062 04C0  
                             l2054 048A                               l2046 0454  
                             l2038 0424                               l1334 0A36  
                             l1326 09C2                               l1318 0950  
                             l1342 08AC                               l2150 05AC  
                             l1079 0D20                               l2144 084E  
                             l2136 083E                               l2128 07BA  
                             l1520 0BB2                               l1512 0B40  
                             l1504 0B06                               l2072 053C  
                             l2080 058C                               l2064 04D6  
                             l2056 0492                               l2048 045C  
                             l1336 0A3E                               l1328 09CC  
                             l1344 08C2                               l2160 0610  
                             l2152 05BE                               l1089 0E58  
            ??_read_digital_keypad 004D                               l2082 1008  
                             l2146 0852                               l2138 0842  
                             l1530 0C2E                               l1522 0BBC  
                             l1514 0B82                               l1506 0B18  
                             l2074 0548                               l2066 04DE  
                             l2058 04A6                               l1346 08CA  
                             l1338 0858                               l2170 065C  
                             l2162 0620                               l2154 05CE  
                             l2084 1008                               l1524 0BFE  
                             l1516 0B94                               l1508 0B2E  
                             l1540 0ABA                               l1532 0A48  
                             l2076 0554                               l2068 04EA  
                             l2180 06BE                               l2172 066C  
                             l2164 0632                               l2156 05E0  
                             l2148 059A                               l1542 118E  
                             l1550 117E                               l1702 0C7A  
                             l2086 1016                               l2094 1054  
                             l1526 0C10                               l1518 0BAA  
                             l1534 0A8A                               l2078 0560  
                             l2174 067E                               l2158 05FE  
                             l2166 0642                               l2190 0F18  
                             l1560 1074                               l1552 1058  
                             l1544 1186                               l1720 1140  
                             l1704 0C8E                               l1712 0CAA  
                             l2088 104E                               l1528 0C26  
                             l1536 0A9C                               l2176 069C  
                             l2184 06D4                               l2168 064A  
                             l2192 0F2A                               l1562 109C  
                             l1554 105C                               l1546 1174  
                             l1722 1144                               l1706 0C96  
                             l2098 06DA                               l1538 0AB2  
                             l2178 06AE                               l2194 0F3C  
                             l2186 0F10                               l1564 10A0  
                             l1556 1060                               l1548 1178  
                             l1724 1148                               l1716 1138  
                             l1900 0CB6                               l2196 0F48  
                             l2188 0F14                               l1566 10A2  
                             l1558 1062                               l1718 113C  
                             l1830 116C                               l1910 0CEC  
                             l1902 0CC8                               l2198 0F50  
                             l1832 116E                               l1824 1164  
                             l1840 10AE                               l1912 0D02  
                             l1904 0CD0                               l1920 0DF6  
                             l1690 0C4A                               l1834 1170  
                             l1826 1168                               l1850 10BA  
                             l1842 10B2                               l1914 0D0A  
                             l1906 0CD8                               l1930 0E3C  
                             l1922 0E08                               l1692 0C5E  
                             l1828 116A                               l1852 10BE  
                             l1844 10B4                               l1916 0D0C  
                             l1908 0CE6                               l1932 0E44  
                             l1924 0E10                               l1940 02BC  
                             l1694 0C6E                               l1870 0DC8  
                             l1854 10C2                               l1846 10B6  
                             l1838 10AA                               l1918 0D12  
                             l1934 0E4A                               l1926 0E18  
                             l1950 02F4                               l1942 02C0  
                             l1696 0C72                               l1688 0C3A  
                             l1872 0DE2                               l1864 0D90  
                             l1856 10C4                               l1848 10B8  
                             l1928 0E26                               l1880 0D38  
                             l1960 033E                               l1952 0308  
                             l1944 02D2                               l1936 02A2  
                             l1874 0DE4                               l1866 0DA0  
                             l1858 0D8C                               l1890 0D6A  
                             l1882 0D42                               l1970 03BA  
                             l1962 0354                               l1954 0310  
                             l1946 02DA                               l1938 02B4  
                             l1868 0DC0                               l1892 0D74  
                             l1884 0D4C                               l1876 0F64  
                             l1972 03C6                               l1980 0416  
                             l1964 035C                               l1956 0324  
                             l1948 02EC                               l1894 0D7E  
                             l1886 0D56                               l1878 0D22  
                             l1990 0056                               l1982 0012  
                             l1974 03D2                               l1966 0368  
                             l1958 032C                               l1896 0D88  
                             l1888 0D60                               l1984 0024  
                             l1992 0062                               l1976 03DE  
                             l1968 037A                               l1898 0CAE  
                             l1994 0074                               l1986 003A  
                             l1978 0412                               l1996 0086  
                             l1988 0052                               l1998 009E  
                             ?_isr 004D                               u1000 0324  
                             u1001 0320                               u1010 033E  
                             u1011 033A                               u1100 00BA  
                             u1020 0354                               u1101 00B6  
                             u1021 0350                               u1110 01D0  
                             u1030 037A                               u1111 01CC  
                             u1031 0376                               u1200 04FC  
                             u1040 0024                               u1120 1110  
                             u1201 04F8                               u1041 0020  
                             u1121 110C                               u1210 1016  
                             u1130 0436                               u1050 003A  
                             u1211 1012                               u1131 0432  
                             u1051 0036                               u1220 0710  
                             u1140 0454                               u1060 0052  
                             u1300 05F6                               u1221 070C  
                             u1141 0450                               u1061 004E  
                             u1230 0734                               u1150 046E  
                             u1070 0074                               u1310 0610  
                             u1231 0730                               u1151 046A  
                             u1071 0070                               u1311 060C  
                             u1240 0748                               u1160 048A  
                             u1080 0086                               u1320 0632  
                             u1400 0F3C                               u1241 0744  
                             u1161 0486                               u1081 0082  
                             u1321 062E                               u1401 0F38  
                             u1250 07B2                               u1170 04A6  
                             u1090 009E                               u1330 065C  
                             u1251 07AE                               u1171 04A2  
                             u1091 009A                               u1331 0658  
                             u1180 04C0                               u1340 067E  
                             u1260 05AC                               u1181 04BC  
                             u1341 067A                               u1261 05A8  
                             u1190 04D6                               u1350 0692  
                             u1270 05BE                               u1191 04D2  
                             u1351 068C                               u1271 05BA  
                             u1360 0694                               u1280 05E0  
                             u1281 05DC                               u1370 06AE  
                             u1290 05F4                               u1371 06AA  
                             u1291 05EE                               u1380 06D0  
                             u1381 06CC                               u1390 0F2A  
                             u1391 0F26                               _PEIE 7F96  
                      display@data 004D                        display@wait 0051  
                             _main 0F10                               _ssd0 001B  
                             _ssd1 001D                               _ssd2 001F  
                             _ssd3 0021                               indf2 0FDF  
                             fsr1l 0FE1                               fsr2l 0FD9  
                             btemp 005F                               prodh 0FF4  
                             prodl 0FF3                               start 000E  
               _increment_ust_flag 0025                   ??_zeroth_ssd_pid 004D  
                 ??_zeroth_ssd_ust 004D                       ___param_bank 0000  
                            ??_isr 004D                              ?_main 004D  
                            _EEADR 0FA9                              _INT0E 7F94  
                            _INT0F 7F91                    __end_of___lwdiv 0D22  
                            i2l113 0EB6                    __end_of___lwmod 0E5A  
                     ?_init_config 004D                              _PORTA 0F80  
                            _PORTC 0F82                              _PORTD 0F83  
                            _TRISA 0F92                              _TRISC 0F94  
                            _TRISD 0F95                       display@digit 0053  
                  __end_of_display 0DF6                              _digit 006A  
                            tablat 0FF5                              ttemp5 0060  
                            ttemp6 0063                              ttemp7 0067  
                            status 0FD8                              wtemp8 0060  
          ??_write_internal_eeprom 005A                    __initialization 0EBA  
                     __end_of_main 0F64                  ?_init_ssd_control 004D  
                           ??_main 005F                      __activetblptr 0000  
                    _first_ssd_pid 0BBC                 ??_init_ssd_control 004D  
                    _first_ssd_ust 09CC                     _second_ssd_pid 0B40  
                   _second_ssd_ust 0950                             _CANCON 0F6F  
                           _EEDATA 0FA8                             _EECON2 0FA7  
                           i2l1790 0E6A                             i2l1792 0E7C  
                           i2l1794 0E9A                             i2l1796 0EB4  
                           i2l1788 0E5C                             _RXB0D0 0F66  
                           _RXB0D1 0F67                             _RXB0D2 0F68  
                           _RXB0D3 0F69                             _RXB0D4 0F6A  
                           _RXB0D5 0F6B                             _RXB0D6 0F6C  
                           _RXB0D7 0F6D                             _RXB0IF 7D20  
                           _TXB0D0 0F46                             _TXB0D1 0F47  
                           _TXB0D2 0F48                             _TXB0D3 0F49  
                           _TXB0D4 0F4A                             _TXB0D5 0F4B  
                           _TXB0D6 0F4C                             _TXB0D7 0F4D  
                           _TRISB2 7C9A                             _TRISB3 7C9B  
      __end_of_init_digital_keypad 1196                             _can_id 000E  
                           ___wmul 10D8                          ??___lwdiv 0051  
                        ??___lwmod 0058                   __end_of_init_can 10A8  
                    can_stock@wait 005B               _ssd@ssd_display$F240 0013  
             _ssd@ssd_display$F315 002C                             clear_0 0F00  
                           isa$std 0001                     ?_first_ssd_pid 004D  
          _init_external_interrupt 1186        ??_read_ust_data_from_eeprom 004E  
                   ?_first_ssd_ust 004D                          ??_display 004F  
           __end_of_second_ssd_pid 0BBC             __end_of_second_ssd_ust 09CC  
                     __pdataCOMRAM 0034                             tblptrh 0FF7  
                           tblptrl 0FF6                             tblptru 0FF8  
                     _can_transmit 0D22                         __accesstop 0060  
          __end_of__initialization 0F06                      ___rparam_used 0001  
                   __pcstackCOMRAM 004D                       __pidataBANK0 114E  
__end_of_read_pid_data_from_eeprom 1008                    ?_second_ssd_pid 004D  
                  ?_second_ssd_ust 004D                 product_id@once_pid 003E  
        _read_ust_data_from_eeprom 0F64                            ?___wmul 004D  
        ??_init_external_interrupt 004D                    ??_first_ssd_pid 004D  
                  ??_first_ssd_ust 004D                            _ECANCON 0F77  
                          _CANSTAT 0F6E                         _field_flag 0027  
                          _BRGCON1 0F70                            _BRGCON2 0F71  
                          _BRGCON3 0F72                      _rec_cond_flag 0046  
                          _INTEDG0 7F8E        __end_of_read_digital_keypad 0CAE  
                          _RXB0DLC 0F65                            _RXB0CON 0F60  
                          _RXB0FUL 7B07                            i2u80_40 0EAE  
                          i2u80_41 0EA8                            i2u81_40 0EB0  
                          i2u76_40 0E6A                            i2u76_41 0E66  
                          i2u77_40 0E7C                            i2u77_41 0E78  
                          i2u78_40 0E90                            i2u78_41 0E8A  
                          i2u79_40 0E92                            _TXB0DLC 0F45  
                          _TXB0REQ 7A03              __end_of_third_ssd_pid 0B40  
                          _RXFCON0 0DD4              __end_of_third_ssd_ust 0950  
                __end_of_can_stock 02A2        read_internal_eeprom@address 004D  
                        ?_init_can 004D      __end_of_write_internal_eeprom 10D8  
                          __Hparam 0000                            __Lparam 0000  
                    ??_can_receive 004D                            ___lwdiv 0CAE  
                          ___lwmod 0DF6                            __pcinit 0EBA  
                          __ramtop 0600                            __ptext0 0F10  
                          __ptext1 059A                            __ptext2 10FE  
                          __ptext3 02A2                            __ptext4 0858  
                          __ptext5 08D4                            __ptext6 0950  
                          __ptext7 0F64                            __ptext8 09CC  
                          __ptext9 0012                            _display 0D8C  
                   can_stock@delay 0017                      ?_normal_stock 004D  
        write_internal_eeprom@data 0059    __end_of_init_external_interrupt 118E  
                   __pintcode_body 0E5A               end_of_initialization 0F06  
               compare_and_check@i 0052                         ??_init_can 004D  
                          int_func 0E5A                            postdec1 0FE5  
                          postinc0 0FEE                            postinc2 0FDE  
                    _interrupt_key 0029                     ??_normal_stock 005B  
              __end_of_can_receive 1058                         _product_id 0424  
                 _receive_can_data 079E             _digit@ssd_display$F241 0060  
           _digit@ssd_display$F316 0034                       _in_field_pid 0048  
                     _in_field_ust 004A                         _two_fields 059A  
     __end_of_read_internal_eeprom 1174                      ?_update_stock 004D  
                 ??_second_ssd_pid 004D                   ??_second_ssd_ust 004D  
                   __end_of___wmul 10FE                      __pidataCOMRAM 111E  
              start_initialization 0EBA                        __end_of_isr 0EBA  
                   ??_update_stock 005F                           ??___wmul 0051  
                      _can_receive 1008                        _can_payload 0001  
                      __pdataBANK0 0060  __end_of_read_ust_data_from_eeprom 0FB6  
       ?_read_pid_data_from_eeprom 004D                      ??_init_config 004D  
                      ?_product_id 004D                        __pbssCOMRAM 0001  
                 _init_ssd_control 1174                          _can_stock 0012  
             __end_of_normal_stock 0424                   ___lwdiv@dividend 004D  
                        __pintcode 0008                        ?_two_fields 004D  
                         ?___lwdiv 004D                           ?___lwmod 0054  
                        _disp_flag 0042              __end_of_first_ssd_pid 0C38  
                   _zeroth_ssd_pid 0A48              __end_of_first_ssd_ust 0A48  
                   _zeroth_ssd_ust 0858                           ?_display 004D  
                _compare_and_check 06DA                   ___lwdiv@quotient 0051  
              __end_of_init_config 114E                 ?_compare_and_check 004D  
             _read_internal_eeprom 1162           compare_and_check@confirm 0050  
                   ___wmul@product 0051                         ?_can_stock 004D  
              ??_compare_and_check 004E           ?_init_external_interrupt 004D  
                         _PIR2bits 0FA1                           _RXB0EIDH 0F63  
                         _RXB0EIDL 0F64                           _RXB0SIDH 0F61  
                         _RXB0SIDL 0F62           __end_of_receive_can_data 0858  
                         _RXF0EIDH 0F02                           _RXF0EIDL 0F03  
            _write_internal_eeprom 10A8                           _RXF0SIDH 0F00  
                         _RXF0SIDL 0F01                           _TXB0EIDH 0F43  
                         _TXB0EIDL 0F44                           _TXB0SIDH 0F41  
                         _TXB0SIDL 0F42             __end_of_zeroth_ssd_pid 0AC4  
           __end_of_zeroth_ssd_ust 08D4               normal_stock@once_ust 0040  
                ___wmul@multiplier 004D          __end_of_compare_and_check 079E  
read_digital_keypad@detection_type 004D                      ?_can_transmit 004D  
             __end_of_update_stock 111E              ?_read_internal_eeprom 004D  
                        copy_data0 0ECE                          copy_data1 0EEE  
              _init_digital_keypad 118E                         _EECON1bits 0FA6  
                         __Hrparam 0000                           __Lrparam 0000  
             ?_init_digital_keypad 004D                    ?_zeroth_ssd_pid 004D  
                  ?_zeroth_ssd_ust 004D                        _init_config 1138  
                   ??_can_transmit 004E                    ___lwdiv@divisor 004F  
                  ___lwdiv@counter 0053                           __ptext10 0D22  
                         __ptext11 0DF6                           __ptext20 0D8C  
                         __ptext12 0CAE                           __ptext21 079E  
                         __ptext13 0424                           __ptext30 118E  
                         __ptext22 06DA                           __ptext14 0A48  
                         __ptext31 1058                           __ptext23 1162  
                         __ptext15 10A8                           __ptext24 1008  
                         __ptext16 0AC4                           __ptext25 10D8  
                         __ptext17 0B40                           __ptext26 0C38  
                         __ptext18 0FB6                           __ptext27 1138  
                         __ptext19 0BBC                           __ptext28 1174  
                         __ptext29 1186                      _third_ssd_pid 0AC4  
                    _third_ssd_ust 08D4                           _init_can 1058  
                      ??_can_stock 005B            read_digital_keypad@once 004C  
           ?_write_internal_eeprom 0059                           isa$xinst 0000  
                     ?_can_receive 004D                           int$flags 005F  
            ??_init_digital_keypad 004D           __end_of_init_ssd_control 1186  
      ??_read_pid_data_from_eeprom 004E                       _normal_stock 02A2  
                     ??_product_id 005B                compare_and_check@ch 004F  
           ??_read_internal_eeprom 004D                     ?_third_ssd_pid 004D  
                   ?_third_ssd_ust 004D                           intlevel2 0000  
                 ___lwmod@dividend 0054                       ??_two_fields 005F  
               __end_of_product_id 059A                _read_digital_keypad 0C38  
       ?_read_ust_data_from_eeprom 004D                    ___lwmod@divisor 0056  
                  ___lwmod@counter 0058               ?_read_digital_keypad 004D  
               __end_of_two_fields 06DA          _read_pid_data_from_eeprom 0FB6  
     write_internal_eeprom@address 005A               __end_of_can_transmit 0D8C  
